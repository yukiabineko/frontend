{"version":3,"sources":["store/Store.js","users/setting.js","users/UserPagination.jsx","users/PcIndex.jsx","users/PhoneIndex.jsx","users/Index.jsx","Login.jsx","users/New.jsx","users/Edit.jsx","users/EmployeeEdit.jsx","users/MyPagination.jsx","users/History.jsx","users/Show.jsx","users/HistoryPage.jsx","users/EmpShow.jsx","users/PhoneEmpShow.jsx","setting.js","users/Reservation.jsx","useScript.js","users/Order.jsx","items/MyPagination.jsx","items/PcIndex.jsx","items/PhoneIndex.jsx","items/Index.jsx","items/New.jsx","items/Edit.jsx","items/Process.jsx","items/setItemData.js","orders/PcIndex.jsx","orders/PhoneIndex.jsx","orders/Index.jsx","orders/setItem.js","orders/New.jsx","orders/Edit.jsx","images/fishs2.jpg","customer/PCIndex.jsx","customer/phoneStyle.js","customer/PhoneIndex.jsx","customer/Index.jsx","customer/setting.js","customer/Show.jsx","customer/PhoneShow.jsx","customer/NoData.jsx","customer/confirm.jsx","customer/PhoneConfirm.jsx","customer/Info.jsx","customer/PhneInfo.jsx","customer/PcMovie.jsx","customer/PhoneMovie.jsx","customer/Movie.jsx","shopping/settiing.js","shopping/PcIndex.jsx","shopping/PhoneIndex.jsx","shopping/Index.jsx","shopping/Show.jsx","shopping/Reservation.jsx","sale/setting.js","Excel.js","sale/PcIndex.jsx","sale/PhoneIndex.jsx","sale/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["init_data","userkey","userData","orderItem","buyCarts","historyData","pageData","chartData","youtubeData","keyReducer","state","action","data","loginReducer","newData","slice","splice","push","user","logoutReducer","ordersReducer","ordersStockChangeReducer","datas","forEach","name","stock","Number","num","cartReducer","cartResetReducer","cartUpdateReducer","items","item","cartDeleteReducer","userHistoryReducer","history","searchReducer","chartReducer","youtubeReducer","keySend","type","sendLoginData","cartsAdd","ordersSend","ordersStockChange","cartDeleteCart","index","cartUpdate","historyDataSend","searchSend","chartSend","youtubeSeearchSend","createStore","ordercheck","count","date","status","shopping_date","orderHistoryStatus","className","daySetting","newDate","Date","getFullYear","getMonth","getDate","todayParams","today","year","month","day","customerTodayOrders","allData","todayOrder","createDate","c_year","c_month","c_day","customerTomorrowOrders","tomorrowOrder","setDate","customerOrders","Orders","sort","a","b","customers","users","customerUsers","length","admin","totalMoneyCalc","orders","total","order","price","statusView","withRouter","connect","props","useState","group","setGroup","localData","JSON","parse","localStorage","getItem","active","No","paginationLength","Math","round","number","Pagination","Item","onClick","sendNumber","Last","groupPlus","First","groupMinus","paginationSend","userLink","border","background","color","outline","fontWeight","textDecoration","CircularLoading","circularLoading","distance","dotSize","page","setPage","localBaseData","setState","progress","setProgress","data-testid","Row","Col","md","span","offset","Button","variant","axios","post","then","res","setItem","stringify","updateData","catch","error","console","log","id","paginationNo","Table","striped","bordered","hover","map","value","style","i","sendid","user_id","dispatch","userShowaccess","href","email","target","rel","tel","editPage","window","confirm","delete","response","alert","message","deleteUser","buttonWidth","width","marginRight","class","colSpan","editIdget","minDeviceWidth","maxDeviceWidth","password","setProgres","array","inputText","e","Form","onSubmit","preventDefault","keyaction","data2","get","removeItem","err","Group","Label","Control","placeholder","onChange","required","display","show","setShow","confirmation","userInput","password_confirmation","key_data","pattern","patch","id_data","getuserData","first","last","floor","seachDatarequest","process","loginUserCheck","create","rowSpan","timeSetting","baseData","hour","getHours","min","getMinutes","toDoubleDigits","ulArea","marginTop","image","height","Image","src","alt","roundedCircle","receiving_time","useScript","url","useEffect","orderArea","document","getElementById","script","createElement","dataset","key","partial","appendChild","removeChild","itemLink","imageShow","paginationStyle","marginBottom","modalData","itemData","openModal","category","processItem","deleteItem","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","rounded","processes","info","itemEditIdget","processIdget","file","setImage","itemInput","params","FormData","append","headers","File","label","multiple","accept","files","as","cols","rows","setProcess","options","selectedOption","setSelectedOption","obj","isMulti","defaultValue","processing_name","deleteProcess","deleteOrder","margin","mt-3","orderEditIdget","formSelectItems","dochange","sendData","defaultvalue","getitemData","rightAreaTable","overflow","nameTitle","padding","maxWidth","buycheck","fontSize","textAlign","borderLeft","buttonHeight","fixItemData","sendCustomerData","buyItem","icon","faCartPlus","showItemInfo","faYoutube","itemTotalMoney","sendCartItemToConfirm","faCashRegister","HeaderImagePhone","ArticlePhone","UlPhone","listStyle","LlPhone","phoneBuyCartMain","margimBottom","sameItemCheck","sameItemCount","selectItemCheck","localstorageChange","cartValidate","check","time","searchItem","table","propData","minusNumber","changeItemData","stockOption","split","max","NoData","title","fontFamily","th","orderData","cartNum","setNumber","timesChange","carts","faShoppingCart","faFish","faYenSign","faCalculator","faUtensils","size","custom","currentNumber","changeNumber","calcNumber","cartItemName","stateData","dataNumber","propOrders","buycart","thiscartData","delAction","numArray","doSelect","selectNumber","n","action2","page_data","videoId","snippet","thumbnails","medium","description","PhoneMovie","viewDataBranch","todayOdrersChecker","shoppings","shopping","todayOrderExisting","todayObjects","t_date","t_year","t_month","t_day","userRecord","record","customButton","borderBottom","shopingData","orderStatus","pay","faCheck","onMouseOver","hoverButton","onMouseOut","outButton","showShoppingStatus","user_name","faEnvelope","faMobileAlt","sendShoppingData","font","sendStatusNumber","statusLayout","faTruck","faClipboard","totalSales","合計","salesRate","allTotal","s2ab","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","excelExport","array1","keyArray","Object","keys","keyCount","opts","wb","sheet","sheets","SheetNames","Sheets","sheet_to_workbook","XLSX","utils","aoa_to_sheet","wb_out","write","blob","Blob","saveAs","ResponsiveContainer","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","week","paytotal","userid","editId","deleteId","itemEditId","processId","OrderEditId","customerItem","shoppingShow","cartItem","changeItem","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faUser","to","faUsers","faStore","faChartBar","faClipboardCheck","textContent","$","fadeIn","faCreditCard","cartAction","faDoorOpen","faDoorClosed","exact","path","render","getEditId","component","userNew","UserShow","PhoneEmpShow","UserOrder","OrderEdit","getItemEditId","getProcessId","ItemNew","getOrderEditId","OrderNew","CustomerItemInfo","CustomerItemPhoneInfo","Movie","shoppingData","SalesIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","datastore","onBeforeunload"],"mappings":"uaAGIA,EAAW,CACbC,QAAS,KACTC,SAAU,GACVC,UAAW,KACXC,SAAU,GACVC,YAAa,KACbC,SAAU,KACVC,UAAW,KACXC,YAAa,MAoCTC,EAAY,SAACC,EAAOC,GAGvB,MAAM,CACLV,QAHUU,EAAOC,KAIjBV,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAGjBK,EAAe,SAACH,EAAOC,GAC3B,IAAIG,EAAUJ,EAAMR,SAASa,QAI7B,OAHAD,EAAQE,OAAO,GACfF,EAAQG,KAAKN,EAAOO,MAEd,CACJjB,QAASS,EAAMT,QACfC,SAAUY,EACVX,UAAWO,EAAMP,UACjBC,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAGjBW,EAAe,SAACT,EAAOC,GACzB,IAAIG,EAAUJ,EAAMR,SAASa,QAE7B,OADAD,EAAQE,OAAO,GACT,CACJd,SAAUY,EACVV,SAAUM,EAAMN,SAASC,YAAaK,EAAML,cAG5Ce,EAAgB,SAACV,EAAOC,GAC5B,IAAIC,EAAOF,EAAMP,UAGjB,OAFAS,EAAOD,EAAOC,KAER,CACJX,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWS,EACXR,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAIjBa,EAA2B,SAACX,EAAOC,GACvC,IAAIW,EAAQZ,EAAMP,UAAUY,QAQ5B,OAPAO,EAAMC,SAAQ,SAACX,GACb,GAAGA,EAAKY,OAASb,EAAOa,KAAK,CAC3B,IAAIC,EAAQC,OAAOd,EAAKa,OACxBA,GAASC,OAAOf,EAAOgB,KACvBf,EAAKa,MAAQA,MAGX,CACJxB,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWmB,EACXlB,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAGjBoB,EAAc,SAAClB,EAAOC,GAC1B,IAAIC,EAAOF,EAAMN,SAASW,QAE1B,OADAH,EAAKK,KAAKN,EAAOC,MACX,CACJX,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUQ,EACVP,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAGjBqB,EAAmB,SAACnB,EAAOC,GAC/B,IAAIC,EAAOF,EAAMN,SAASW,QAE1B,OADAH,EAAKI,OAAO,GACN,CACJf,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUQ,EACVP,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAGjBsB,EAAoB,SAACpB,EAAOC,GAChC,IAAIC,EAAOF,EAAMN,SAASW,QAK1B,OAJAH,EAAKI,OAAO,GACZL,EAAOoB,MAAMR,SAAQ,SAACS,GACpBpB,EAAKK,KAAKe,MAEN,CACJ/B,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUQ,EACVP,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAGjByB,EAAoB,SAACvB,EAAOC,GAChC,IAAIW,EAAQZ,EAAMN,SAASW,QAG3B,OAFAO,EAAMN,OAAOL,EAAOgB,IAAK,GAEnB,CACJ1B,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUkB,EACVjB,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAIjB0B,EAAqB,SAACxB,EAAOC,GACjC,IAAIwB,EAAUxB,EAAOC,KACrB,MAAM,CACJX,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUM,EAAMN,SAChBC,YAAa8B,EACb7B,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAIjB4B,EAAgB,SAAC1B,EAAOC,GAC5B,IAAIC,EAAOD,EAAOC,KAElB,MAAM,CACJX,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUM,EACVL,UAAWG,EAAMH,UACjBC,YAAaE,EAAMF,cAIhB6B,EAAe,SAAC3B,EAAOC,GAC5B,IAAIC,EAAOD,EAAOC,KAElB,MAAM,CACJX,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWK,EACXJ,YAAaE,EAAMF,cAIhB8B,EAAiB,SAAC5B,EAAOC,GAC9B,IAAIC,EAAOD,EAAOC,KAEjB,MAAM,CACLX,QAASS,EAAMT,QACfC,SAAUQ,EAAMR,SAChBC,UAAWO,EAAMP,UACjBC,SAAUM,EAAMN,SAChBC,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,SAChBC,UAAWG,EAAMH,UACjBC,YAAaI,IAIJ2B,EAAU,SAAC3B,GACtB,MAAM,CACJ4B,KAAM,MACN5B,KAAMA,IAGI6B,EAAgB,SAACvB,GAC7B,MAAM,CACJsB,KAAK,QACLtB,KAAMA,IAQGwB,EAAW,SAACV,GACvB,MAAM,CACJQ,KAAM,UACN5B,KAAMoB,IAGGW,EAAa,SAAC/B,GACzB,MAAM,CACJ4B,KAAM,QACN5B,KAAMA,IAGGgC,EAAoB,SAACpB,EAAMG,GACtC,MAAM,CACJa,KAAM,aACNhB,KAAMA,EACNG,IAAKA,IAQIkB,EAAiB,SAACC,GAC7B,MAAM,CACJN,KAAM,aACNb,IAAKmB,IAGIC,EAAa,SAAChB,GACzB,MAAM,CACJS,KAAM,aACNT,MAAOA,IAGEiB,EAAkB,SAACpC,GAC9B,MAAM,CACJ4B,KAAM,cACN5B,KAAMA,IAGGqC,EAAa,SAACrC,GACzB,MAAM,CACJ4B,KAAM,aACN5B,KAAMA,IAIGsC,EAAY,SAACtC,GACxB,MAAM,CACJ4B,KAAM,QACN5B,KAAMA,IAIGuC,EAAqB,SAACvC,GACjC,MAAM,CACJ4B,KAAM,UACN5B,KAAMA,IAGKwC,eAlTM,WAA8B,IAA7B1C,EAA4B,uDAApBV,EAAWW,EAAS,uCAChD,OAAQA,EAAO6B,MACb,IAAK,MACH,OAAO/B,EAAWC,EAAOC,GAC3B,IAAK,QACH,OAAOE,EAAaH,EAAOC,GAC7B,IAAK,SACH,OAAOQ,EAAcT,EAAOC,GAC9B,IAAK,QACH,OAAOS,EAAcV,EAAOC,GAC9B,IAAK,aACH,OAAOU,EAAyBX,EAAOC,GACzC,IAAK,UACH,OAAOiB,EAAYlB,EAAOC,GAC5B,IAAK,YACH,OAAOkB,EAAiBnB,EAAOC,GACjC,IAAK,aACH,OAAOsB,EAAkBvB,EAAOC,GAClC,IAAK,aACH,OAAOmB,EAAkBpB,EAAOC,GAClC,IAAK,cACH,OAAOuB,EAAmBxB,EAAOC,GACnC,IAAK,aACH,OAAOyB,EAAc1B,EAAOC,GAC9B,IAAK,QACH,OAAO0B,EAAa3B,EAAOC,GAC7B,IAAK,UACH,OAAO2B,EAAe5B,EAAOC,GAC/B,QACE,OAAOD,M,OCvCA2C,EAAa,SAAC/B,GACxB,IAAIgC,EAAQ,EACRC,EAAO,KACZ,OAAGjC,GACDA,EAAMC,SAAQ,SAAAX,GACS,IAAhBA,EAAK4C,QAAgC,IAAhB5C,EAAK4C,SACzBF,GAAS,EACTC,EAAO3C,EAAK6C,kBAGb,CACHH,MAAQA,EAAQ,qBAChBC,KAAMA,IAIH,4BAKEG,EAAqB,SAACF,GACjC,OAAQA,GACN,KAAK,EAEL,KAAK,EACH,OAAO,qBAAKG,UAAU,qBAAf,gCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,mBAAf,wCAOAC,EAAa,SAACL,GACzB,IAAIM,EAAU,IAAIC,KAAKP,GAIvB,OAHWM,EAAQE,cAGL,UAFFF,EAAQG,WAAa,GAEL,SADlBH,EAAQI,UACoB,UAIlCC,EAAa,WAEjB,IAAMC,EAAQ,IAAIL,KAIlB,MAAM,CACJM,KAJWD,EAAMJ,cAKjBM,MAJYF,EAAMH,WAAa,EAK/BM,IAJUH,EAAMF,YAUPM,EAAsB,SAACC,GAClC,IAAIC,EAAa,GAejB,OAZGD,GACDA,EAAQjD,SAAQ,SAACX,GAEf,IAAM8D,EAAa,IAAIZ,KAAKlD,EAAK6C,eAC3BkB,EAASD,EAAWX,cACpBa,EAAUF,EAAWV,WAAa,EAClCa,EAAQH,EAAWT,UACrBC,IAAcE,OAASO,GAAUT,IAAcG,QAAUO,GAAWV,IAAcI,MAAQO,GAC5FJ,EAAWxD,KAAKL,MAIf6D,GAKIK,EAAyB,SAACN,GACrC,IAAIO,EAAgB,GACdZ,EAAQ,IAAIL,KAClBK,EAAMa,QAAQb,EAAMF,UAAY,GAChC,IAAMG,EAAOD,EAAMJ,cACbM,EAAQF,EAAMH,WAAa,EAC3BM,EAAMH,EAAMF,UAelB,OAZGO,GACDA,EAAQjD,SAAQ,SAACX,GAEf,IAAM8D,EAAa,IAAIZ,KAAKlD,EAAK6C,eAC3BkB,EAASD,EAAWX,cACpBa,EAAUF,EAAWV,WAAa,EAClCa,EAAQH,EAAWT,UACrBG,IAASO,GAAUN,IAAUO,GAAWN,IAAQO,GAClDE,EAAc9D,KAAKL,MAIlBmE,GASIE,GAAiB,SAACT,GAC7B,IAAIU,EAAS,GACPf,EAAQ,IAAIL,KACZM,EAAOD,EAAMJ,cACbM,EAAQF,EAAMH,WAAa,EAC3BM,EAAMH,EAAMF,UA2BlB,OAvBGO,GACDA,EAAQjD,SAAQ,SAACX,GAEf,IAAM8D,EAAa,IAAIZ,KAAKlD,EAAK6C,eAC3BkB,EAASD,EAAWX,cACpBa,EAAUF,EAAWV,WAAa,EAClCa,EAAQH,EAAWT,UACrBG,IAASO,GAAUN,IAAUO,GAAWN,IAAQO,GAIlDK,EAAOjE,KAAKL,MAIlBsE,EAAOC,MAAK,SAASC,EAAGC,GACtB,OAAGD,EAAE3B,cAAgB4B,EAAE5B,eACb,EAGD,KAGJyB,GAIII,GAAW,SAACC,GACvB,IAAIC,EAAgB,GASpB,OARGD,EAAME,OAAS,GAChBF,EAAMhE,SAAQ,SAACL,IACO,IAAfA,EAAKwE,OACRF,EAAcvE,KAAKC,MAKlBsE,GAIIG,GAAgB,SAACC,GAC5B,IAAIC,EAAQ,EAIZ,OAHAD,EAAOrE,SAAQ,SAACuE,GACdD,GAASC,EAAMC,MAAQD,EAAMnE,OAExBkE,GAGIG,GAAa,SAACxC,GACzB,OAAQA,GACN,KAAK,EACH,OAAO,qBAAKG,UAAU,UAAf,gCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,aAAf,kDACT,KAAK,EACH,OAAO,qBAAKA,UAAU,YAAf,oD,UCjFEsC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA1FF,SAACC,GAAQ,MAENC,mBAAS,GAFH,mBAEzBC,EAFyB,KAElBC,EAFkB,KAGzBC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAE5CC,EAAST,EAAMU,GAAI,EACnB9E,EAAQ,GAIZ,GAAGwE,EAAU,CACX,IAAIO,EAAoBxB,GAAUiB,GAAWd,OAC7C,GAAa,IAAVY,GAAgBU,KAAKC,MAAMF,GAAoB,GAAKC,KAAKC,MAAMF,EAAmB,IAAM,EAAG,CAC5F,IAD6F,IAAD,WACnFG,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAU,EAAGA,IAAW,EAApCA,GAOTlF,EAAMd,KACJ,cAACiG,GAAA,EAAWI,KAAZ,CAAiBF,QAAS,kBAAIG,aAI7B,GAAc,IAAVlB,GAAgBU,KAAKC,MAAMF,GAAmB,GAAMC,KAAKC,MAAMF,EAAmB,GAAK,EAC9F,IADmG,IAAD,WACzFG,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAUF,KAAKC,MAAMF,EAAkB,GAAIG,IAAW,EAAlEA,QASN,GAAGZ,GAAQ,GAAKS,EAAiC,GAAbT,EAAQ,GAAS,EAAG,CAC3DtE,EAAMd,KACJ,cAACiG,GAAA,EAAWM,MAAZ,CAAkBJ,QAAS,kBAAIK,QAEjC,IAJ2D,eAIlDR,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAiB,EAARZ,EAAY,EAAGY,GAAyB,GAAbZ,EAAQ,GAASY,IAAW,EAAhEA,GAONH,EAAgC,GAAXT,EAAQ,GAAM,GACrCtE,EAAMd,KACH,cAACiG,GAAA,EAAWI,KAAZ,CAAiBF,QAAS,kBAAIG,aAK/B,GAAGlB,GAAQ,GAAKS,EAAgC,GAAXT,EAAQ,GAAO,EAAG,CAC1DtE,EAAMd,KACJ,cAACiG,GAAA,EAAWM,MAAZ,CAAkBJ,QAAS,kBAAIK,QAEjC,IAJ0D,eAIjDR,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAiB,EAARZ,EAAY,EAAGY,GAAWF,KAAKC,MAAMF,EAAkB,GAAMG,IAAW,EAAjFA,IAgBf,IAAMI,EAAY,SAAC1F,GACfwE,EAAMuB,eAAe/F,IAGnB8F,EAAa,WACjBnB,EAASD,EAAO,IAGXkB,EAAY,WACjBjB,EAASD,EAAQ,IAEnB,OACC,mCACC,cAACa,GAAA,EAAD,UAAcnF,U,SCnFZ4F,GAAU,CACdC,OAAQ,OACRC,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,OACZC,eAAgB,aAIZC,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KAuMIpC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAnMzB,SAAiBC,GAAO,IAAD,EACCC,mBAAS,GADV,mBAChBkC,EADgB,KACVC,EADU,KAElBC,EAAgBhC,KAAKC,MAAMC,aAAaC,QAAQ,UAChDJ,EAA6B,MAAjBiC,EAAuB,GAAKA,EAAczH,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GAH/D,EAIElC,mBAAS,CAC/BxF,KAAM2F,GAAuB,KALT,mBAIhB7F,EAJgB,KAIV+H,EAJU,OAOSrC,oBAAS,GAPlB,mBAOhBsC,EAPgB,KAONC,EAPM,KAmHtB,OACE,sBAAKhF,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,YAAhB,wCAGF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sBAA3C,UACE,cAACuF,EAAA,EAAD,CACGC,QAAQ,UACRxF,UAAU,OACVyD,QA9DS,WAClBuB,GAAY,GAEZS,IACCC,KAAK,oDAAoDlD,EAAMlG,SAC/DqJ,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD,IAAI8I,EAA8B,MAAjBlB,EAAuB,GAAKA,EAAczH,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GACtFG,EAAS,CACP7H,KAAM8I,GAAyB,KAEjCf,GAAY,MAEfgB,OAAM,SAACC,GACJC,QAAQC,IAAIF,OA6CV,2BAOc,IAAZlB,EACA,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAACuE,GAAD,SAIJ,GAEF,cAAC,GAAD,CACErB,GAAIyB,EACJZ,eAAgB,SAAC/F,GAAD,OA5CH,SAACA,GACpB,OAAQA,GACN,KAAK,EACH8G,EAAS,CACP7H,KAAM4F,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAY,EAANY,EAAe,EAANA,EAAS,KAG1E,MACF,QACE8G,EAAS,CACP7H,KAAM4F,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAY,EAANY,EAAU,EAAU,EAANA,EAAU,EAAK,KAIzF4G,EAAQ5G,GA8BqBqI,CAAarI,MAEnCjB,EAAME,KAAK6E,OAAS,EAEnB,eAACwE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIzG,UAAU,8CAAd,0BACA,oBAAIA,UAAU,8CAAd,wDACA,oBAAIA,UAAU,8CAAd,sCACA,oBAAIA,UAAU,qDAGlB,gCACG2B,GAAU5E,EAAME,MAAMyJ,KAAI,SAACC,GAAD,OACzB,+BACG,oBAAI3G,UAAU,2BAAd,SACE,wBACE4G,MAAO5C,GACPP,QAAS,SAACoD,GAAD,OA/ER,SAACT,GACvB,IAAMU,EAAS,CAACC,QAASX,GACzBX,IACCC,KADD,sDAC6DoB,GAC5DnB,MAAK,SAACC,GACJ,IAAM5I,EAASqC,EAAgBuG,EAAI3I,MACnCuF,EAAMwE,SAAShK,GACfwF,EAAMhE,QAAQlB,KAAK,qBAGrB0I,OAAM,SAACC,GACLC,QAAQC,IAAIF,MAoEoBgB,CAAeN,EAAMP,KAFrC,SAGEO,EAAM9I,SAEX,oBAAKmC,UAAU,2BAAf,SACE,mBAAGA,UAAU,mBAAmBkH,KAAI,iBAAYP,EAAMQ,OAASC,OAAO,SAASC,IAAI,sBAAnF,SAA0GV,EAAMQ,UAElH,qBAAInH,UAAU,2BAAd,yBACE,mBAAGA,UAAU,mBAAmBkH,KAAI,cAASP,EAAMW,KAAOF,OAAO,SAASC,IAAI,sBAA9E,SAAqGV,EAAMW,SAE7G,qBAAItH,UAAU,cAAd,UACE,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OAlJZT,EAkJ0BO,EAAMP,GAjJhD5D,EAAM+E,SAASnB,QACf5D,EAAMhE,QAAQlB,KAAK,wBAFJ,IAAC8I,GAmJGpG,UAAU,OAHZ,0BAMA,cAACuF,EAAA,EAAD,CACEC,QAAQ,SACR/B,QAAS,SAACoD,GAAD,OAjJ9B,SAAoBA,GAChBW,OAAOC,QAAQ,6EAChBhC,IACEiC,OADF,sDACwDb,GAAI,CAAC5J,KAAMuF,EAAMlG,UACvEqJ,MAAK,SAACgC,GAGNlC,IAAMC,KAAK,oDAAoDlD,EAAMlG,SAChEqJ,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD2H,EAAQ,GACR,IAAImB,EAA8B,MAAjBlB,EAAuB,GAAKA,EAAczH,MAAM,EAAG,GACpEwK,MAAMD,EAAS1K,KAAK4K,SACpB/C,EAAS,CACP7H,KAAM8I,GAAyB,KAEjCf,GAAY,MAEfgB,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAInBD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAyHc6B,CAAWnB,EAAMP,KAC/BpG,UAAU,OAHZ,+BApBK2G,EAAM9I,cA+BrB,6EC7MNmG,GAAU,CACdC,OAAQ,OACRC,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,OACZC,eAAgB,aAGZyD,GAAY,CAChBC,MAAO,MACPC,YAAY,MAIR1D,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KAoNIpC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA/MzB,SAAoBC,GAAO,IAAD,EACFC,mBAAS,GADP,mBACnBkC,EADmB,KACbC,EADa,KAErBC,EAAgBhC,KAAKC,MAAMC,aAAaC,QAAQ,UAChDJ,EAA6B,MAAjBiC,EAAuB,GAAKA,EAAczH,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GAH5D,EAIDlC,mBAAS,CAC9BxF,KAAM2F,GAAuB,KALP,mBAInB7F,EAJmB,KAIb+H,EAJa,OAOMrC,oBAAS,GAPf,mBAOnBsC,EAPmB,KAOTC,EAPS,KAkHzB,OACE,sBAAKhF,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,YAAhB,yCAIW,IAAZF,EACK,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIJ,GAGJ,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACRxF,UAAU,OACVyD,QAvEe,WACnBuB,GAAY,GACZS,IACCC,KAAK,oDAAoDlD,EAAMlG,SAC/DqJ,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD,IAAI8I,EAAahD,aAAaC,QAAQ,SACtC8B,EAAS,CACP7H,KAAM8I,GAAyB,KAEjCf,GAAY,MAEfgB,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAuDd,0BAME,cAAC,GAAD,CACE/C,GAAIyB,EACJZ,eAAgB,SAAC/F,GAAD,OA5CH,SAACA,GACpB,OAAQA,GACN,KAAK,EACH8G,EAAS,CACP7H,KAAM4F,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAY,EAANY,EAAe,EAANA,EAAS,KAG1E,MACF,QACE8G,EAAS,CACP7H,KAAM4F,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAY,EAANY,EAAU,EAAU,EAANA,EAAU,EAAK,KAIzF4G,EAAQ5G,GA8BqBqI,CAAarI,MAGxC,qBAAKkK,MAAM,aACX,qBAAKlI,UAAU,iBAAf,SACKjD,EAAME,KAAK6E,OAAS,EACnB,cAACwE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,SACE,gCACG9E,GAAU5E,EAAME,MAAMyJ,KAAI,SAACC,GAAD,OACzB,6BACE,cAACL,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACE,kCACE,+BACE,oBAAIxG,UAAU,8CAAd,0BACA,oBAAIA,UAAU,2BAAd,SACE,wBACE4G,MAAO5C,GACPP,QAAS,SAACoD,GAAD,OA5Eb,SAACT,GACvB,IAAMU,EAAS,CAACC,QAASX,GACzBX,IACCC,KADD,sDAC6DoB,GAC5DnB,MAAK,SAACC,GACJ,IAAM5I,EAASqC,EAAgBuG,EAAI3I,MACnCuF,EAAMwE,SAAShK,MAGjBgJ,OAAM,SAACC,GACLC,QAAQC,IAAIF,MAEdzD,EAAMhE,QAAQlB,KAAK,wBAgEoB2J,CAAeN,EAAMP,KAFrC,SAGEO,EAAM9I,YAIZ,+BACE,oBAAImC,UAAU,8CAAd,wDACA,oBAAKA,UAAU,2BAAf,SACE,mBAAGA,UAAU,mBAAmBkH,KAAI,iBAAYP,EAAMQ,OAASC,OAAO,SAASC,IAAI,sBAAnF,SAA0GV,EAAMQ,aAIpH,+BACE,oBAAInH,UAAU,8CAAd,sCACA,oBAAKA,UAAU,2BAAf,SACE,mBAAGA,UAAU,mBAAmBkH,KAAI,cAASP,EAAMW,KAAOF,OAAO,SAASC,IAAI,sBAA9E,SAAqGV,EAAMW,WAK/G,6BACI,qBAAIa,QAAQ,IAAZ,UACE,cAAC5C,EAAA,EAAD,CACEC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OA1JpBT,EA0JkCO,EAAMP,GAzJxD5D,EAAM+E,SAASnB,QACf5D,EAAMhE,QAAQlB,KAAK,wBAFJ,IAAC8I,GA2JWQ,MAAOmB,GAHT,0BAMA,cAACxC,EAAA,EAAD,CACEC,QAAQ,SACR/B,QAAS,SAACoD,GAAD,OAzJtC,SAAoBA,GAChBW,OAAOC,QAAQ,6EAChBhC,IACEiC,OADF,sDACwDb,GAAI,CAAC5J,KAAMuF,EAAMlG,UACvEqJ,MAAK,SAACgC,GAGNlC,IAAMC,KAAK,oDAAoDlD,EAAMlG,SAChEqJ,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD2H,EAAQ,GACR,IAAImB,EAA8B,MAAjBlB,EAAuB,GAAKA,EAAczH,MAAM,EAAG,GACpEwK,MAAMD,EAAS1K,KAAK4K,SACpB/C,EAAS,CACP7H,KAAM8I,GAAyB,KAEjCf,GAAY,MAEfgB,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAInBD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAiIsB6B,CAAWnB,EAAMP,KAC/BQ,MAAOmB,GAHT,qCApCHpB,EAAM9I,aAoDrB,0E,oBClMGyE,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAhCzB,SAAeC,GAQbC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAMxB,IAAMiK,EAAW,SAACnB,GAChB5D,EAAM4F,UAAUhC,GAChB5D,EAAMhE,QAAQlB,KAAK,gBAGtB,OACE,gCACG,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACC,cAAC,GAAD,CACEd,SAAU,SAACV,GAAD,OAAKU,EAASV,QAI5B,cAAC,KAAD,CAAYyB,eAAgB,IAA5B,SACE,cAAC,GAAD,CACEf,SAAU,SAACV,GAAD,OAAKU,EAASV,e,4BCzB5BtC,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KA6MIpC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAzMX,SAACC,GAAS,IAAD,EAEGC,mBAAS,CAChC0E,MAAO,GACPoB,SAAU,KAJU,mBAEhBxL,EAFgB,KAET+H,EAFS,OAMOrC,oBAAS,GANhB,mBAMhBsC,EANgB,KAMPyD,EANO,KAetB/F,oBANgB,WACd,IACIgG,EAAQ,GACZA,EAAMnL,KAFK,CAACO,KAAM,GAAIsJ,MAAO,KAG7BpE,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAU2C,OAG/C,IA+GMC,EAAY,SAACC,GACjB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAM8I,MAE7B,OACC,qCACC,qBAAK3G,UAAU,wBAAf,SACI,oBAAIA,UAAU,6BAA6BiF,cAAY,aAAvD,wCAGF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,6BAA3C,WAGe,IAAZ+E,EACC,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIJ,GAEA,eAAC4I,GAAA,EAAD,CAAMC,SAtIM,SAACF,GAEnBA,EAAEG,iBACFN,GAAW,GACX,IAAIvL,EAAO,CACTkK,MAAOpK,EAAMoK,MACboB,SAAUxL,EAAMwL,UAElB9C,IAAMC,KAAK,iDAAkDzI,GAC1D0I,MAAK,SAAUgC,GAEd,GAAGA,EAAS1K,KAAKY,KAAK,CAClB,IAAIb,EAAS8B,EAAc6I,EAAS1K,MACpCuF,EAAMwE,SAAShK,GAEf4K,MAAM,oDAEN,IAAImB,EAAYnK,EAAQ3B,GACxBuF,EAAMwE,SAAS+B,GAGf,IAAIC,EAAQ,CACVjC,QAASY,EAAS1K,KAAKmJ,GACvBpI,IAAK,GAEPyH,IACKC,KAAK,oDAAoDzI,GACzD0I,MAAK,SAACC,IACsB,IAAxB+B,EAAS1K,KAAK8E,OACfgB,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,UAIpD+I,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEpBR,IAAMC,KAAK,uDAAwDsD,GAClErD,MAAK,SAAUgC,GACd,IAAI3K,EAASsC,EAAWqI,EAAS1K,MACjCuF,EAAMwE,SAAShK,MAEhBgJ,OAAM,WACL4B,MAAM,YAGTnC,IACEwD,IAAI,+CACJtD,MAAK,SAACC,GACL7C,aAAamG,WAAW,SACxBpE,EAASc,EAAI3I,MACb8F,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,UAElD+I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGhBR,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACZ+F,aAAaC,QAAQ,WAAaD,aAAaC,QAAQ,WAAoC,IAAxB2E,EAAS1K,KAAK8E,OAClFyG,GAAW,GAEXhG,EAAMhE,QAAQlB,KAAK,YAEbyF,aAAaC,QAAQ,YAAqC,IAAxB2E,EAAS1K,KAAK8E,OACtDS,EAAMhE,QAAQlB,KAAK,kBAIxB0I,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEhBR,IACGC,KAAK,wDAAwDzI,GAC7D0I,MAAK,SAACC,GACL7C,aAAamG,WAAW,aACxBpE,EAASc,EAAI3I,MACb8F,aAAa8C,QAAQ,YAAahD,KAAKiD,UAAUF,EAAI3I,UAEtD+I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBR,IACGC,KAAK,+CACLC,MAAK,SAACC,GACH,IAAI5I,EAASuC,EAAUqG,EAAI3I,MAC3BuF,EAAMwE,SAAShK,MAElBgJ,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEnBnB,EAAS,SAMJ0D,GAAW,GACXZ,MAAM,2CAGX5B,OAAM,SAASmD,GACdvB,MAAMuB,OA6ByBlE,cAAY,YAAzC,UACE,eAAC2D,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDACA,cAACT,GAAA,EAAKU,QAAN,CACEzK,KAAK,QACLhB,KAAK,QACL0L,YAAY,6BACZvJ,UAAU,KACVwJ,SAAUd,EACVe,UAAQ,EACR9C,MAAO5J,EAAMoK,MACblC,cAAY,UAIhB,eAAC2D,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,6CACA,cAACT,GAAA,EAAKU,QAAN,CACGzK,KAAK,WACLhB,KAAK,WACL0L,YAAY,mBACZC,SAAUd,EACVe,UAAQ,EACR9C,MAAO5J,EAAMwL,SACbtD,cAAY,UAIf,cAACM,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,0BAOA,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACR/B,QA9KW,WACvBjB,EAAMhE,QAAQlB,KAAK,eA8KP0C,UAAU,iBAHZ,qDClMRuE,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KAwKIpC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EApKb,SAACC,GAAS,IAAD,EAECC,mBAAS,CAC5BiH,QAAS,SAHS,mBAEdC,EAFc,KAETC,EAFS,OAMKnH,mBAAS,CAChC5E,KAAM,GACNsJ,MAAO,GACPG,IAAK,GACLiB,SAAU,GACVsB,aAAc,KAXI,mBAMd9M,EANc,KAMP+H,EANO,OAcSrC,oBAAS,GAdlB,mBAcdsC,EAdc,KAcLyD,EAdK,KAoBdsB,EAAY,SAACnB,GACjB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MA+D9B,OACC,qCACG,qBAAK3G,UAAU,wBAAf,SACE,oBAAIiF,cAAY,eAAhB,oDAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACA,cAACuF,EAAA,EAAD,CACEC,QAAQ,YACR/B,QA/Ee,WACrBjB,EAAMhE,QAAQlB,KAAK,WA+Eb0C,UAAU,OAHZ,2BASa,IAAZ+E,EACG,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIJ,GAGA,eAAC4I,GAAA,EAAD,CAAMC,SAxFY,SAACF,GAGzB,GAFAA,EAAEG,iBACFN,GAAW,GACRzL,EAAMwL,WAAaxL,EAAM8M,aAAa,CACvC,IAAI5M,EAAO,CACTY,KAAMd,EAAMc,KACZsJ,MAAOpK,EAAMoK,MACbG,IAAKvK,EAAMuK,IACXiB,SAAUxL,EAAMwL,SAChBwB,sBAAuBhN,EAAM8M,cAE/BD,EAAQ,CAACF,QAAS,SAClBjE,IAAMC,KAAK,8CAA+CzI,GACzD0I,MAAK,SAAUgC,GACd,IAAI3K,EAAS8B,EAAc6I,EAAS1K,KAAKV,UACzCiG,EAAMwE,SAAShK,GAEf,IAAIgN,EAAW,CACb7C,MAAOpK,EAAMoK,MACboB,SAAUxL,EAAMwL,UAGdQ,EAAYnK,EAAQoL,GACxBxH,EAAMwE,SAAS+B,IAEkB,IAAjCpB,EAAS1K,KAAKV,SAASwF,MAAgBS,EAAMhE,QAAQlB,KAAK,WAAckF,EAAMhE,QAAQlB,KAAK,eAG3FsK,MAAM,uCAAUD,EAAS1K,KAAK4K,SAC9BW,GAAW,GAEX1D,EAAS,CACPjH,KAAM,GACNsJ,MAAO,GACPoB,SAAU,GACVsB,aAAc,QAGjB7D,OAAM,WACL4B,MAAM,iBAKRgC,EAAQ,CAACF,QAAS,UAKpB,IAAIzM,EAAO,CACTY,KAAMd,EAAMc,MAEd4H,IACCC,KAAK,wDAAyDzI,GAC9D0I,MAAK,SAACC,OAGNI,OAAM,SAACC,GACJC,QAAQC,IAAIF,OA8BV,UACE,eAAC2C,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,OAAOhB,KAAK,OAAO0L,YAAY,kCAASvJ,UAAU,KAAKyJ,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMc,UAGvH,eAAC+K,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,QAAQhB,KAAK,QAAQ0L,YAAY,kCAASE,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMoK,WAG1G,eAACyB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,uCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,MAAMhB,KAAK,MAAM0L,YAAY,wBAAmBE,UAAQ,EAACQ,QAAQ,YAAUT,SAAUM,EAAWnD,MAAO5J,EAAMuK,SAGlI,eAACsB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,6CAA8B,uBAC9B,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,uHAEF,cAACf,GAAA,EAAKU,QAAN,CAAczK,KAAK,WAAWhB,KAAK,WAAW0L,YAAY,kCAASE,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMwL,cAIhH,eAACK,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDAAgC,uBAChC,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,uHAEF,cAACf,GAAA,EAAKU,QAAN,CAAczK,KAAK,WAAWhB,KAAK,eAAe0L,YAAY,sEAAeE,UAAQ,EAACD,SAAUM,EAC9FnD,MAAO5J,EAAM8M,kBAIf,cAACtE,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yCC5JRuE,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KA4IIpC,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EAtIZ,SAACC,GAAS,IAAD,EAEAC,mBAAS,CAC5BiH,QAAS,SAHU,mBAEfC,EAFe,KAEVC,EAFU,OAKQnH,oBAAS,GALjB,mBAKfsC,EALe,KAKNyD,EALM,OAMI/F,mBAAS,CAChC5E,KAAM2E,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAGsB,KAAO,GACxDsJ,MAAO3E,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAG4K,MAAQ,GAC1DG,IAAK9E,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAG+K,IAAM,GACtDuC,aAAc,KAVK,mBAMf9M,EANe,KAMR+H,EANQ,KAkBtBrC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKvB,IAAMwM,EAAY,SAACnB,GACjB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MAyC9B,OACC,qCACG,qBAAK3G,UAAU,wBAAf,SACE,+BAAKjD,EAAMc,KAAX,gCAEF,cAACqH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,WAGe,IAAZ+E,EACC,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIJ,GAEA,eAAC4I,GAAA,EAAD,CAAMC,SA1DY,SAACF,GAGzB,GAFAH,GAAW,GACXG,EAAEG,iBACC/L,EAAMwL,WAAaxL,EAAM8M,aAAa,CACvC,IAAI5M,EAAO,CACTY,KAAMd,EAAMc,KACZsJ,MAAOpK,EAAMoK,MACbG,IAAKvK,EAAMuK,IACXiB,SAAUxL,EAAMwL,SAChBsB,aAAc9M,EAAM8M,cAEtBD,EAAQ,CAACF,QAAS,SAClBjE,IAAMyE,MAAN,sDAA2D1H,EAAM4D,IAAMnJ,GACtE0I,MAAK,SAAUgC,GAGd,IAAMwC,EAAU,CAAC/D,GAAI5D,EAAMjG,SAAS,GAAG6J,GAAIe,MAAO3E,EAAMlG,QAAQ6K,MAAOoB,SAAU/F,EAAMlG,QAAQiM,UAC/F9C,IAAMC,KAAN,mDAA+DyE,GAASxE,MAAK,SAASC,GACnF,IAAI5I,EAAS8B,EAAe8G,EAAI3I,MAChCuF,EAAMwE,SAAShK,GACf4K,MAAMD,EAAS1K,KAAK4K,SACpBW,GAAW,GACXhG,EAAMhE,QAAQlB,KAAK,kBAEnB0I,OAAM,SAASmD,GACjBjD,QAAQC,IAAIgD,SAKdnD,OAAM,WACL4B,MAAM,iBAKRgC,EAAQ,CAACF,QAAS,WAsBd,UACE,eAACd,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,OAAOhB,KAAK,OAAO0L,YAAY,kCAASvJ,UAAU,KAAKyJ,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMc,UAGvH,eAAC+K,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,QAAQhB,KAAK,QAAQ0L,YAAY,kCAASE,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMoK,WAG1G,eAACyB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,uCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,MAAMhB,KAAK,MAAM0L,YAAY,wBAAmBE,UAAQ,EAACQ,QAAQ,YAAUT,SAAUM,EAAWnD,MAAO5J,EAAMuK,SAGlI,eAACsB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,6CAA8B,uBAC9B,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,uHAEF,cAACf,GAAA,EAAKU,QAAN,CAAczK,KAAK,WAAWhB,KAAK,WAAW0L,YAAY,kCAASE,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMwL,cAIhH,eAACK,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDAAgC,uBAChC,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,uHAEF,cAACf,GAAA,EAAKU,QAAN,CAAczK,KAAK,WAAWhB,KAAK,eAAe0L,YAAY,sEAAeE,UAAQ,EAACD,SAAUM,EAC9FnD,MAAO5J,EAAM8M,kBAIf,cAACtE,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yCCjIRuE,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KAqJIpC,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EA/IJ,SAACC,GACnB,IAUEjF,EAVkB,WAChB,IAAIA,EAAO,GAOX,OANYsF,KAAKC,MAAMC,aAAaC,QAAQ,UACtCpF,SAAQ,SAACX,GACVA,EAAKmJ,KAAO5D,EAAM4D,IACpB7I,EAAKD,KAAKL,MAGNM,EAEF6M,GAXkB,EAYR3H,mBAAS,CAC5BiH,QAAS,SAbkB,mBAYvBC,EAZuB,KAYlBC,EAZkB,OAeAnH,oBAAS,GAfT,mBAevBsC,EAfuB,KAedyD,EAfc,OAgBJ/F,mBAAS,CAChC5E,KAAMN,EAAKuE,OAAO,EAAGvE,EAAK,GAAGM,KAAO,GACpCsJ,MAAO5J,EAAKuE,OAAO,EAAIvE,EAAK,GAAG4J,MAAQ,GACvCG,IAAK/J,EAAKuE,OAAO,EAAIvE,EAAK,GAAG+J,IAAM,GACnCiB,SAAU,KApBiB,mBAgBvBxL,EAhBuB,KAgBhB+H,EAhBgB,KA4B9BrC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKvB,IAAMwM,EAAY,SAACnB,GACjB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MAwC9B,OACC,qCACG,qBAAK3G,UAAU,wBAAf,SACE,+BAAKjD,EAAMc,KAAX,gCAEF,cAACqH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,WAGe,IAAZ+E,EACC,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIJ,GAEA,eAAC4I,GAAA,EAAD,CAAMC,SAzDY,SAACF,GAGzB,GAFAH,GAAW,GACXG,EAAEG,iBACC/L,EAAMwL,WAAaxL,EAAM8M,aAAa,CACvC,IAAI5M,EAAO,CACTY,KAAMd,EAAMc,KACZsJ,MAAOpK,EAAMoK,MACbG,IAAKvK,EAAMuK,IACXiB,SAAUxL,EAAMwL,SAChBsB,aAAc9M,EAAM8M,cAEtBD,EAAQ,CAACF,QAAS,SAClBjE,IAAMyE,MAAN,sDAA2D1H,EAAM4D,IAAMnJ,GACtE0I,MAAK,SAAUgC,GAGdlC,IAAMC,KAAK,oDAAoDlD,EAAMlG,SAChEqJ,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD2K,MAAMD,EAAS1K,KAAK4K,SACpBW,GAAW,GACXhG,EAAMhE,QAAQlB,KAAK,QAEtB0I,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAKrBD,OAAM,WACL4B,MAAM,iBAKRgC,EAAQ,CAACF,QAAS,WAsBd,UACE,eAACd,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,OAAOhB,KAAK,OAAO0L,YAAY,kCAASvJ,UAAU,KAAKyJ,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMc,UAGvH,eAAC+K,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,QAAQhB,KAAK,QAAQ0L,YAAY,kCAASE,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMoK,WAG1G,eAACyB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,uCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,MAAMhB,KAAK,MAAM0L,YAAY,wBAAmBE,UAAQ,EAACQ,QAAQ,YAAUT,SAAUM,EAAWnD,MAAO5J,EAAMuK,SAGlI,eAACsB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,6CAA8B,uBAC9B,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,uHAEF,cAACf,GAAA,EAAKU,QAAN,CAAczK,KAAK,WAAWhB,KAAK,WAAW0L,YAAY,kCAASE,UAAQ,EAACD,SAAUM,EAAWnD,MAAO5J,EAAMwL,cAIhH,eAACK,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,yDAAgC,uBAChC,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,uHAEF,cAACf,GAAA,EAAKU,QAAN,CAAczK,KAAK,WAAWhB,KAAK,eAAe0L,YAAY,sEAAeE,UAAQ,EAACD,SAAUM,EAC9FnD,MAAO5J,EAAM8M,kBAIf,cAACtE,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yCCrGCsC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAvCJ,SAACC,GAQrB,IAPA,IAAIpE,EAAQ,GADiB,EAEJqE,mBAAS,CAChC4H,MAAO,EACPC,KAAQ9H,EAAMjG,SAAS,GAAG0F,OAAO,IAAOO,EAAMjG,SAAS,GAAG0F,OAAO,GAAGH,QAAQ,EAC5EsB,KAAKmH,MAAM/H,EAAMjG,SAAS,GAAG0F,OAAO,GAAGH,OAAO,EAAG,IAAM,GAAKsB,KAAKmH,MAAM/H,EAAMjG,SAAS,GAAG0F,OAAO,GAAGH,OAAO,GAAO,EACjHmB,OAAQ,IANmB,mBAEvBlG,EAFuB,KAEhB+H,EAFgB,gBAQrB+B,GACNzI,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAAyBP,OAAQ4D,IAAM9J,EAAMkG,OAAQQ,QAAS,kBAAI+G,EAAiB3D,IAAnF,SAAwFA,GAAlEA,KAFlBA,EAAE9J,EAAMsN,MAAOxD,GAAG9J,EAAMuN,KAAMzD,IAAK,EAAnCA,GAKR,IAAM2D,EAAmB,SAAC3D,GACxB,IAAI5J,EAAO,CACT8J,QAASvE,EAAMjG,SAAS,GAAG6J,GAC3BpI,IAAK6I,GAEPpB,IAAMC,KAAK,uDAAwDzI,GAClE0I,MAAK,SAAUgC,GACd,IAAI3K,EAASsC,EAAWqI,EAAS1K,MACjCuF,EAAMwE,SAAShK,MAEhBgJ,OAAM,WACL4B,MAAM,YAER9C,EAAS,CACPuF,MAAOtN,EAAMsN,MACbC,KAAMvN,EAAMuN,KACZrH,OAAQ4D,KAIZ,OACC,mCACC,cAACtD,GAAA,EAAD,UAAcnF,UCGHkE,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAtCT,SAACC,GAEhB,OACC,8BACEA,EAAM7F,SACL,qCACE,cAAC,GAAD,IACD,eAAC2J,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,OAA1B,UACE,gCACE,+BACE,oBAAIA,UAAU,oCAAd,gCACA,oBAAIA,UAAU,oCAAd,sCACA,oBAAIA,UAAU,oCAAd,gCACA,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,gCACA,oBAAIA,UAAU,oCAAd,+BAGJ,gCACGwC,EAAM7F,SAAS+J,KAAI,SAACzJ,GAAD,OAClB,+BACE,oBAAI+C,UAAU,+BAAd,SAA8C/C,EAAK6C,gBACnD,oBAAIE,UAAU,+BAAd,SAA8C/C,EAAKY,OACnD,oBAAImC,UAAU,+BAAd,SAA8C/C,EAAKwN,UACnD,oBAAIzK,UAAU,+BAAd,SAA8C/C,EAAKmF,QACnD,oBAAIpC,UAAU,+BAAd,SAA8C/C,EAAKe,MACnD,oBAAIgC,UAAU,+BAAd,SAA8CD,EAAmB9C,EAAK4C,wBAO/E,qBAAKG,UAAU,gEAAf,0EC0FSsC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAtHZ,SAACC,GAadC,oBAZyB,WACxBgD,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACJ,IAAI5I,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,MAGjBgJ,OAAM,SAACC,GACLC,QAAQC,IAAIF,SAuBb,IAAMyE,EAAiB,WACM,IAAxBlI,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,WAIzB,OADEmF,mBAASiI,GAEV,qCACIlI,EAAMjG,SAASuF,OAAQ,EACvB,qCACC,qBAAK9B,UAAU,0CAAf,SACE,qBAAIA,UAAU,8BAAd,UAA6CwC,EAAMjG,SAAS,GAAGsB,KAA/D,sCAGJ,cAACqH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,SACE,eAACkF,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAhB,UACE,mBAAGrF,UAAU,mBAAb,sCACA,cAACsG,EAAA,EAAD,CAAQE,UAAQ,EAACxG,UAAU,OAA3B,SACE,kCACC,+BACE,oBAAIA,UAAU,6BAAd,0BACA,6BAAKwC,EAAMjG,SAAS,GAAGsB,UAEzB,+BACE,oBAAImC,UAAU,6BAAd,wDACA,6BAAKwC,EAAMjG,SAAS,GAAG4K,WAEzB,+BACE,oBAAInH,UAAU,6BAAd,sCACA,6BAAKwC,EAAMjG,SAAS,GAAG+K,SAEzB,+BACE,oBAAItH,UAAU,6BAAd,kDACA,6BAAKC,EAAWuC,EAAMjG,SAAS,GAAGoO,qBAKzC,eAACxF,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAhB,UACA,mBAAGrF,UAAU,mBAAb,4CACE,cAACsG,EAAA,EAAD,CAAQE,UAAQ,EAACxG,UAAU,OAA3B,SACE,kCACC,+BACE,oBAAIA,UAAU,6BAAd,4CACA,oBAAIA,UAAU,cAAd,SAA6BwC,EAAMjG,SAAS,GAAG0F,OAAO,GAAIO,EAAMjG,SAAS,GAAG0F,OAAO,GAAGH,OAAS,OAGjG,+BACE,oBAAI9B,UAAU,6BAAd,kDACA,oBAAIA,UAAU,cAAd,SAA6BN,EAAW8C,EAAMjG,SAAS,GAAG0F,OAAO,IAAItC,MAAO,eAAO,0BAGrF,+BACE,oBAAIK,UAAU,6BAAd,4CACA,oBAAIA,UAAU,cAAd,SAA6BN,EAAW8C,EAAMjG,SAAS,GAAG0F,OAAO,IAAIrC,KAAMF,EAAW8C,EAAMjG,SAAS,GAAG0F,OAAO,IAAIrC,KAAO,4CAWrI8K,IAIF,qBAAK1K,UAAU,oCAAf,SACI,oBAAIA,UAAU,8BAAd,oDAGJ,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,2CAA3C,SAGGwC,EAAMjG,SAASuF,OAAQ,EAAG,cAAC,GAAD,IAAc,cCzBpCQ,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA1FK,SAACC,GAAQ,MAEbC,mBAAS,GAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAGhCC,EAAYtB,GAAekB,EAAM9F,YAAYuF,OAAO,IAEpDgB,EAAST,EAAMU,GAAI,EACnB9E,EAAQ,GAIZ,GAAGwE,EAAU,CACX,IAAIO,EAAoBxB,GAAUiB,GAAWd,OAC7C,GAAa,IAAVY,GAAgBU,KAAKC,MAAMF,GAAoB,GAAKC,KAAKC,MAAMF,EAAmB,GAAK,EAAG,CAC3F,IAD4F,IAAD,WAClFG,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAU,EAAGA,IAAW,EAApCA,GAOTlF,EAAMd,KACJ,cAACiG,GAAA,EAAWI,KAAZ,CAAiBF,QAAS,kBAAIG,aAI7B,GAAc,IAAVlB,GAAgBU,KAAKC,MAAMF,GAAmB,GAAMC,KAAKC,MAAMF,EAAmB,GAAK,EAC9F,IADmG,IAAD,WACzFG,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAUF,KAAKC,MAAMF,EAAkB,GAAIG,IAAW,EAAlEA,QASN,GAAGZ,GAAQ,GAAKS,EAAiC,GAAbT,EAAQ,GAAS,EAAG,CAC3DtE,EAAMd,KACJ,cAACiG,GAAA,EAAWM,MAAZ,CAAkBJ,QAAS,kBAAIK,QAEjC,IAJ2D,eAIlDR,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAiB,EAARZ,EAAY,EAAGY,GAAyB,GAAbZ,EAAQ,GAASY,IAAW,EAAhEA,GAONH,EAAgC,GAAXT,EAAQ,GAAM,GACrCtE,EAAMd,KACH,cAACiG,GAAA,EAAWI,KAAZ,CAAiBF,QAAS,kBAAIG,aAK/B,GAAGlB,GAAQ,GAAKS,EAAgC,GAAXT,EAAQ,GAAO,EAAG,CAC1DtE,EAAMd,KACJ,cAACiG,GAAA,EAAWM,MAAZ,CAAkBJ,QAAS,kBAAIK,QAEjC,IAJ0D,eAIjDR,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAiB,EAARZ,EAAY,EAAGY,GAAWF,KAAKC,MAAMF,EAAkB,GAAMG,IAAW,EAAjFA,IAgBf,IAAMI,EAAY,SAAC1F,GACfwE,EAAMuB,eAAe/F,IAGnB8F,EAAa,WACjBnB,EAASD,EAAO,IAGXkB,EAAY,WACjBjB,EAASD,EAAQ,IAEnB,OACC,mCACC,cAACa,GAAA,EAAD,UAAcnF,UCsCHkE,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA3HT,SAACC,GAAS,IAAD,EACDC,mBAAS,GADR,mBAClBkC,EADkB,KACZC,EADY,KAGpBhC,EADgBtB,GAAekB,EAAM9F,YAAYuF,OAAO,IAC9B7E,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GAHjC,EAIAlC,mBAAS,CAC/BxF,KAAM2F,IALgB,mBAIlB7F,EAJkB,KAIZ+H,EAJY,KAavBrC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAqBzB,OACC,qCACG,qBAAK0C,UAAU,wBAAf,SACE,qBAAIiF,cAAY,eAAejF,UAAU,8BAAzC,UAAwEwC,EAAM9F,YAAa8F,EAAM9F,YAAYmB,KAAO,GAApH,oCAEF,cAACqH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACC,mBAAGA,UAAU,+BAAb,sFACEwC,EAAM9F,aAAekE,EAAoB4B,EAAM9F,YAAYuF,OAAO,IAAIH,OAAQ,EAC9E,mCACC,eAACwE,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACE,kCACE,+BACE,oBAAIoE,QAAQ,IAAI5K,UAAU,iDAA1B,0BACA,oBAAI4K,QAAQ,IAAI5K,UAAU,iDAA1B,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,oCAA1B,0BACA,oBAAI4K,QAAQ,IAAI5K,UAAU,iDAA1B,yCAEF,+BACE,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,gCAGJ,gCACGY,EAAoB4B,EAAM9F,YAAYuF,OAAO,IAAIyE,KAAI,SAACzJ,GAAD,OACpD,+BACE,oBAAI+C,UAAU,+BAAd,SAA8CC,EAAWhD,EAAK6C,iBAC9D,oBAAIE,UAAU,+BAAd,SAA8C/C,EAAKY,OACnD,oBAAImC,UAAU,+BAAd,SAA8C/C,EAAKmF,QACnD,oBAAIpC,UAAU,+BAAd,SAA8C/C,EAAKe,MACnD,oBAAIgC,UAAU,+BAAd,SAA8CjC,OAAOd,EAAKe,KAAOD,OAAOd,EAAKmF,SAC7E,oBAAIpC,UAAU,+BAAd,SAA8C/C,EAAKwN,uBAO3D,qBAAKzK,UAAU,2DAAf,+EAON,cAACkF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACC,mBAAGA,UAAU,+BAAb,oEACEwC,EAAM9F,aAAe4E,GAAekB,EAAM9F,YAAYuF,OAAO,IAAIH,OAAQ,EACzE,qCACA,cAAC,GAAD,CACEoB,GAAIyB,EACJZ,eAAgB,SAAC/F,GAAD,OArER,SAACA,GACpB,OAAQA,GACN,KAAK,EACH8G,EAAS,CACP7H,KAAMqE,GAAekB,EAAM9F,YAAYuF,OAAO,IAAI7E,MAAY,EAANY,EAAe,EAANA,EAAS,KAG5E,MACF,QACE8G,EAAS,CACP7H,KAAMqE,GAAekB,EAAM9F,YAAYuF,OAAO,IAAI7E,MAAY,EAANY,EAAU,EAAU,EAANA,EAAU,EAAK,KAI3F4G,EAAQ5G,GAuD0BqI,CAAarI,MAErC,eAACsI,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACE,kCACE,+BACE,oBAAIoE,QAAQ,IAAI5K,UAAU,iDAA1B,0BACA,oBAAI4K,QAAQ,IAAI5K,UAAU,iDAA1B,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,oCAA1B,0BACA,oBAAI4K,QAAQ,IAAI5K,UAAU,iDAA1B,yCAEF,+BACE,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,gCAGJ,gCACGjD,EAAME,KAAKyJ,KAAI,SAACzJ,GAAD,OACd,+BACE,oBAAI+C,UAAU,+BAAd,SAA8CC,EAAWhD,EAAK6C,iBAC9D,oBAAIE,UAAU,+BAAd,SAA8C/C,EAAKY,OACnD,oBAAImC,UAAU,+BAAd,SAA8C/C,EAAKmF,QACnD,oBAAIpC,UAAU,+BAAd,SAA8C/C,EAAKe,MACnD,oBAAIgC,UAAU,+BAAd,SAA8CjC,OAAOd,EAAKe,KAAOD,OAAOd,EAAKmF,SAC7E,oBAAIpC,UAAU,+BAAd,SAA8C/C,EAAKwN,wBAO3D,qBAAKzK,UAAU,2DAAf,sFCLGsC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAhHT,SAACC,GAShB,OADCC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKxB,qCACG,qBAAK0C,UAAU,wBAAf,SACE,qBAAIiF,cAAY,eAAejF,UAAU,8BAAzC,UAAwEwC,EAAM9F,YAAa8F,EAAM9F,YAAYmB,KAAO,GAApH,oCAEF,sBAAKmC,UAAU,iBAAf,UACG,mBAAGA,UAAU,+BAAb,sFACEwC,EAAM9F,aAAekE,EAAoB4B,EAAM9F,YAAYuF,OAAO,IAAIH,OAAQ,EAC9E,mCACC,cAACwE,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,QAA1B,SACE,gCACGY,EAAoB4B,EAAM9F,YAAYuF,OAAO,IAAIyE,KAAI,SAACzJ,GAAD,OACpD,6BACE,cAACqJ,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACI,kCACA,+BACE,oBAAIxG,UAAU,iDAAd,0BACA,oBAAImI,QAAQ,IAAInI,UAAU,+BAA1B,SAA0DC,EAAWhD,EAAK6C,oBAG5E,+BACE,oBAAIE,UAAU,iDAAd,0BACA,oBAAIA,UAAU,+BAAd,SAA8C/C,EAAKY,OACnD,oBAAImC,UAAU,iDAAd,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,+BAA1B,SAA0D/C,EAAKwN,aAGjE,+BACE,oBAAIzK,UAAU,iDAAd,0BACA,qBAAIA,UAAU,4CAAd,UACI/C,EAAKmF,MAAM,uBADf,oBAGA,qBAAIpC,UAAU,4CAAd,UACGjC,OAAOd,EAAKe,KAAOD,OAAOd,EAAKmF,OAAO,uBADzC,oBAGA,oBAAIpC,UAAU,iDAAd,oBACA,oBAAIA,UAAU,4CAAd,SAA2D/C,EAAKe,yBAY9E,qBAAKgC,UAAU,2DAAf,6EAMN,sBAAKkI,MAAM,iBAAX,UACG,mBAAGlI,UAAU,+BAAb,oEACEwC,EAAM9F,aAAe4E,GAAekB,EAAM9F,YAAYuF,OAAO,IAAIH,OAAQ,EACzE,mCACC,cAACwE,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,QAA1B,SACE,gCACGsB,GAAekB,EAAM9F,YAAYuF,OAAO,IAAIyE,KAAI,SAACzJ,GAAD,OAC/C,6BACE,cAACqJ,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACA,kCACI,+BACE,oBAAIxG,UAAU,iDAAd,0BACA,oBAAImI,QAAQ,IAAInI,UAAU,+BAA1B,SAA0DC,EAAWhD,EAAK6C,oBAG5E,+BACE,oBAAIE,UAAU,iDAAd,0BACA,oBAAIA,UAAU,+BAAd,SAA8C/C,EAAKY,OACnD,oBAAImC,UAAU,iDAAd,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,+BAA1B,SAA0D/C,EAAKwN,aAGjE,+BACE,oBAAIzK,UAAU,iDAAd,0BACA,qBAAIA,UAAU,4CAAd,UACI/C,EAAKmF,MAAM,uBADf,oBAGA,qBAAIpC,UAAU,4CAAd,UACGjC,OAAOd,EAAKe,KAAOD,OAAOd,EAAKmF,OAAO,uBADzC,oBAGA,oBAAIpC,UAAU,iDAAd,oBACA,oBAAIA,UAAU,4CAAd,SAA2D/C,EAAKe,yBAW9E,qBAAKgC,UAAU,2DAAf,oF,UC/GC6K,GAAc,SAACC,GACzB,IAAIlL,EAAO,IAAIO,KAAK2K,GAChBC,EAAOnL,EAAKoL,WACZC,EAAMrL,EAAKsL,aACf,OAAOH,EAAO,IAAMI,GAAeF,IAEhCE,GAAiB,SAASnN,GAK9B,OAHoB,KADnBA,GAAO,IACC8D,SACN9D,EAAM,IAAMA,GAERA,GCLHoN,GAAQ,CACZC,UAAW,OAEPC,GAAM,CACVtD,MAAO,QACPuD,OAAQ,SA8CKjJ,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EA1CL,SAACC,GACpB,OACE,mCACE,cAAC0C,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACE,qBAAKA,UAAU,cAAf,8DACGwC,EAAMjG,SAASuF,OAAO,GAAQX,EAAwBqB,EAAMjG,SAAS,GAAG0F,OAAO,IAAIH,OAAQ,EAC7F,qBAAI9B,UAAU,OAAd,wDACA,sBAAMA,UAAU,+BAAhB,SACGgC,GAAeb,EAAuBqB,EAAMjG,SAAS,GAAG0F,OAAO,OAFlE,kBAKD,GAGA,oBAAIiG,MAAM,aAAatB,MAAOwE,GAA9B,SACG5I,EAAMjG,SAASuF,OAAO,GAAQX,EAAwBqB,EAAMjG,SAAS,GAAG0F,OAAO,IAAIH,OAAQ,EAAKX,EAAuBqB,EAAMjG,SAAS,GAAG0F,OAAO,IAAIyE,KAAI,SAACzJ,GAAD,OACzJ,oBAAI+C,UAAU,uBAAd,SACE,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,qBAAIpF,UAAU,cAAd,UACE,oBAAIA,UAAU,2BAAd,SACG,cAACwL,GAAA,EAAD,CAAOC,IAAG,gDAA2CxO,EAAKY,KAAhD,QAA4D6N,IAAI,6CAAU9E,MAAO0E,GAAOK,eAAa,MAElH,qBAAI3L,UAAU,2BAAd,gCAA8C/C,EAAKY,QACnD,qBAAImC,UAAU,2BAAd,0BAA4C,sBAAMA,UAAU,cAAhB,SAA+B/C,EAAKmF,QAAhF,YACA,qBAAIpC,UAAU,2BAAd,gCAA8C/C,EAAKe,OACnD,qBAAIgC,UAAU,2BAAd,0BAA4C,sBAAMA,UAAU,cAAhB,SAA+B/C,EAAKmF,MAAOnF,EAAKe,MAA5F,YACA,qBAAIgC,UAAU,2BAAd,sCAA+C/C,EAAKwN,WACpD,qBAAIzK,UAAU,2BAAd,kDAAiD6K,GAAY5N,EAAK2O,+BAMrE,qBAAK5L,UAAU,gEAAf,iFC9BF6L,GAnBG,SAAAC,GACfC,qBAAU,WACR,IAAMC,EAAYC,SAASC,eAAe,WACpCC,EAASF,SAASG,cAAc,UAKtC,GAJAD,EAAOV,IAAM,0BACbU,EAAOE,QAAQC,IAAM7B,mCACrB0B,EAAOnM,UAAW,eAClBmM,EAAOE,QAAQE,SAAQ,EACpBP,EAEF,OADAA,EAAUQ,YAAYL,GACf,WACNH,EAAUS,YAAYN,MAMxB,CAACL,KCVAV,GAAQ,CACZC,UAAW,OAEPC,GAAM,CACVtD,MAAO,QACPuD,OAAQ,SAqEKjJ,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EAjEX,SAACC,GAWd,OAFFC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAIrBuO,KAEE,qCACE,qBAAK7L,UAAU,wBAAf,SACE,oBAAIA,UAAU,8BAAd,oDAEF,cAACkF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACE,qBAAKA,UAAU,cAAf,8DAGGwC,EAAMjG,SAASuF,OAAO,GAAOlB,EAAoB4B,EAAMjG,SAAS,GAAG0F,OAAO,IAAIH,OAAQ,EACxF,gCACG,qBAAI9B,UAAU,OAAd,wDACA,sBAAMA,UAAU,+BAAhB,SACGgC,GAAepB,EAAoB4B,EAAMjG,SAAS,GAAG0F,OAAO,OAF/D,kBAKA,sBAAMmE,GAAI,2BAKb,GAED,oBAAI8B,MAAM,aAAatB,MAAOwE,GAA9B,SACG5I,EAAMjG,SAASuF,OAAO,GAAOlB,EAAoB4B,EAAMjG,SAAS,GAAG0F,OAAO,IAAIH,OAAQ,EAAKlB,EAAoB4B,EAAMjG,SAAS,GAAG0F,OAAO,IAAIyE,KAAI,SAACzJ,GAAD,OACjJ,oBAAI+C,UAAU,uBAAd,SACE,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,qBAAIpF,UAAU,cAAd,UACE,oBAAIA,UAAU,2BAAd,SACG,cAACwL,GAAA,EAAD,CAAOC,IAAG,gDAA2CxO,EAAKY,KAAhD,QAA4D6N,IAAI,6CAAU9E,MAAO0E,GAAOK,eAAa,MAElH,qBAAI3L,UAAU,2BAAd,gCAA8C/C,EAAKY,QACnD,qBAAImC,UAAU,2BAAd,0BAA4C,sBAAMA,UAAU,cAAhB,SAA+B/C,EAAKmF,QAAhF,YACA,qBAAIpC,UAAU,2BAAd,gCAA8C/C,EAAKe,OACnD,qBAAIgC,UAAU,2BAAd,0BAA4C,sBAAMA,UAAU,cAAhB,SAA+B/C,EAAKmF,MAAOnF,EAAKe,MAA5F,YACA,qBAAIgC,UAAU,2BAAd,sCAA+C/C,EAAKwN,WACpD,qBAAIzK,UAAU,2BAAd,kDAAiD6K,GAAY5N,EAAK2O,mBAClE,oBAAI5L,UAAU,6CAAd,SAA6DqC,GAAWpF,EAAK4C,sBAMhF,qBAAKG,UAAU,gEAAf,2EAIX,uBACA,cAAC,GAAD,W,UCaSsC,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAvFJ,SAACC,GAAQ,MAEJC,mBAAS,GAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,KAGzBQ,EAAoBN,KAAKC,MAAMC,aAAaC,QAAQ,UAAUlB,OAC9DmB,EAAST,EAAMU,GAAI,EACnB9E,EAAQ,GAEZ,GAAa,IAAVsE,GAAgBU,KAAKC,MAAMF,GAAoB,GAAKC,KAAKC,MAAMF,EAAmB,GAAK,EAAG,CAC3F,IAD4F,IAAD,WAClFG,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAU,EAAGA,IAAW,EAApCA,GAOTlF,EAAMd,KACJ,cAACiG,GAAA,EAAWI,KAAZ,CAAiBF,QAAS,kBAAIG,aAI7B,GAAc,IAAVlB,GAAeS,EAAkB,GAAOC,KAAKC,MAAMF,EAAmB,GAAK,EAElF,IAFsF,IAAD,WAE5EG,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAUF,KAAKC,MAAMF,EAAkB,GAAIG,IAAW,EAAlEA,QASN,GAAGZ,GAAQ,GAAKS,EAAiC,GAAbT,EAAQ,GAAS,EAAG,CAC3DtE,EAAMd,KACJ,cAACiG,GAAA,EAAWM,MAAZ,CAAkBJ,QAAS,kBAAIK,QAEjC,IAJ2D,eAIlDR,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAiB,EAARZ,EAAY,EAAGY,GAAyB,GAAbZ,EAAQ,GAASY,IAAW,EAAhEA,GAONH,EAAgC,GAAXT,EAAQ,GAAM,GACrCtE,EAAMd,KACH,cAACiG,GAAA,EAAWI,KAAZ,CAAiBF,QAAS,kBAAIG,aAK/B,GAAGlB,GAAQ,GAAKS,EAAgC,GAAXT,EAAQ,GAAO,EAAG,CAC1DtE,EAAMd,KACJ,cAACiG,GAAA,EAAWM,MAAZ,CAAkBJ,QAAS,kBAAIK,QAEjC,IAJ0D,eAIjDR,GACPlF,EAAMd,KACJ,cAACiG,GAAA,EAAWC,KAAZ,CAA8BP,OAAQK,IAAWL,EAAQQ,QAAS,kBAAIC,EAAWJ,EAAO,IAAxF,SACGA,GADmBA,KAFjBA,EAAiB,EAARZ,EAAY,EAAGY,GAAWF,KAAKC,MAAMF,EAAkB,GAAMG,IAAW,EAAjFA,GAiBb,IAAMI,EAAY,SAAC1F,GACfwE,EAAMuB,eAAe/F,IAGnB8F,EAAa,WACjBnB,EAASD,EAAO,IAGXkB,EAAY,WACjBjB,EAASD,EAAQ,IAEnB,OACC,mCACC,cAACa,GAAA,EAAD,UAAcnF,UCjFVsO,GAAU,CACdzI,OAAQ,OACRC,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,OACZC,eAAgB,aAGZgH,GAAM,CACVtD,MAAO,OACPuD,OAAQ,QAEJoB,GAAU,CACd3E,MAAO,QACPuD,OAAQ,SAGJqB,GAAkB,CACtBC,aAAc,MACd5I,OAAQ,QAIJM,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KA+QIpC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA3QzB,SAAiBC,GAAM,MAGCC,mBAAS,GAHV,mBAGhBkC,EAHgB,KAGVC,EAHU,KAKlBhC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GACjFmI,EAAY,GANM,EAQMrK,mBAC1BG,GAAwB,IATJ,mBAQhBmK,EARgB,KAQNjI,EARM,OAYErC,mBAAS,CAC/B5C,QAAQ,EACR5C,KAAM,KAdc,mBAYf0M,EAZe,KAYTC,EAZS,OAgBSnH,oBAAS,GAhBlB,mBAgBhBsC,EAhBgB,KAgBNC,EAhBM,KA2GtB,OACE,sBAAKhF,WAAS,EAAd,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,aAAhB,wCAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sBAA3C,WAGe,IAAZ+E,EACC,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIJ,GAEA,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACR/B,QArDY,WAClBuB,GAAY,GACZS,IACCwD,IAAI,+CACJtD,MAAK,SAACC,GACH7C,aAAamG,WAAW,SACxBnG,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD,IAAIE,EAAU0F,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GACnFG,EAAS3H,GAAmB,IAC5B6H,GAAY,MAEfgB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAuCV,0BAKA,cAACK,EAAA,EAAD,CAAOM,MAAOgG,GAAd,SACE,+BACE,6BACE,cAACrH,EAAA,EAAD,CACIC,QAAQ,UACR/B,QApGD,WACfjB,EAAMhE,QAAQlB,KAAK,eAiGP,oDAKDyP,EAASjL,OAAQ,EACjB,oBAAI9B,UAAU,OAAd,SACE,cAAC,GAAD,CAAckD,GAAIyB,EAAMZ,eAAiB,SAAC/F,GAAD,OAxCnC,SAACA,GACpB8G,EACEjC,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAY,EAANY,EAAe,EAANA,EAAU,IAErE4G,EAAQ5G,GAoCqDqI,CAAarI,QAG9D,4BAML+O,EAASjL,OAAS,EACjB,eAACwE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIzG,UAAU,8CAAd,0BACA,oBAAIA,UAAU,8CAAd,gCACA,oBAAIA,UAAU,8CAAd,0BACA,oBAAIA,UAAU,8CAAd,4CACA,oBAAIA,UAAU,qDAGlB,gCACG+M,EAASrG,KAAI,SAACrI,EAAKwI,GAAN,OACZ,+BACE,6BACE,cAAC2E,GAAA,EAAD,CAAOC,IAAG,gDAA2CpN,EAAKR,KAAhD,QAA4D6N,IAAI,6CAAU9E,MAAO0E,GAAOK,eAAa,MAEjH,oBAAI3L,UAAU,eAAd,SACE,wBACG4G,MAAO8F,GACPjJ,QAAS,SAACoD,GAAD,OA/Ed,SAACxI,GACjByO,EAAUzP,OAAO,GACjByP,EAAUxP,KAAKe,GAEfuL,EAAQ,CACN/J,QAAQ,EACR5C,KAAM6P,IAyE2BE,CAAU3O,IAF3B,SAGGA,EAAKR,SAEV,oBAAImC,UAAU,uDAAd,SAAsE3B,EAAK+D,QAC3E,oBAAIpC,UAAU,eAAd,SAA8B3B,EAAK4O,WACnC,qBAAIjN,UAAU,eAAd,UACA,cAACuF,EAAA,EAAD,CACIC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OA1Ib,SAACxI,GACjBmE,EAAM+E,SAASlJ,GACfmE,EAAMhE,QAAQlB,KAAK,eAwIeiK,CAASlJ,IACvB2B,UAAU,OAHd,0BAMC,cAACuF,EAAA,EAAD,CACGC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OAlHX,SAACxI,GACnBmE,EAAM0K,YAAY7O,GAClBmE,EAAMhE,QAAQlB,KAAK,kBAgHe4P,CAAY7O,IAC1B2B,UAAU,OAHb,4CAMD,cAACuF,EAAA,EAAD,CACIC,QAAQ,SACR/B,QAAS,SAACoD,GAAD,OAjJZ,SAACA,GACfW,OAAOC,QAAQ,6EAChBhC,IACEiC,OADF,sDACwDb,IACtDlB,MAAK,SAACgC,GACLC,MAAMD,EAAS1K,KAAK4K,SACpBpC,IACIwD,IAAI,+CACJtD,MAAK,SAACC,GACL7C,aAAamG,WAAW,SACxBnG,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD6H,EAASc,EAAI3I,KAAKG,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,OAE9CqB,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAIlBD,OAAM,SAACC,GACLC,QAAQC,IAAIF,MA8HgBkH,CAAW9O,EAAK+H,KAC9BpG,UAAU,OAHd,wCAYR,qBAAKA,UAAU,2DAAf,2FAMN,eAACoN,GAAA,EAAD,CACGzD,KAAMA,EAAK9J,OACXwN,OA9La,kBAAMzD,EAAQ,CAAC/J,QAAQ,EAAO5C,KAAM0M,EAAK1M,QA+LtDqQ,SAAS,SACTC,UAAU,EAJb,UAME,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa1N,UAAU,mBAAvB,SACwB,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAvB,UAA+B6H,EAAK1M,KAAK,GAAGY,KAA5C,oBAGN,cAACuP,GAAA,EAAMO,KAAP,UACE,cAACrH,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACC,kCACE,6BACE,oBAAI2B,QAAQ,IAAInI,UAAU,cAA1B,SACC,cAACwL,GAAA,EAAD,CACEC,IAAyB,IAApB9B,EAAK1M,KAAK6E,OAAa,GAAvB,gDAAqE6H,EAAK1M,KAAK,GAAGY,KAAlF,QACL6N,IAAI,6CACJ9E,MAAO+F,GACPiB,SAAO,QAIZ,+BACE,oBAAI5N,UAAU,wBAAd,gCACA,oBAAIA,UAAU,+BAAd,SAAkE,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAGY,UAEzF,+BACE,oBAAImC,UAAU,wBAAd,0BACA,oBAAIA,UAAU,+BAAd,SAAkE,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAGmF,WAEzF,+BACE,oBAAIpC,UAAU,wBAAd,4CACA,oBAAIA,UAAU,+BAAd,SAAkE,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAGgQ,cAEpE,IAApBtD,EAAK1M,KAAK6E,OACT,GAEA,+BACE,oBAAI9B,UAAU,qCAAd,4CACA,6BACG2J,EAAK1M,KAAK,GAAG4Q,UAAUnH,KAAI,SAAC+D,GAAD,OAC1B,6BAAKA,YAKb,6BACE,oBAAItC,QAAQ,IAAInI,UAAU,oCAA1B,wCAEF,6BACE,oBAAImI,QAAQ,IAAZ,SAAqC,IAApBwB,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAG6Q,0BChSnEpB,GAAU,CACdzI,OAAQ,OACRC,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,OACZC,eAAgB,aAGZgH,GAAM,CACVtD,MAAO,OACPuD,OAAQ,QAEJoB,GAAU,CACd3E,MAAO,QACPuD,OAAQ,SAEJxD,GAAY,CAChBC,MAAO,OAIHzD,GAAkBC,2BAAgB,CACtCxG,IAAK,EACLyG,SAAU,EACVC,QAAS,KAsRIpC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAhRzB,SAAiBC,GAAM,MAGCC,mBAAS,GAHV,mBAGhBkC,EAHgB,KAGVC,EAHU,KAKlBhC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAa,EAAPuH,EAAiB,EAAPA,EAAW,GACjFmI,EAAY,GANM,EAQMrK,mBAC1BG,GAAwB,IATJ,mBAQhBmK,EARgB,KAQNjI,EARM,OAYErC,mBAAS,CAC/B5C,QAAQ,EACR5C,KAAM,KAdc,mBAYf0M,EAZe,KAYTC,EAZS,OAgBSnH,oBAAS,GAhBlB,mBAgBhBsC,EAhBgB,KAgBNC,EAhBM,KAyGtB,OA9DAvC,wBAL+B,IAAxBD,EAAMjG,SAASuF,QAAiC,OAAnBU,EAAMuK,UACpCvK,EAAMhE,QAAQlB,KAAK,YAmEvB,sBAAK0C,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,aAAhB,yCAIW,IAAZF,EACC,sBAAKqB,GAAG,WAAWpG,UAAU,8BAA7B,UACE,mBAAGA,UAAU,wBAAb,sFACA,qBAAKA,UAAU,cAAf,SACA,cAAC,GAAD,SAIF,GAEF,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACRxF,UAAU,OACVyD,QAzDc,WAClBuB,GAAY,GACVS,IACCwD,IAAI,+CACJtD,MAAK,SAACC,GACH7C,aAAamG,WAAW,SACxBnG,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjD,IAAIE,EAAU0F,KAAKC,MAAMC,aAAaC,QAAQ,UAC9C8B,EAAS3H,GAAmB,IAC5B6H,GAAY,MAEfgB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA0Cd,0BAMC8G,EAASjL,OAAQ,EAChB,cAAC,GAAD,CAAcoB,GAAIyB,EAAMZ,eAAiB,SAAC/F,GAAD,OA9BzB,SAACA,GACrB8G,EACEjC,KAAKC,MAAMC,aAAaC,QAAQ,UAAU5F,MAAY,EAANY,EAAe,EAANA,EAAU,IAErE4G,EAAQ5G,GA0B4CqI,CAAarI,MAE7D,GAGR,qBAAKkK,MAAM,iBACL,sBAAKlI,UAAU,iBAAf,UACI,cAACuF,EAAA,EAAD,CACEvF,UAAU,OACVwF,QAAQ,UACR/B,QA9FO,WACfjB,EAAMhE,QAAQlB,KAAK,eA0Fb,kDAKA,qEAECyP,EAASjL,OAAS,EACjB,cAACwE,EAAA,EAAD,CAAOE,UAAQ,EAACC,OAAK,EAArB,SACE,gCACGsG,EAASrG,KAAI,SAACrI,EAAKwI,GAAN,OACZ,6BACE,cAACP,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACE,kCACE,+BACE,6BACE,cAACgF,GAAA,EAAD,CAAOC,IAAG,gDAA2CpN,EAAKR,KAAhD,QAA4D6N,IAAI,6CAAU9E,MAAO0E,GAAOK,eAAa,MAGjH,oBAAIxD,QAAQ,IAAInI,UAAU,eAA1B,SACE,yBACE4G,MAAO8F,GACPjJ,QAAS,SAACoD,GAAD,OArEnB,SAACxI,GACjByO,EAAUzP,OAAO,GACjByP,EAAUxP,KAAKe,GAEfuL,EAAQ,CACN/J,QAAQ,EACR5C,KAAM6P,IA+DgCE,CAAU3O,IAF1B,gCAGMA,EAAKR,aAIf,+BACE,oBAAImC,UAAU,8CAAd,0BACA,oBAAIA,UAAU,uDAAd,SAAsE3B,EAAK+D,QAC3E,oBAAIpC,UAAU,8CAAd,0BACA,oBAAIA,UAAU,eAAd,SAA8B3B,EAAK4O,cAGrC,6BACE,qBAAI9E,QAAQ,IAAInI,UAAU,eAA1B,UACE,cAACuF,EAAA,EAAD,CACIqB,MAAOmB,GACPvC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OA9HrB,SAACxI,GACjBmE,EAAM+E,SAASlJ,GACfmE,EAAMhE,QAAQlB,KAAK,eA4HuBiK,CAASlJ,IAH3B,0BAOA,cAACkH,EAAA,EAAD,CACIqB,MAAOmB,GACPvC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OAlGnB,SAACxI,GACnBmE,EAAM0K,YAAY7O,GAClBmE,EAAMhE,QAAQlB,KAAK,kBAgGuB4P,CAAY7O,IAC1B2B,UAAU,YAJd,4CAOA,cAACuF,EAAA,EAAD,CACIqB,MAAOmB,GACPvC,QAAQ,SACR/B,QAAS,SAACoD,GAAD,OAvIpB,SAACA,GACfW,OAAOC,QAAQ,6EAChBhC,IACEiC,OADF,sDACwDb,IACtDlB,MAAK,SAACgC,GACLC,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,SAACC,GACLC,QAAQC,IAAIF,MA+HwBkH,CAAW9O,EAAK+H,KAHlC,6CAoBhB,qBAAKpG,UAAU,2DAAf,yFAKN,eAACoN,GAAA,EAAD,CACGzD,KAAMA,EAAK9J,OACXwN,OAnMa,kBAAMzD,EAAQ,CAAC/J,QAAQ,EAAO5C,KAAM0M,EAAK1M,QAoMtDqQ,SAAS,SACTC,UAAU,EAJb,UAME,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa1N,UAAU,mBAAvB,SACwB,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAvB,UAA+B6H,EAAK1M,KAAK,GAAGY,KAA5C,oBAGN,cAACuP,GAAA,EAAMO,KAAP,UACE,cAACrH,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACC,kCACE,6BACE,oBAAI2B,QAAQ,IAAInI,UAAU,cAA1B,SACC,cAACwL,GAAA,EAAD,CACEC,IAAyB,IAApB9B,EAAK1M,KAAK6E,OAAa,GAAvB,gDAAqE6H,EAAK1M,KAAK,GAAGY,KAAlF,QACL6N,IAAI,6CACJ9E,MAAO+F,GACPiB,SAAO,QAIZ,+BACE,oBAAI5N,UAAU,wBAAd,gCACA,oBAAIA,UAAU,+BAAd,SAAkE,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAGY,UAEzF,+BACE,oBAAImC,UAAU,wBAAd,0BACA,oBAAIA,UAAU,+BAAd,SAAkE,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAGmF,WAEzF,+BACE,oBAAIpC,UAAU,wBAAd,4CACA,oBAAIA,UAAU,+BAAd,SAAkE,IAApB2J,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAGgQ,cAEpE,IAApBtD,EAAK1M,KAAK6E,OACT,GAEA,+BACE,oBAAI9B,UAAU,qCAAd,4CACA,6BACG2J,EAAK1M,KAAK,GAAG4Q,UAAUnH,KAAI,SAAC+D,GAAD,OAC1B,6BAAKA,YAKb,6BACE,oBAAItC,QAAQ,IAAInI,UAAU,oCAA1B,wCAEF,6BACE,oBAAImI,QAAQ,IAAZ,SAAqC,IAApBwB,EAAK1M,KAAK6E,OAAa,GAAK6H,EAAK1M,KAAK,GAAG6Q,0BC9P1DxL,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAzCzB,SAAeC,GAUdC,wBAL+B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAOxB,IAAMiK,EAAW,SAAClJ,GACjBmE,EAAMuL,cAAc1P,GACpBmE,EAAMhE,QAAQlB,KAAK,gBAGf4P,EAAc,SAAC7O,GACnBmE,EAAMwL,aAAa3P,GACnBmE,EAAMhE,QAAQlB,KAAK,mBAGrB,OACE,gCACE,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACE,cAAC,GAAD,CACEd,SAAU,SAAClJ,GAAD,OAAQkJ,EAASlJ,IAC3B6O,YAAc,SAAC7O,GAAD,OAAQ6O,EAAa7O,QAIzC,cAAC,KAAD,CAAYiK,eAAgB,IAA5B,SACE,cAAC,GAAD,CACIf,SAAU,SAAClJ,GAAD,OAAQkJ,EAASlJ,IAC3B6O,YAAc,SAAC7O,GAAD,OAAQ6O,EAAa7O,eCkI9BiE,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EAvKb,SAACC,GAAS,IAAD,EAECC,mBAAS,CAC5BiH,QAAS,SAHS,mBAEdC,EAFc,KAETC,EAFS,OAKKnH,mBAAS,CAChCwL,KAAM,OANY,mBAKd3C,EALc,KAKP4C,EALO,OASKzL,mBAAS,CAChC5E,KAAM,GACNuE,MAAO,GACP6K,SAAU,GACVa,KAAM,KAbY,mBASd/Q,EATc,KASP+H,EATO,KAqBrBrC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKvB,IAQM6Q,EAAY,SAACxF,GAClB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MAmE7B,OACC,qCACG,qBAAK3G,UAAU,wBAAf,SACE,oBAAIiF,cAAY,eAAhB,oDAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACA,cAACuF,EAAA,EAAD,CACEC,QAAQ,YACR/B,QAxFe,WACrBjB,EAAMhE,QAAQlB,KAAK,WAwFb0C,UAAU,OAHZ,0BAOE,eAAC4I,GAAA,EAAD,CAAMC,SA/EY,SAACF,GAEzB,GADAA,EAAEG,iBACoB,KAAnB/L,EAAMkQ,SACPrD,EAAQ,CAACF,QAAS,cAEhB,CAEF,IAAM0E,EAAS,IAAIC,SACnBD,EAAOE,OAAO,OAAQhD,EAAM2C,MAC5BG,EAAOE,OAAO,OAAQvR,EAAMc,MAC5B4H,IAAMC,KAAK,kDACJ0I,EACK,CACEG,QAAQ,CACN,eAAgB,yBAG9B5I,MAAK,SAACC,GACJM,QAAQC,IAAIP,EAAI3I,SACjB+I,OAAM,eAMT,IAAI/I,EAAO,CACTY,KAAMd,EAAMc,KACZuE,MAAOrF,EAAMqF,MACb6K,SAAUlQ,EAAMkQ,SAChBa,KAAM/Q,EAAM+Q,MAEdrI,IAAMC,KAAK,8CAA+CzI,GACzD0I,MAAK,SAAUgC,GAGdlC,IACGwD,IAAI,+CACJtD,MAAK,SAACC,GACL7C,aAAamG,WAAW,SACxBpE,EAASc,EAAI3I,MACb8F,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjDuF,EAAMhE,QAAQlB,KAAK,aAEpB0I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAIhB2B,MAAMD,EAAS1K,KAAK4K,SACpB/C,EAAS,CACPjH,KAAM,GACNuE,MAAO,GACP6K,SAAU,GACVa,KAAM,QAGT9H,OAAM,WACL4B,MAAM,YAERgC,EAAQ,CAACF,QAAS,SAEpBwE,EAAS,CACPD,KAAM,QAiBF,UACE,cAACrF,GAAA,EAAKQ,MAAN,UACE,cAACR,GAAA,EAAK4F,KAAN,CAAYC,MAAM,2BAAOC,UAAQ,EAACC,OAAO,UAAUnF,SA5F5C,SAACb,GAClBuF,EAAS,CACPD,KAAMtF,EAAEvB,OAAOwH,MAAM,UA4Ff,eAAChG,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,OAAOhB,KAAK,OAAO0L,YAAY,kCAASvJ,UAAU,KAAKyJ,UAAQ,EAACD,SAAU2E,EAAWxH,MAAO5J,EAAMc,UAGvH,eAAC+K,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,2BACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,QAAQhB,KAAK,QAAQ0L,YAAY,kCAASE,UAAQ,EAACD,SAAU2E,EAAWxH,MAAO5J,EAAMqF,WAG1G,eAACwG,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,6CACA,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,yFAEA,eAACf,GAAA,EAAKU,QAAN,CAAcuF,GAAG,SAAShR,KAAK,WAAW8I,MAAO5J,EAAMkQ,SAAUzD,SAAU2E,EAA3E,UACE,wBAAQxH,MAAM,GAAd,gEACA,CAAC,eAAK,qBAAM,qBAAM,iCAAQ,SAAI,sBAAOD,KAAI,SAACC,EAAOE,GAAR,OACxC,wBAAgBF,MAAOA,EAAvB,SAA+BA,GAAlBE,YAKpB,eAAC+B,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,uCACA,0BACExL,KAAK,OACLiR,KAAK,KACLC,KAAK,KACLpI,MAAO5J,EAAM+Q,KACbtE,SAAU2E,EACVnO,UAAU,eANZ,SAM4BjD,EAAM+Q,UAGlC,cAACvI,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yCCeCsC,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EAvKR,SAACC,GAGhB,IAAInE,EAAOmE,EAAMnE,KAHO,EAKJoE,mBAAS,CAC5BiH,QAAS,SANc,mBAKnBC,EALmB,KAKdC,EALc,OAQAnH,mBAAS,CAChC5E,KAAMQ,EAAKR,KACXuE,MAAO/D,EAAK+D,MACZ6K,SAAU5O,EAAK4O,SACfa,KAAMzP,EAAKyP,OAZY,mBAQnB/Q,EARmB,KAQZ+H,EARY,OAeArC,mBAAS,CAChCwL,KAAM,OAhBiB,mBAenB3C,EAfmB,KAeZ4C,EAfY,KAyB3BzL,wBAL6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAOrB,IAGM6Q,EAAY,SAACxF,GACjB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MAmE9B,OACE,qCACG,qBAAK3G,UAAU,wBAAf,SACE,qBAAIiF,cAAY,eAAhB,UAAgClI,EAAMc,KAAtC,oBAEF,cAACqH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACA,cAACuF,EAAA,EAAD,CACEC,QAAQ,YACR/B,QAnFa,WACpBjB,EAAMhE,QAAQlB,KAAK,WAmFZ0C,UAAU,OAHZ,0BAOE,eAAC4I,GAAA,EAAD,CAAMC,SAzEW,SAACF,GAEzB,GADAA,EAAEG,iBACoB,KAAnB/L,EAAMkQ,SACPrD,EAAQ,CAACF,QAAS,cAEhB,CAED,IAAM0E,EAAS,IAAIC,SACnBD,EAAOE,OAAO,OAAQhD,EAAM2C,MAC5BG,EAAOE,OAAO,OAAQvR,EAAMc,MAC5B4H,IAAMC,KAAK,iDACJ0I,EACK,CACEG,QAAQ,CACN,eAAgB,yBAG9B5I,MAAK,SAACC,GACJM,QAAQC,IAAIP,EAAI3I,SACjB+I,OAAM,eAIV,IAAI/I,EAAO,CACTY,KAAMd,EAAMc,KACZuE,MAAOrF,EAAMqF,MACb6K,SAAUlQ,EAAMkQ,SAChBa,KAAM/Q,EAAM+Q,MAEdrI,IAAMyE,MAAN,sDAA2D1H,EAAMnE,KAAK+H,IAAMnJ,GAC3E0I,MAAK,SAAUgC,GAEdC,MAAMD,EAAS1K,KAAK4K,SAEpBpC,IACGwD,IAAI,+CACJtD,MAAK,SAACC,GACL7C,aAAamG,WAAW,SACxBpE,EAASc,EAAI3I,MACb8F,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,OACjDuF,EAAMhE,QAAQlB,KAAK,aAEpB0I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBnB,EAAS,CACPjH,KAAM,GACNuE,MAAO,GACP6K,SAAU,GACVa,KAAM,KAERtL,EAAMhE,QAAQlB,KAAK,aAEpB0I,OAAM,eAEP4D,EAAQ,CAACF,QAAS,WAkBb,UACE,cAACd,GAAA,EAAKQ,MAAN,UACE,cAACR,GAAA,EAAK4F,KAAN,CAAYC,MAAM,2BAAOC,UAAQ,EAACC,OAAO,UAAUnF,SAhF7C,SAACb,GAClBuF,EAAS,CACPD,KAAMtF,EAAEvB,OAAOwH,MAAM,UAgFd,eAAChG,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,OAAOhB,KAAK,OAAO0L,YAAY,kCAASvJ,UAAU,KAAKyJ,UAAQ,EAACD,SAAU2E,EAAWxH,MAAO5J,EAAMc,UAGvH,eAAC+K,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,2BACA,cAACT,GAAA,EAAKU,QAAN,CAAczK,KAAK,QAAQhB,KAAK,QAAQ0L,YAAY,kCAASE,UAAQ,EAACD,SAAU2E,EAAWxH,MAAO5J,EAAMqF,WAG1G,eAACwG,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,6CACA,qBAAKnB,MAAM,WAAWtB,MAAO+C,EAA7B,SACE,yFAEA,eAACf,GAAA,EAAKU,QAAN,CAAcuF,GAAG,SAAShR,KAAK,WAAW8I,MAAO5J,EAAMkQ,SAAUzD,SAAU2E,EAA3E,UACE,wBAAQxH,MAAM,GAAd,gEACA,CAAC,eAAK,qBAAM,qBAAM,iCAAQ,SAAI,sBAAOD,KAAI,SAACC,EAAOE,GAAR,OACxC,wBAAgBF,MAAOA,EAAvB,SAA+BA,GAAlBE,YAKpB,eAAC+B,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,uCACA,0BACExL,KAAK,OACLiR,KAAK,KACLC,KAAK,KACLpI,MAAO5J,EAAM+Q,KACbtE,SAAU2E,EACVnO,UAAU,eANZ,SAM4BjD,EAAM+Q,UAGlC,cAACvI,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yC,SChCAsC,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EA1HV,SAACC,GAkBduJ,qBAAU,WAfRtG,IACIwD,IADJ,4DAC6DzG,EAAMnE,KAAK+H,KACpET,MAAK,SAACC,GAEJ7C,aAAamG,WAAW,WACxBnG,aAAa8C,QAAQ,UAAWhD,KAAKiD,UAAUF,EAAI3I,OACnD+R,EAAWpJ,EAAI3I,SAGjB+I,OAAM,SAACC,GACLC,QAAQC,IAAIF,SAQpB,IAAI5H,EAAOmE,EAAMnE,KACb4Q,EC5BG,CACN,CAAEtI,MAAO,eAAM8H,MAAO,gBACtB,CAAE9H,MAAO,qBAAO8H,MAAO,sBACvB,CAAE9H,MAAO,qBAAO8H,MAAO,sBACvB,CAAE9H,MAAO,2BAAQ8H,MAAO,4BACxB,CAAE9H,MAAO,2BAAQ8H,MAAO,4BACxB,CAAE9H,MAAO,kCAAU8H,MAAO,oCDAL,EAwBOhM,mBAAS,IAxBhB,mBAwBhBgI,EAxBgB,KAwBPuE,EAxBO,OAyBsBvM,mBAAS,MAzB/B,mBAyBfyM,EAzBe,KAyBCC,EAzBD,KAiDvBpD,qBAAU,WAJmB,IAAxBvJ,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAuBvB,OACC,qCACC,sBAAK0C,UAAU,4CAAf,UAA4D3B,EAAKR,KAAjE,gDACA,cAACqH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sBAA3C,UACA,eAAC4I,GAAA,EAAD,CAAMC,SA/CU,SAACF,GAClBA,EAAEG,iBAEF,IAAIsG,EAAI,GACRA,EAAG,GAAS5M,EAAMnE,KAAK+H,GACvBgJ,EAAG,KAAWF,EACdzJ,IAAMC,KAAK,oDAAqD0J,GAC9DzJ,MAAK,SAAUgC,GAEdC,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,WACL4B,MAAM,aAmCR,UACE,eAACgB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,mDACA,cAAC,KAAD,CACCgG,SAAO,EACNC,aAAcJ,EACd1F,SAAU2F,EACVF,QAASA,OAGb,cAACrG,GAAA,EAAKU,QAAN,CAAczK,KAAK,SAASmB,UAAU,wBAAyB2G,MAAM,oBAEtE8D,EAAQ3I,OAAQ,EAChB,qCACE,qBAAK9B,UAAU,oCAAf,wDACA,eAACsG,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACE,gCACE,+BACE,oBAAIxG,UAAU,iCAAd,gCACA,oBAAIA,UAAU,wCAGlB,gCACGyK,EAAQ/D,KAAI,SAACzJ,EAAK0C,GAAN,OACX,+BACE,oBAAIK,UAAU,cAAd,SAA6B/C,EAAKsS,kBAClC,6BACE,cAAChK,EAAA,EAAD,CACCC,QAAQ,SACRxF,UAAU,YACVyD,QAAS,SAACoD,GAAD,OAnDH,SAACA,EAAElH,GACpB6H,OAAOC,QAAQ,6EAChBhC,IACGiC,OADH,4DAC+Db,IAC5DlB,MAAK,SAACgC,GACLC,MAAMD,EAAS1K,KAAK4K,SACpB,IAAI5K,EAAOwN,EAAQrN,QACnBH,EAAKI,OAAOsC,EAAM,GAClBqP,EAAW/R,MAEZ+I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAwCUuJ,CAAcvS,EAAKmJ,GAAIzG,IAHtC,0CAYZ,yCE2DQ2C,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA5KzB,SAAeC,GAAO,IAAD,EACIC,mBAAS,CAC/BxF,KAAM8F,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,KAFlE,mBACdjG,EADc,KACR+H,EADQ,KAuGpB,OAzECrC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YA6EvB,sBAAK0C,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,YAAhB,oDAEF,cAACC,EAAA,EAAD,UAEE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sBAA3C,UACE,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACR/B,QAAS,kBAAIjB,EAAMhE,QAAQlB,KAAK,eAChC0C,UAAU,OAHZ,kDAOCjD,EAAME,KAAK6E,OAAQ,EAClB,cAACyD,EAAA,EAAD,CACEC,QAAQ,SACR/B,QA9CX,WACI+D,OAAOC,QAAQ,yFAChBhC,IACEwD,IAAI,0DACJtD,MAAK,SAACgC,GACN5E,aAAamG,WAAW,UAExBzD,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACf8H,EAAS,CACP7H,KAAM8F,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,QAIzFgD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEf2B,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,SAACC,GACLC,QAAQC,IAAIF,OAoBV,sCAKC,GAIFlJ,EAAME,KAAK6E,OAAS,EAEnB,eAACwE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIzG,UAAU,8CAAd,gCACA,oBAAIA,UAAU,8CAAd,0BACA,oBAAIA,UAAU,8CAAd,sCACA,oBAAIA,UAAU,8CAAd,0BACA,oBAAIA,UAAU,qDAGlB,gCACGjD,EAAME,KAAKyJ,KAAI,SAACC,GAAD,OACd,+BACE,oBAAI3G,UAAU,2BAAd,SAA0C2G,EAAM9I,OAChD,oBAAKmC,UAAU,2BAAf,SAA2C2G,EAAMvE,QACjD,oBAAKpC,UAAU,2BAAf,SAA2CjC,OAAO4I,EAAMvE,OAASrE,OAAO4I,EAAM7I,SAC9E,oBAAKkC,UAAU,2BAAf,SAA2C2G,EAAM7I,QACjD,+BACE,cAACyH,EAAA,EAAD,CACEC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OArHZT,EAqH0BO,EAAMP,GApHhD5D,EAAM+E,SAASnB,QACf5D,EAAMhE,QAAQlB,KAAK,gBAFJ,IAAC8I,GAsHGpG,UAAU,OAHZ,0BAMA,cAACuF,EAAA,EAAD,CACEC,QAAQ,SACR/B,QAAS,SAACoD,GAAD,OApH9B,SAAqBA,GACjBW,OAAOC,QAAQ,6EAChBhC,IACEiC,OADF,uDACyDb,IACvDlB,MAAK,SAACgC,GAENlC,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACf,IAAIiF,EAASlF,EAAME,KAAKG,QACxB6E,EAAO5E,OAAO,GACduI,EAAI3I,KAAKW,SAAQ,SAACuE,GAChBF,EAAO3E,KAAK6E,MAEd2C,EAAS,CACP7H,KAAMgF,OAIX+D,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEf2B,MAAMD,EAAS1K,KAAK4K,YAGrB7B,OAAM,SAACC,GACLC,QAAQC,IAAIF,MAuFgBwJ,CAAY9I,EAAMP,KAChCpG,UAAU,OAHZ,+BAZK2G,EAAM9I,cAuBrB,qBAAKmC,UAAU,gEAAf,wDCtKN+H,GAAa,CACjBC,MAAO,MACP0H,OAAQ,IACRzH,YAAY,MAiLC3F,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA7KzB,SAAeC,GAAO,IAAD,EACIC,mBAAS,CAC/BxF,KAAM8F,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,KAFlE,mBACdjG,EADc,KACR+H,EADQ,KAgGpB,OAnECrC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAuEvB,sBAAK0C,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,YAAhB,oDAEF,qBAAKjF,UAAU,iBACf,sBAAKA,UAAU,iBAAf,UACI,cAACuF,EAAA,EAAD,CACEC,QAAQ,UACR/B,QAAS,kBAAIjB,EAAMhE,QAAQlB,KAAK,eAChC0C,UAAU,OAHZ,kDAOCjD,EAAME,KAAK6E,OAAQ,EAClB,cAACyD,EAAA,EAAD,CACEC,QAAQ,SACR/B,QA7CX,WACI+D,OAAOC,QAAQ,yFAChBhC,IACEwD,IAAI,0DACJtD,MAAK,SAACgC,GACN5E,aAAamG,WAAW,UAErBzD,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACf8H,EAAS,CACP7H,KAAM8F,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,QAIzFgD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAElB2B,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,SAACC,GACLC,QAAQC,IAAIF,OAmBV,sCAKC,GAIFlJ,EAAME,KAAK6E,OAAS,EAEnB,cAACwE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACkJ,QAAA,EAA9B,SACE,gCACG5S,EAAME,KAAKyJ,KAAI,SAACC,GAAD,OACd,6BACG,cAACL,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACG,kCACE,+BACE,oBAAIxG,UAAU,8CAAd,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,2BAA1B,SAAsD2G,EAAM9I,UAG9D,+BACE,oBAAImC,UAAU,8CAAd,0BACA,oBAAIA,UAAU,2BAAd,SAA0C2G,EAAMvE,QAChD,oBAAIpC,UAAU,8CAAd,0BACA,oBAAIA,UAAU,2BAAd,SAA0C2G,EAAM7I,WAGlD,+BACE,oBAAIkC,UAAU,8CAAd,sCACA,oBAAImI,QAAQ,IAAInI,UAAU,2BAA1B,SAAsDjC,OAAO4I,EAAMvE,OAASrE,OAAO4I,EAAM7I,YAG3F,6BACE,qBAAIqK,QAAQ,IAAZ,UACE,cAAC5C,EAAA,EAAD,CACEC,QAAQ,UACR/B,QAAS,SAACoD,GAAD,OArHpBT,EAqHkCO,EAAMP,GApHxD5D,EAAMoN,eAAexJ,QACrB5D,EAAMhE,QAAQlB,KAAK,gBAFJ,IAAC8I,GAsHWQ,MAAOmB,GAHT,0BAMA,cAACxC,EAAA,EAAD,CACEC,QAAQ,SACR/B,QAAS,SAACoD,GAAD,OApHtC,SAAqBA,GACjBW,OAAOC,QAAQ,6EAChBhC,IACEiC,OADF,uDACyDb,IACvDlB,MAAK,SAACgC,GAENlC,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACf8H,EAAS,CACP7H,KAAM8F,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,QAIzFgD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEf2B,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,SAACC,GACLC,QAAQC,IAAIF,MA6FwBwJ,CAAY9I,EAAMP,KAChCQ,MAAOmB,GAHT,qCA5BHpB,EAAM9I,aA0CrB,qBAAKmC,UAAU,gEAAf,sDC/IGsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA/BzB,SAAeC,GAQbC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAMxB,IAAMiK,EAAW,SAACnB,GAChB5D,EAAMoN,eAAexJ,GACrB5D,EAAMhE,QAAQlB,KAAK,iBAEtB,OACE,gCACG,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACC,cAAC,GAAD,CACEd,SAAU,SAACV,GAAD,OAAKU,EAASV,QAI5B,cAAC,KAAD,CAAYyB,eAAgB,IAA5B,SACE,cAAC,GAAD,CACEf,SAAU,SAACV,GAAD,OAAKU,EAASV,eC9BrBgJ,GAAkB,WAC7B,IAAM9C,EAAUlK,KAAKC,MAAMC,aAAaC,QAAQ,UAC5C+J,GACFtH,IACCwD,IAAI,+CACJtD,MAAK,SAACC,GACJ7C,aAAamG,WAAW,SACxBnG,aAAa8C,QAAQ,QAAShD,KAAKiD,UAAUF,EAAI3I,UAEnD+I,OAAM,SAACC,GACLC,QAAQC,IAAIF,MAGjB,IAAIgJ,EAAU,GAMd,OALGlC,GACDA,EAASnP,SAAQ,SAAAS,GACf4Q,EAAQ3R,KAAK,CAACqJ,MAAOtI,EAAKR,KAAM4Q,MAAOpQ,EAAKR,UAGzCoR,GCoGM3M,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EA9Gb,SAACC,GAAS,IAAD,EACKC,mBAAS,CAChCL,MAAO,GACPtE,MAAO,KAHW,mBACdf,EADc,KACP+H,EADO,OAKwBrC,mBAAS,MALjC,mBAKbyM,EALa,KAKGC,EALH,KAMdF,EAAUY,KAQjBpN,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKvB,IAGMwS,EAAW,SAACnH,GAChB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MA4B9B,OACC,qCACG,qBAAK3G,UAAU,wBAAf,SACE,oBAAIiF,cAAY,eAAhB,oDAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACA,cAACuF,EAAA,EAAD,CACEC,QAAQ,YACRxF,UAAU,OACVyD,QA7CU,WAChBjB,EAAMhE,QAAQlB,KAAK,YAyCf,0BAOE,eAACsL,GAAA,EAAD,CAAMC,SAxCG,SAACF,GAChBA,EAAEG,iBACF,IAAIiH,EAAU,CAAClS,KAAMqR,EAAevI,MAAOvE,MAAOrF,EAAMqF,MAAOtE,MAAOf,EAAMe,OAC5E2H,IAAMC,KAAK,+CAAgDqK,GACxDpK,MAAK,SAAUgC,GAEdlC,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACfwF,EAAMhE,QAAQlB,KAAK,cAGtB0I,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAGhB2B,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,WACL4B,MAAM,aAkBJ,UACE,eAACgB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,cAAC,KAAD,CACE4F,QAASA,EACTe,aAAcd,EACd1F,SAAU2F,OAId,eAACvG,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,2BACA,cAACT,GAAA,EAAKU,QAAN,CACEzK,KAAK,SACLhB,KAAK,QACL0L,YAAY,kCACZ5C,MAAO5J,EAAMqF,MAAOqH,UAAQ,EAC5BD,SAAUsG,OAId,eAAClH,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,2BACA,cAACT,GAAA,EAAKU,QAAN,CACEzK,KAAK,SACLhB,KAAK,QACL8I,MAAO5J,EAAMe,MACb0L,SAAUsG,OAKZ,cAACvK,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yCC4BCsC,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EA/HP,SAACC,GAEnB,IAUIP,EAVgB,WACnB,IAAIA,EAAS,GAOb,OANYY,KAAKC,MAAMC,aAAaC,QAAQ,WACtCpF,SAAQ,SAACX,GACVA,EAAKmJ,KAAO5D,EAAM4D,IACpBnE,EAAO3E,KAAKL,MAGRgF,EAEKgO,GAZc,EAiBDxN,mBAAS,CAChC5E,KAAMoE,EAAOH,OAAO,EAAGG,EAAO,GAAGpE,KAAO,GACxCuE,MAAMH,EAAOH,OAAO,EAAGG,EAAO,GAAGG,MAAO,GACxCtE,MAAOmE,EAAOH,OAAO,EAAGG,EAAO,GAAGnE,MAAQ,KApBlB,mBAiBpBf,EAjBoB,KAiBb+H,EAjBa,KA4B5BrC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAIrB,IAGMwS,EAAW,SAACnH,GAChB,IAAMvB,EAASuB,EAAEvB,OACXvJ,EAAOuJ,EAAOvJ,KACd8I,EAAQS,EAAOT,MACrB7B,EAAS,6BAAI/H,GAAL,mBAAac,EAAO8I,MAgC9B,OACE,qCACE,qBAAK3G,UAAU,wBAAf,SACE,qBAAIiF,cAAY,eAAhB,UAAgChD,EAAOH,OAAO,EAAGG,EAAO,GAAGpE,KAAO,GAAlE,oBAEF,cAACqH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,UACA,cAACuF,EAAA,EAAD,CACEC,QAAQ,YACRxF,UAAU,OACVyD,QAjDc,WACpBjB,EAAMhE,QAAQlB,KAAK,YA6Cf,0BAOE,eAACsL,GAAA,EAAD,CAAMC,SA5CG,SAACF,GAChBA,EAAEG,iBACF,IAAIiH,EAAU,CAAClS,KAAKd,EAAMc,KAAMuE,MAAOrF,EAAMqF,MAAOtE,MAAOf,EAAMe,OACjE2H,IAAMyE,MAAN,uDAA4D1H,EAAM4D,IAAM2J,GACrEpK,MAAK,SAAUgC,GAEXlC,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACH7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,OAClD,IAAID,EAASgC,EAAW4G,EAAI3I,MAC5BuF,EAAMwE,SAAShK,GACfwF,EAAMhE,QAAQlB,KAAK,WACnBwH,EAAS,CACP7H,KAAM8F,aAAaC,QAAQ,UAAYH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,QAIzFgD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAGnB2B,MAAMD,EAAS1K,KAAK4K,YAErB7B,OAAM,WACL4B,MAAM,aAmBJ,UACE,eAACgB,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,iCACA,qBAAKrJ,UAAU,mBAAf,SAAmCjD,EAAMc,OACzC,cAAC+K,GAAA,EAAKU,QAAN,CACEzK,KAAK,SACLhB,KAAK,OACL8I,MAAO5J,EAAMc,UAGjB,eAAC+K,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,2BACA,cAACT,GAAA,EAAKU,QAAN,CACEzK,KAAK,SACLhB,KAAK,QACL0L,YAAY,kCACZ5C,MAAO5J,EAAMqF,MAAOqH,UAAQ,EAC5BD,SAAUsG,OAId,eAAClH,GAAA,EAAKQ,MAAN,WACE,cAACR,GAAA,EAAKS,MAAN,2BACA,cAACT,GAAA,EAAKU,QAAN,CACEzK,KAAK,SACLhB,KAAK,QACL8I,MAAO5J,EAAMe,MACb0L,SAAUsG,OAKZ,cAACvK,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,iBAHZ,yCC3HC,OAA0B,mC,SCanCkQ,GAAe,CACnB3E,OAAQ,QACR4E,SAAU,UAGNC,GAAU,CACdlM,WAAY,UACZmM,QAAS,MACTlM,MAAM,QACNF,OAAO,oBACPqM,SAAU,OACVZ,OAAQ,KAEJa,GAAS,CACbF,QAAS,QACTnM,WAAY,QACZC,MAAM,QACNqM,SAAS,OACTC,UAAW,SACXC,WAAW,qBAGPC,GAAa,CACjBpF,OAAO,SAqLMjJ,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAlLzB,SAAiBC,GAIbA,EAAMoO,aACPpO,EAAMhG,UAAUoB,SAAQ,SAACX,EAAK4J,GACzBrE,EAAMoO,YAAYxK,KAAOnJ,EAAKmJ,KAC/B5D,EAAMhG,UAAUqK,GAAKrE,EAAMoO,gBAPX,MAeFnO,mBAClBD,EAAMhG,UAAWgG,EAAMhG,UAAY,IAD9BuQ,EAfe,oBAsDtB,OA7BChB,qBAAU,WAJoB,IAAxBvJ,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAiCvB,gCACE,qBAAKmO,IAAKH,GAAOI,IAAI,eAAK1L,UAAU,kBACnC,sBAAKA,UAAU,gBAAf,+BACA,oBAAIA,UAAU,sBAAd,8DACE,kCACE,0BAASkI,MAAM,UAAf,UACG6E,EAASjL,OAAO,EAAG,oBAAI9B,UAAU,yBAAd,sCAAmD,qBAAKA,UAAU,2DAAf,wGACtE+M,EAASjL,OAAS,EACjB,6BACGiL,EAASrG,KAAI,SAACrI,GAAD,OACZ,+BACI,cAACmN,GAAA,EAAD,CAAOC,IAAG,gDAA2CpN,EAAKR,KAAhD,QAA4D6N,IAAI,6CAAUC,eAAa,IAAG,uBACpG,+BACE,oBAAI/E,MAAOwJ,GAAX,qCAA6B/R,EAAKR,QAClC,qBAAI+I,MAAOwJ,GAAX,+BAEE,sBAAMpQ,UAAU,gCAAhB,SAAiD3B,EAAK+D,QAFxD,YAIA,qBAAIwE,MAAOwJ,GAAX,+BAEE,sBAAMpQ,UAAU,gCAAhB,SAAiD3B,EAAKP,QAFxD,qBAIA,oBAAI8I,MAAOwJ,GAAWpQ,UAAU,WAAhC,SACGwC,EAAMjG,SAASuF,OAAO,GAAKU,EAAMjG,SAAS,GAAGwF,MAC5C,GAEAhE,OAAOM,EAAKP,OAAS,EACrB,gCACG,yBACEkC,UAAU,4BACVyD,QAAS,kBAxDzB,SAACpF,GACfmE,EAAMqO,iBAAiBxS,GACvBmE,EAAMhE,QAAQlB,KAAK,kBAsDwBwT,CAAQzS,IAFvB,UAIE,cAAC,IAAD,CAAiB0S,KAAMC,MAJzB,oCAOA,yBACEhR,UAAU,2BACVyD,QAAS,kBA5CtB,SAACpF,GACnB,IAAIrB,EAASwC,EAAmBnB,GAChCmE,EAAMwE,SAAShK,GAEfwF,EAAMhE,QAAQlB,KAAK,uBAwCyB2T,CAAa5S,IAF5B,UAIE,cAAC,IAAD,CAAiB0S,KAAMG,OAJzB,iCASH,sBAAMlR,UAAU,+BAAhB,mDASd,QAOLwC,EAAMjG,SAASuF,OAAO,GAAKU,EAAMjG,SAAS,GAAGwF,MAC3C,sBAAK/B,UAAU,iBAAf,UACE,oBAAI4G,MAAO2J,GAAX,4CACA,qBAAKvQ,UAAU,gCAAf,+FAGF,sBAAKA,UAAU,iBAAf,UACA,oBAAI4G,MAAO2J,GAAX,4CACC,oBAAGvQ,UAAU,+BAAb,UAA6CwC,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAGsB,KAAO,GAA/F,kBACA,oBAAGmC,UAAU,gCAAb,iDAAwD,sBAAMA,UAAU,cAAhB,SAA+BwC,EAAM/F,SAASqF,SAAtG,YAECU,EAAM/F,SAASqF,OAAQ,EACvB,qBAAK8E,MAAQsJ,GAAb,SACC,eAAC5J,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACE,wBAAOxG,UAAU,wBAAjB,UACE,oDACA,iDAGF,gCACGwC,EAAM/F,SAASiK,KAAI,SAACzJ,EAAKkC,GAAN,OAClB,+BACE,qBAAIa,UAAU,2BAAd,UACG/C,EAAKY,KAAK,uBADb,IAEIZ,EAAKwN,QAFT,OAIA,qBAAIzK,UAAU,cAAd,UACG/C,EAAKe,IAAI,uCAYpB,GAGF,mBAAGgC,UAAU,MAAb,sCACA,mBAAGA,UAAU,qDAAb,SA3HW,WACrB,IAAIkC,EAAQ,EAIZ,OAHAM,EAAM/F,SAASmB,SAAQ,SAACX,GACtBiF,GAASnE,OAAOd,EAAKmF,OAASrE,OAAOd,EAAKe,QAErCkE,EAsHsEiP,KAClE3O,EAAM/F,SAASqF,OAAQ,EACtB,yBACE9B,UAAU,6CACVyD,QAvHQ,WACtBjB,EAAM4O,sBAAsBrE,GAC5BvK,EAAMhE,QAAQlB,KAAK,sBAsHLsJ,MAAO+J,GAHT,UAIE,cAAC,IAAD,CAAiBI,KAAMM,MAJzB,wCAQA,SAMT,qBAAKrR,UAAU,sBCnNRsR,GAAkB,CAC5BtJ,MAAO,QAKGuJ,GAAa,CACxBvJ,MAAM,OACNsI,SAAU,OACVpM,WAAY,OACZ2I,aAAc,OAKH2E,GAAQ,CACnBC,UAAW,OACX/B,OAAQ,IACR1H,MAAO,OACP6E,aAAc,MAKH6E,GAAQ,CACnB1J,MAAO,OACPsI,SAAU,OACVZ,OAAQ,WAGGiC,GAAmB,CAC9BzN,WAAY,UACZmH,UAAW,KACXuG,aAAc,KACdvB,QAAS,QCzBLH,GAAe,CACnB3E,OAAQ,QACR4E,SAAU,UAGNC,GAAU,CACdlM,WAAY,UACZmM,QAAS,MACTlM,MAAM,QACNF,OAAO,oBACPqM,SAAU,OACVZ,OAAQ,IACR1H,MAAO,QAEHuI,GAAS,CACbF,QAAS,eACTnM,WAAY,QACZC,MAAM,QACNqM,SAAS,OACTC,UAAW,SACXC,WAAW,qBAGPC,GAAa,CACjBpF,OAAO,SAoLMjJ,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAjLzB,SAAoBC,GAIhBA,EAAMoO,aACPpO,EAAMhG,UAAUoB,SAAQ,SAACX,EAAK4J,GACzBrE,EAAMoO,YAAYxK,KAAOnJ,EAAKmJ,KAC/B5D,EAAMhG,UAAUqK,GAAKrE,EAAMoO,gBAPR,MAeLnO,mBAClBD,EAAMhG,UAAWgG,EAAMhG,UAAY,IAD9BuQ,EAfkB,oBAsDzB,OA7BChB,qBAAU,WAJoB,IAAxBvJ,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAiCvB,gCACE,qBAAKmO,IAAKH,GAAOI,IAAI,eAAK9E,MAAO0K,KAChC,sBAAK1K,MAAO0K,GAAkBtR,UAAU,cAAxC,+BACA,kFACE,yBAAS4G,MAAO2K,GAAhB,SACE,oCACGxE,EAASjL,OAAO,EAAG,oBAAI9B,UAAU,yBAAd,sCAAmD,qBAAKA,UAAU,2DAAf,wGACtE+M,EAASjL,OAAS,EACjB,oBAAI8E,MAAO4K,GAAX,SACGzE,EAASrG,KAAI,SAACrI,GAAD,OACZ,qBAAIuI,MAAO8K,GAAX,UACI,cAAClG,GAAA,EAAD,CAAO5E,MAAO0K,GAAkB7F,IAAG,gDAA2CpN,EAAKR,KAAhD,QAA4D6N,IAAI,6CAAUC,eAAa,IAAG,uBAC7H,qBAAI/E,MAAO4K,GAAX,UACE,oBAAI5K,MAAOwJ,GAAX,qCAA6B/R,EAAKR,QAClC,qBAAI+I,MAAOwJ,GAAX,+BAEE,sBAAMpQ,UAAU,gCAAhB,SAAiD3B,EAAK+D,QAFxD,YAIA,qBAAIwE,MAAOwJ,GAAX,+BAEE,sBAAMpQ,UAAU,gCAAhB,SAAiD3B,EAAKP,QAFxD,qBAIA,oBAAI8I,MAAOwJ,GAAWpQ,UAAU,WAAhC,SACGwC,EAAMjG,SAASuF,OAAO,GAAKU,EAAMjG,SAAS,GAAGwF,MAC5C,GAEAhE,OAAOM,EAAKP,OAAS,EACrB,gCACG,yBACEkC,UAAU,4BACVyD,QAAS,kBAxDzB,SAACpF,GACfmE,EAAMqO,iBAAiBxS,GACvBmE,EAAMhE,QAAQlB,KAAK,wBAsDwBwT,CAAQzS,IAFvB,UAIE,cAAC,IAAD,CAAiB0S,KAAMC,MAJzB,oCAOA,yBACEhR,UAAU,2BACVyD,QAAS,kBA5CtB,SAACpF,GACpB,IAAIrB,EAASwC,EAAmBnB,GAChCmE,EAAMwE,SAAShK,GAEfwF,EAAMhE,QAAQlB,KAAK,6BAwC0B2T,CAAa5S,IAF5B,UAIE,cAAC,IAAD,CAAiB0S,KAAMG,OAJzB,iCAQH,sBAAMlR,UAAU,+BAAhB,mDASd,QAOLwC,EAAMjG,SAASuF,OAAO,GAAKU,EAAMjG,SAAS,GAAGwF,MAC3C,sBAAK6E,MAAO+K,GAAZ,UACE,oBAAI/K,MAAO2J,GAAX,4CACA,qBAAKvQ,UAAU,gCAAf,+FAGF,sBAAK4G,MAAO+K,GAAZ,UACA,oBAAI/K,MAAO2J,GAAX,4CACC,oBAAGvQ,UAAU,+BAAb,UAA6CwC,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAGsB,KAAO,GAA/F,kBACA,oBAAGmC,UAAU,gCAAb,iDAAwD,sBAAMA,UAAU,cAAhB,SAA+BwC,EAAM/F,SAASqF,SAAtG,YAECU,EAAM/F,SAASqF,OAAQ,EACvB,qBAAK8E,MAAQsJ,GAAb,SACC,eAAC5J,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACE,wBAAOxG,UAAU,wBAAjB,UACE,oDACA,iDAGF,gCACGwC,EAAM/F,SAASiK,KAAI,SAACzJ,EAAKkC,GAAN,OAClB,+BACE,qBAAIa,UAAU,2BAAd,UACG/C,EAAKY,KAAK,uBADb,IAEIZ,EAAKwN,QAFT,OAIA,qBAAIzK,UAAU,cAAd,UACG/C,EAAKe,IAAI,uCAYpB,GAGF,mBAAGgC,UAAU,MAAb,sCACA,mBAAGA,UAAU,qDAAb,SA1HW,WACrB,IAAIkC,EAAQ,EAIZ,OAHAM,EAAM/F,SAASmB,SAAQ,SAACX,GACtBiF,GAASnE,OAAOd,EAAKmF,OAASrE,OAAOd,EAAKe,QAErCkE,EAqHsEiP,KAClE3O,EAAM/F,SAASqF,OAAQ,EACtB,yBACE9B,UAAU,6CACVyD,QAtHQ,WACtBjB,EAAM4O,sBAAsBrE,GAC5BvK,EAAMhE,QAAQlB,KAAK,4BAqHLsJ,MAAO+J,GAHT,UAIE,cAAC,IAAD,CAAiBI,KAAMM,MAJzB,wCAQA,gBC1JA/O,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA3CzB,SAAeC,GAuBd,OAnBGA,EAAMoO,aACPpO,EAAMhG,UAAUoB,SAAQ,SAACX,EAAK4J,GACzBrE,EAAMoO,YAAYxK,KAAOnJ,EAAKmJ,KAC/B5D,EAAMhG,UAAUqK,GAAKrE,EAAMoO,gBAahC7E,qBAAU,WAJoB,IAAxBvJ,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAOvB,gCACA,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACE,cAAC,GAAD,CACEwI,iBAAkBrO,EAAMqO,iBACxBO,sBAAuB5O,EAAM4O,sBAC7BR,YAAapO,EAAMoO,gBAIvB,cAAC,KAAD,CAAYtI,eAAgB,IAA5B,SACE,cAAC,GAAD,CACIuI,iBAAkBrO,EAAMqO,iBACxBO,sBAAuB5O,EAAM4O,sBAC7BR,YAAapO,EAAMoO,uBC3ChBiB,GAAgB,SAAClU,EAAOE,EAAM4M,GACzC,IAAIqH,EAAgB,EAMpB,OALAnU,EAAMC,SAAQ,SAACX,GACTA,EAAKY,OAASA,GAAUZ,EAAKwN,UAAYA,GACzCqH,OAGHA,EAAe,GAUPC,GAAkB,SAAClU,GAC7B,MAAY,iFAATA,GAAwC,KAATA,GAUxBmU,GAAqB,SAACnU,EAAKC,EAAOH,GAO9C,OALCA,EAAMC,SAAQ,SAACX,GACVA,EAAKY,OAASA,IACfZ,EAAKa,MAAQA,MAGXH,GAgBKsU,GAAe,SAACtU,GAC3B,IAAIuU,GAAQ,EAIZ,OAHAvU,EAAMC,SAAQ,SAACX,GACMiV,EAAL,KAAdjV,EAAKkV,QAEAD,GAaIE,GAAa,SAACvU,GACzB,IAAIO,EAAQyE,KAAKC,MAAMC,aAAaC,QAAQ,UACxC/F,EAAQ,GAOZ,OANAmB,EAAMR,SAAQ,SAACS,GACTA,EAAKR,OAASA,IACfZ,EAAI,KAAWoB,EAAKyP,KACpB7Q,EAAI,SAAeoB,EAAK4O,aAGtBhQ,GCzEHoV,GAAO,CACXrK,MAAO,OACP/D,OAAQ,qBAiKK3B,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAxJZ,SAACC,GAAS,IAAD,EACIC,mBAAS,CAChCa,OAAQ,KACRmH,QAAS,GACT0H,KAAM,KACNjQ,MAAOM,EAAMuK,SAAUvK,EAAMuK,SAAS3K,MAAQ,IAL3B,mBACfrF,EADe,KACR+H,EADQ,KAoBvBrC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAqErB,OACC,mCACCkF,EAAMuK,SACL,qCACC,qBAAK/M,UAAU,0CAAf,SACE,qBAAIA,UAAU,6BAAd,UAA4CwC,EAAMuK,SAASlP,KAA3D,oBAEF,cAACqH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,SACI,uBAAM6I,SAzCC,SAACF,GAChBA,EAAEG,iBACF,IAAIwJ,EAAW9P,EAAMuK,SAEjBmF,EAAQL,GAAcrP,EAAM/F,SAAU6V,EAASzU,KAAMd,EAAM0N,SAC3D3M,EAAQC,OAAOyE,EAAMuK,SAASjP,OAC9ByU,EAAcxU,OAAOhB,EAAMuG,QAC/B,GAAGiP,EAAc,GAAMR,GAAgBhV,EAAM0N,SAC3C,GAAIyH,EASFtK,MAAM,0EATE,CACR9J,GAASyU,EACTD,EAASxU,MAAQA,EACjB0E,EAAMgQ,eAAeF,GACrB,IAAItV,EAAS+B,EAAS,CAAClB,KAAMyU,EAASzU,KAAMG,IAAKjB,EAAMuG,OAAQlB,MAAOkQ,EAASlQ,MAAOqI,QAAS1N,EAAM0N,QAAS0H,KAAMpV,EAAMoV,OAC1H3P,EAAMwE,SAAShK,GACfwF,EAAMhE,QAAQlB,KAAK,wBAMA,IAAfiV,EACN3K,MAAM,4EAEEmK,GAAgBhV,EAAM0N,SAI9B7C,MAAM,oGAHNA,MAAM,mFAiB0B5H,UAAU,QAApC,UACC,eAACsG,EAAA,EAAD,CAAQM,MAAOyL,GAAf,UACE,kCACE,oBAAIrS,UAAU,iCAAd,gCACA,oBAAIA,UAAU,iCAAd,0BACA,oBAAIA,UAAU,iCAAd,4CACA,oBAAIA,UAAU,iCAAd,gCACA,oBAAIA,UAAU,iCAAd,kDACA,oBAAIA,UAAU,iCAAd,yCAEF,gCACE,+BACE,oBAAIA,UAAU,4CAAd,SAA2DwC,EAAMuK,SAASlP,OAC1E,oBAAImC,UAAU,wDAAd,SAAuEwC,EAAMuK,SAAS3K,QACtF,oBAAIpC,UAAU,+BAAd,SACE,wBAAQA,UAAU,eAAewJ,SApFhC,SAACb,GACpB7D,EAAS,CACPxB,OAAQqF,EAAEvB,OAAOT,MACjB8D,QAAS1N,EAAM0N,QACf0H,KAAMpV,EAAMoV,KACZjQ,MAAQnE,OAAOyE,EAAMuK,SAAS3K,OAASrE,OAAO4K,EAAEvB,OAAOT,UA+EvC,SAvGC,WAElB,IADA,IAAI8B,EAAQ,GACJ5B,EAAE,EAAGA,GAAG9I,OAAOyE,EAAMuK,SAASjP,OAAQ+I,IAC3C4B,EAAMnL,KAAKuJ,GAEd,OAAO4B,EAmGagK,GAAc/L,KAAI,SAAC1I,GAAD,OACjB,iCAASA,WAIf,oBAAIgC,UAAU,4CAAd,SACA,yBAAQA,UAAU,eAAewJ,SAlF9B,SAACb,GACrB7D,EAAS,CACPxB,OAAQvG,EAAMuG,OACdmH,QAAS9B,EAAEvB,OAAOT,MAClBwL,KAAMpV,EAAMoV,KACZjQ,MAAQnF,EAAMmF,SA6EC,UACI,wBAAQyE,MAAM,GAAd,0FA/FZnE,EAAMuK,SAAStC,QAAQiI,MAAM,KAgGAhM,KAAI,SAAC+D,GAAD,OACnB,iCAASA,YAIf,6BACE,uBACG5L,KAAK,OACL8H,MAAO5J,EAAMoV,KACblH,IAAI,QAAQ0H,IAAI,QAChBlJ,UAAQ,EACRzJ,UAAU,eACVwJ,SAvFL,SAACb,GAClB7D,EAAS,CACPxB,OAAQvG,EAAMuG,OACdmH,QAAS1N,EAAM0N,QACf0H,KAAMxJ,EAAEvB,OAAOT,MACfzE,MAAQnF,EAAMmF,aAqFC,oBAAIlC,UAAU,wDAAd,SAAuEjD,EAAMmF,gBAIlF,qBAAKlC,UAAU,YAAf,SACE,uBAAOnB,KAAK,SAAS8H,MAAM,eAAK3G,UAAU,uCAOrD,SC7JCqS,GAAO,CACXrK,MAAO,OACP/D,OAAQ,qBAmLK3B,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA1KZ,SAACC,GAAS,IAAD,EACIC,mBAAS,CAChCa,OAAQ,KACRmH,QAAS,GACT0H,KAAM,KACNjQ,MAAOM,EAAMuK,SAAUvK,EAAMuK,SAAS3K,MAAQ,IAL3B,mBACfrF,EADe,KACR+H,EADQ,KAoBvBrC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAqErB,OACC,qBAAK0C,UAAU,QAAf,SACCwC,EAAMuK,SACL,qCACC,qBAAK/M,UAAU,0CAAf,SACE,qBAAIA,UAAU,6BAAd,UAA4CwC,EAAMuK,SAASlP,KAA3D,oBAEF,qBAAKmC,UAAU,iBAAf,SACM,uBAAM6I,SAxCC,SAACF,GAChBA,EAAEG,iBACF,IAAIwJ,EAAW9P,EAAMuK,SAEjBmF,EAAQL,GAAcrP,EAAM/F,SAAU6V,EAASzU,KAAMd,EAAM0N,SAC3D3M,EAAQC,OAAOyE,EAAMuK,SAASjP,OAC9ByU,EAAcxU,OAAOhB,EAAMuG,QAC/B,GAAGiP,EAAc,GAAMR,GAAgBhV,EAAM0N,SAC3C,GAAIyH,EASFtK,MAAM,0EATE,CACR9J,GAASyU,EACTD,EAASxU,MAAQA,EACjB0E,EAAMgQ,eAAeF,GACrB,IAAItV,EAAS+B,EAAS,CAAClB,KAAMyU,EAASzU,KAAMG,IAAKjB,EAAMuG,OAAQlB,MAAOkQ,EAASlQ,MAAOqI,QAAS1N,EAAM0N,QAAS0H,KAAMpV,EAAMoV,OAC1H3P,EAAMwE,SAAShK,GACfwF,EAAMhE,QAAQlB,KAAK,wBAMA,IAAfiV,EACN3K,MAAM,4EAEEmK,GAAgBhV,EAAM0N,SAI9B7C,MAAM,oGAHNA,MAAM,mFAgB0B5H,UAAU,QAApC,UACC,cAACsG,EAAA,EAAD,CAAQM,MAAOyL,GAAf,SACE,gCACE,6BACE,cAAC/L,EAAA,EAAD,CAAOE,UAAQ,EAACI,MAAOyL,GAAvB,SACE,kCACC,+BACE,oBAAIrS,UAAU,iCAAd,gCACA,oBAAIA,UAAU,4CAAd,SAA2DwC,EAAMuK,SAASlP,UAG5E,+BACE,oBAAImC,UAAU,iCAAd,0BACA,oBAAIA,UAAU,wDAAd,SAAuEwC,EAAMuK,SAAS3K,WAGxF,+BACE,oBAAIpC,UAAU,iCAAd,4CACA,oBAAIA,UAAU,+BAAd,SACE,wBAAQA,UAAU,eAAewJ,SAvFrC,SAACb,GACpB7D,EAAS,CACPxB,OAAQqF,EAAEvB,OAAOT,MACjB8D,QAAS1N,EAAM0N,QACf0H,KAAMpV,EAAMoV,KACZjQ,MAAQnE,OAAOyE,EAAMuK,SAAS3K,OAASrE,OAAO4K,EAAEvB,OAAOT,UAkFlC,SA1GJ,WAElB,IADA,IAAI8B,EAAQ,GACJ5B,EAAE,EAAGA,GAAG9I,OAAOyE,EAAMuK,SAASjP,OAAQ+I,IAC3C4B,EAAMnL,KAAKuJ,GAEd,OAAO4B,EAsGkBgK,GAAc/L,KAAI,SAAC1I,GAAD,OACjB,iCAASA,cAMjB,+BACE,oBAAIgC,UAAU,iCAAd,gCACA,oBAAIA,UAAU,4CAAd,SACE,yBAAQA,UAAU,eAAewJ,SAzFrC,SAACb,GACrB7D,EAAS,CACPxB,OAAQvG,EAAMuG,OACdmH,QAAS9B,EAAEvB,OAAOT,MAClBwL,KAAMpV,EAAMoV,KACZjQ,MAAQnF,EAAMmF,SAoFQ,UACI,wBAAQyE,MAAM,GAAd,0FAtGnBnE,EAAMuK,SAAStC,QAAQiI,MAAM,KAuGOhM,KAAI,SAAC+D,GAAD,OACnB,iCAASA,eAMnB,+BACE,oBAAIzK,UAAU,iCAAd,kDACA,6BACE,uBACInB,KAAK,OACL8H,MAAO5J,EAAMoV,KACblH,IAAI,QAAQ0H,IAAI,QACflJ,UAAQ,EACTzJ,UAAU,eACVwJ,SAlGX,SAACb,GAClB7D,EAAS,CACPxB,OAAQvG,EAAMuG,OACdmH,QAAS1N,EAAM0N,QACf0H,KAAMxJ,EAAEvB,OAAOT,MACfzE,MAAQnF,EAAMmF,gBAkGI,+BACE,oBAAIlC,UAAU,iCAAd,sCACA,oBAAIA,UAAU,wDAAd,SAAuEjD,EAAMmF,sBAQvF,qBAAKlC,UAAU,YAAf,SACE,uBAAOnB,KAAK,SAAS8H,MAAM,eAAK3G,UAAU,+CAMrD,SC9KU4S,GALA,WACb,OACE,qBAAK5S,UAAU,iEAAf,iFCQE6S,GAAM,CACVC,WAAY,uCACZ3O,MAAO,UACPE,WAAY,OACZgH,UAAW,MAEPhG,GAAM,CACVlB,MAAO,UACP8D,YAAa,QAET8K,GAAG,CACP7O,WAAY,UACZC,MAAO,OACPsM,UAAW,UAwTEnO,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAnTT,SAACC,GAIlB,IAJ0B,EAaDC,mBAASD,EAAMwQ,WAbd,mBAapBjW,EAboB,KAab+H,EAba,OAcFrC,mBAVR,WACd,IAAIgG,EAAQ,GAIZ,OAHAjG,EAAM/F,SAASmB,SAAQ,SAACX,GACtBwL,EAAMnL,KAAKS,OAAOd,EAAKe,SAElByK,EAKwBwK,IAdP,mBAcpBjV,EAdoB,KAcfkV,EAde,KA0HtBnH,qBAAU,WAJmB,IAAxBvJ,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAO3B,IA8DQ6V,EAAa,SAACxK,GAClB,IAAIxJ,EAAQpB,OAAO4K,EAAEvB,OAAOvJ,MACxBuV,EAAQ5Q,EAAM/F,SAASW,QAC3BgW,EAAMjU,GAAOgT,KAAOxJ,EAAEvB,OAAOT,MAC7B,IAAI3J,EAASoC,EAAWgU,GACxB5Q,EAAMwE,SAAShK,IAIjB,OACC,qCACI,qBAAKgD,UAAU,wBAAf,SACE,qBAAI4G,MAAOiM,GAAX,UACE,sBAAMjM,MAAOvB,GAAb,SAAmB,cAAC,IAAD,CAAiB0L,KAAOsC,QAD7C,gCAKF,cAACnO,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sCAA3C,SAEGwC,EAAM/F,SAASqF,OAAQ,EACxB,eAAC8G,GAAA,EAAD,WACC,eAACtC,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,OAA1B,UACE,kCACE,qBAAI4G,MAAOmM,GAAX,UACG,sBAAM/S,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAiB+Q,KAAMuC,QAF5B,wBAMA,qBAAI1M,MAAOmM,GAAX,UACG,sBAAM/S,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAiB+Q,KAAMwC,QAF5B,kBAMA,qBAAI3M,MAAOmM,GAAX,UACG,sBAAM/S,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAiB+Q,KAAMyC,QAF5B,YAMA,qBAAI5M,MAAOmM,GAAX,UACE,sBAAM/S,UAAU,uBAAhB,SACG,cAAC,IAAD,CAAiB+Q,KAAM0C,QAF5B,wBAMA,qBAAI7M,MAAOmM,GAAX,UACE,sBAAM/S,UAAU,uBAAhB,SACG,cAAC,IAAD,CAAiB+Q,KAAM0C,QAF5B,0CAMA,oBAAI7M,MAAOmM,GAAX,0BACA,oBAAInM,MAAOmM,QAEb,gCACGvQ,EAAM/F,SAASiK,KAAI,SAACzJ,EAAKkC,GAAN,OAClB,+BACE,oBAAIa,UAAU,sDAAd,SAAqE/C,EAAKY,OAC1E,oBAAImC,UAAU,sDAAd,SAAqE/C,EAAKmF,QAC1E,qBAAIpC,UAAU,yCAAd,UACG,gCAAQ,eAAOhC,EAAImB,KACnB,cAACyJ,GAAA,EAAKU,QAAN,CAAcuF,GAAG,SAAS6E,KAAK,KAAKC,QAAM,EAAChN,MAAO3I,EAAImB,GAAQqK,SAAU,SAACrK,GAAD,OA9H7E,SAACwJ,GAChB,IAAIiL,EAAgB7V,OAAOC,EAAID,OAAO4K,EAAEvB,OAAOvJ,QAC3CgW,EAAe9V,OAAO4K,EAAEvB,OAAOT,OAC/BmN,EAAaD,EAAeD,EAC5BG,EAAevR,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAOA,KACrDmW,EAAYjX,EAAMK,QAGtB4W,EAAUpW,SAAQ,SAACX,EAAK4J,GACtB,IAAIoN,EAAalW,OAAOd,EAAKa,OAE7B,GAAGb,EAAKY,OAASkW,EAGf,GAAGD,EAAa,EAAE,CACfE,EAAUnN,GAAG/I,MAAQmW,EAAaH,EAEjC,IAAII,EAAalC,GAAmB+B,EAAcC,EAAUnN,GAAG/I,MAAO0E,EAAMhG,WAGxEQ,EAASgC,EAFSkV,GAGtB1R,EAAMwE,SAAShK,QAGd,GAAG8W,EAAY,EAAE,CACpBE,EAAUnN,GAAG/I,MAAQmW,GAAcL,EAAgBC,GAEnD,IAAIK,EAAalC,GAAmB+B,EAAcC,EAAUnN,GAAG/I,MAAO0E,EAAMhG,WAGxEQ,EAASgC,EAFSkV,GAGtB1R,EAAMwE,SAAShK,OAKrB,IAAImX,EAAU3R,EAAM/F,SAASW,QAEzBgX,EAAe,CACjBvW,KAAMkW,EACN/V,IAAK6V,EACLzR,MAAOI,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAOuE,MAC7CqI,QAAQjI,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAO4M,QAC9C0H,KAAM3P,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAOsU,MAI9CgC,EAAQpW,OAAO4K,EAAEvB,OAAOvJ,OAASuW,EAGjC,IAAIC,EAAajV,EAAW+U,GAC5B3R,EAAMwE,SAASqN,GAKfvP,EAASkP,GACT,IAAIM,EAAWtW,EAAIZ,QACnBkX,EAASvW,OAAO4K,EAAEvB,OAAOvJ,OAASgW,EAClCX,EAAUoB,GAmE2FC,CAASpV,IAAQtB,KAAMsB,EAAxG,SACEpC,EAAM2J,KAAI,SAACvE,GAAD,OACTA,EAAMtE,OAASZ,EAAKY,KA1OzB,SAACyF,GAEnB,IADA,IAAImF,EAAQ,GACJ5B,EAAE,EAAGA,GAAI9I,OAAOuF,GAASuD,IAC/B4B,EAAMnL,KAAKuJ,GAEb,OAAO4B,EAwOkB+L,CAAazW,OAAOoE,EAAMrE,OAASC,OAAOC,EAAImB,IAAS,GAAGuH,KAAI,SAACC,GAAD,OAC5D,iCAAqBA,EAAM,GAAdA,MAGf,WAIR,oBAAI3G,UAAU,sDAAd,SAAqE/C,EAAKwN,UAC1E,oBAAIzK,UAAU,sDAAd,SACC,uBACMnC,KAAMsB,EACNN,KAAK,OACL8H,MAAO1J,EAAKkV,KACZnS,UAAU,eACVwJ,SAAU2J,MAGjB,oBAAInT,UAAU,sDAAd,SAAqEjC,OAAOd,EAAKmF,OAASrE,OAAOC,EAAImB,MACrG,oBAAIa,UAAU,yCAAd,SACE,cAACuF,EAAA,EAAD,CACEC,QAAQ,SACR/B,QAAS,kBArLX,SAACtE,EAAOtB,EAAM4W,GAC/B,IAAIzX,EAASkC,EAAeC,GAC5BqD,EAAMwE,SAAShK,GAEf,IAAI0X,EAAUzV,EAAkBpB,EAAM4W,GACtCjS,EAAMwE,SAAS0N,GAIf,IAAIpR,EAAStF,EAAIZ,QACjBkG,EAAOjG,OAAO8B,EAAO,GAGrB+T,EAAU5P,GAwKsB6J,CAAWhO,EAAOlC,EAAKY,KAAMG,EAAImB,KAFhD,uCAWV,qBAAKa,UAAU,cAAf,SACE,eAACuF,EAAA,EAAD,CACEC,QAAQ,UACRxF,UAAU,SACVyD,QAxQI,WAEf,GADa+D,OAAOC,QAAQ,+FACfwK,GAAazP,EAAM/F,UAAU,CACxC,IAAM2R,EAAS,IAAIC,SACrBD,EAAOE,OAAO,QAAS9L,EAAMjG,SAAS,GAAG4K,OACzCiH,EAAOE,OAAO,OAAQ9L,EAAMjG,SAAS,GAAGsB,MAGxC4H,IAAMC,KAAK,2CACX0I,EACE,CACEG,QAAQ,CACN,eAAgB,yBAGpB5I,MAAK,SAACC,GACJM,QAAQC,IAAIP,EAAI3I,SACjB+I,OAAM,eAIX,IAAI+J,EAAWvN,EAAM/F,SAChB2S,EAAM,GACVA,EAAG,GAAS5M,EAAMjG,SAAS,GAAG6J,GAC9BgJ,EAAG,KAAWW,EAGdtK,IAAMC,KAAK,kDAAmD0J,GAC1DzJ,MAAK,SAAUgC,GAGdC,MAAMD,EAAS1K,KAAK4K,SACpB,IAAMsC,EAAU,CAAC/D,GAAI5D,EAAMjG,SAAS,GAAG6J,GAAIe,MAAO3E,EAAMlG,QAAQ6K,MAAOoB,SAAU/F,EAAMlG,QAAQiM,UAC/F9C,IAAMC,KAAN,mDAA+DyE,GAASxE,MAAK,SAASgC,GACnF,IAAI3K,EAAS8B,EAAe6I,EAAS1K,MACrCuF,EAAMwE,SAAShK,MAGfgJ,OAAM,SAASmD,GACjBjD,QAAQC,IAAIgD,MAGb,IAAIwL,EAAY,CACd5N,QAASvE,EAAMjG,SAAS,GAAG6J,GAC3BpI,IAAK,GAEPyH,IAAMC,KAAK,uDAAwDiP,GAClEhP,MAAK,SAAUgC,GACd,IAAI3K,EAASsC,EAAWqI,EAAS1K,MACjCuF,EAAMwE,SAAShK,MAEhBgJ,OAAM,kBAKRA,OAAM,WACL4B,MAAM,YAGVpF,EAAMhE,QAAQlB,KAAK,aACnBkF,EAAMwE,S3C8JF,CACJnI,KAAM,mB2C5JGoT,GAAazP,EAAM/F,WAC1BmL,MAAM,6EAoMC,UAKA,+BAAM,cAAC,IAAD,CAAiBmJ,KAAMM,QAL7B,mCAWH,cAAC,GAAD,eC9TJwB,GAAM,CACVC,WAAY,uCACZ3O,MAAO,UACPE,WAAY,OACZgH,UAAW,MAEPhG,GAAM,CACVlB,MAAO,UACP8D,YAAa,QAET8K,GAAG,CACP7O,WAAY,UACZC,MAAO,OACPsM,UAAW,UA2TEnO,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAtTJ,SAACC,GAIvB,IAJ+B,EAaNC,mBAASD,EAAMwQ,WAbT,mBAazBjW,EAbyB,KAalB+H,EAbkB,OAcPrC,mBAVR,WACd,IAAIgG,EAAQ,GAIZ,OAHAjG,EAAM/F,SAASmB,SAAQ,SAACX,GACtBwL,EAAMnL,KAAKS,OAAOd,EAAKe,SAElByK,EAKwBwK,IAdF,mBAczBjV,EAdyB,KAcpBkV,EAdoB,KAyG3BnH,qBAAU,WAJmB,IAAxBvJ,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAO3B,IA6DQ6V,EAAa,SAACxK,GAClB,IAAIxJ,EAAQpB,OAAO4K,EAAEvB,OAAOvJ,MACxBuV,EAAQ5Q,EAAM/F,SAASW,QAC3BgW,EAAMjU,GAAOgT,KAAOxJ,EAAEvB,OAAOT,MAC7B,IAAI3J,EAASoC,EAAWgU,GACxB5Q,EAAMwE,SAAShK,IAIjB,OACC,qCACI,qBAAKgD,UAAU,mBAAf,SACE,qBAAI4G,MAAOiM,GAAX,UACE,sBAAMjM,MAAOvB,GAAb,SAAmB,cAAC,IAAD,CAAiB0L,KAAOsC,QAD7C,gCAKF,qBAAKrT,UAAU,iBACf,qBAAKA,UAAU,gBAAf,SACIwC,EAAM/F,SAASqF,OAAQ,EACxB,eAAC8G,GAAA,EAAD,CAAMC,SApKG,WAEf,GADarB,OAAOC,QAAQ,+FACfwK,GAAazP,EAAM/F,UAAU,CACxC,IAAM2R,EAAS,IAAIC,SACrBD,EAAOE,OAAO,QAAS9L,EAAMjG,SAAS,GAAG4K,OACzCiH,EAAOE,OAAO,OAAQ9L,EAAMjG,SAAS,GAAGsB,MAGxC4H,IAAMC,KAAK,2CACX0I,EACE,CACEG,QAAQ,CACN,eAAgB,yBAGpB5I,MAAK,SAACC,GACJM,QAAQC,IAAIP,EAAI3I,SACjB+I,OAAM,eAIX,IAAI+J,EAAWvN,EAAM/F,SAChB2S,EAAM,GACVA,EAAG,GAAS5M,EAAMjG,SAAS,GAAG6J,GAC9BgJ,EAAG,KAAWW,EAGdtK,IAAMC,KAAK,iDAAkD0J,GACzDzJ,MAAK,SAAUgC,GAGdC,MAAMD,EAAS1K,KAAK4K,SACpB,IAAMsC,EAAU,CAAC/D,GAAI5D,EAAMjG,SAAS,GAAG6J,GAAIe,MAAO3E,EAAMlG,QAAQ6K,MAAOoB,SAAU/F,EAAMlG,QAAQiM,UAC/F9C,IAAMC,KAAN,mDAA+DyE,GAASxE,MAAK,SAASgC,GACnF,IAAI3K,EAAS8B,EAAe6I,EAAS1K,MACrCuF,EAAMwE,SAAShK,MAEfgJ,OAAM,SAASmD,GACjBjD,QAAQC,IAAIgD,SAGdnD,OAAM,WACL4B,MAAM,YAGVpF,EAAMhE,QAAQlB,KAAK,aACnBkF,EAAMwE,S5C+KF,CACJnI,KAAM,mB4C7KGoT,GAAazP,EAAM/F,WAC1BmL,MAAM,6EAkHF,UACC,cAACtB,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,QAA1B,SACE,gCACGwC,EAAM/F,SAASiK,KAAI,SAACzJ,EAAKkC,GAAN,OAClB,6BACC,eAACmH,EAAA,EAAD,WACC,+BACE,qBAAIM,MAAOmM,GAAX,UACG,sBAAM/S,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAiB+Q,KAAMuC,QAF5B,wBAMA,oBAAItT,UAAU,sDAAd,SAAqE/C,EAAKY,UAG5E,+BACC,qBAAI+I,MAAOmM,GAAX,UACE,sBAAM/S,UAAU,uBAAhB,SACI,cAAC,IAAD,CAAiB+Q,KAAMwC,QAF7B,kBAME,oBAAIvT,UAAU,sDAAd,SAAqE/C,EAAKmF,WAG7E,+BACC,qBAAIwE,MAAOmM,GAAI/S,UAAU,eAAzB,UACE,sBAAMA,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAiB+Q,KAAMyC,QAF3B,YAME,qBAAIxT,UAAU,yCAAd,UACE,gCAAQ,eAAOhC,EAAImB,KACnB,cAACyJ,GAAA,EAAKU,QAAN,CAAcuF,GAAG,SAAS6E,KAAK,KAAKC,QAAM,EAAChN,MAAO3I,EAAImB,GAAQqK,SAAU,SAACrK,GAAD,OApH/E,SAACwJ,GAChB,IAAIiL,EAAgB7V,OAAOC,EAAID,OAAO4K,EAAEvB,OAAOvJ,QAC3CgW,EAAe9V,OAAO4K,EAAEvB,OAAOT,OAC/BmN,EAAaD,EAAeD,EAC5BG,EAAevR,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAOA,KACrDmW,EAAYjX,EAAMK,QAGtB4W,EAAUpW,SAAQ,SAACX,EAAK4J,GACtB,IAAIoN,EAAalW,OAAOd,EAAKa,OAE7B,GAAGb,EAAKY,OAASkW,EAGf,GAAGD,EAAa,EAAE,CACfE,EAAUnN,GAAG/I,MAAQmW,EAAaH,EAEjC,IAAII,EAAalC,GAAmB+B,EAAcC,EAAUnN,GAAG/I,MAAO0E,EAAMhG,WAGxEQ,EAASgC,EAFSkV,GAGtB1R,EAAMwE,SAAShK,QAGd,GAAG8W,EAAY,EAAE,CACpBE,EAAUnN,GAAG/I,MAAQmW,GAAcL,EAAgBC,GAEnD,IAAIK,EAAalC,GAAmB+B,EAAcC,EAAUnN,GAAG/I,MAAO0E,EAAMhG,WAGxEQ,EAASgC,EAFSkV,GAGtB1R,EAAMwE,SAAShK,OAKrB,IAAImX,EAAU3R,EAAM/F,SAASW,QAEzBgX,EAAe,CACjBvW,KAAMkW,EACN/V,IAAK6V,EACLzR,MAAOI,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAOuE,MAC7CqI,QAAQjI,EAAM/F,SAASsB,OAAO4K,EAAEvB,OAAOvJ,OAAO4M,SAIhD0J,EAAQpW,OAAO4K,EAAEvB,OAAOvJ,OAASuW,EAGjC,IAAIC,EAAajV,EAAW+U,GAC5B3R,EAAMwE,SAASqN,GAKfvP,EAASkP,GACT,IAAIM,EAAWtW,EAAIZ,QACnBkX,EAASvW,OAAO4K,EAAEvB,OAAOvJ,OAASgW,EAClCX,EAAUoB,GA0D6FC,CAASpV,IAAQtB,KAAMsB,EAAxG,SACCpC,EAAM2J,KAAI,SAACvE,GAAD,OACTA,EAAMtE,OAASZ,EAAKY,KAjN1B,SAACyF,GAEnB,IADA,IAAImF,EAAQ,GACJ5B,EAAE,EAAGA,GAAI9I,OAAOuF,GAASuD,IAC/B4B,EAAMnL,KAAKuJ,GAEb,OAAO4B,EA+MmB+L,CAAazW,OAAOoE,EAAMrE,OAASC,OAAOC,EAAImB,KAASuH,KAAI,SAACC,GAAD,OACzD,iCAAqBA,GAARA,MAGf,cAMT,+BACC,qBAAIC,MAAOmM,GAAX,UACE,sBAAM/S,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAiB+Q,KAAM0C,QAF3B,wBAMA,oBAAIzT,UAAU,sDAAd,SAAqE/C,EAAKwN,aAI1E,+BACE,qBAAI7D,MAAOmM,GAAX,UACE,sBAAM/S,UAAU,uBAAhB,SACI,cAAC,IAAD,CAAiB+Q,KAAM0C,QAF7B,0CAMA,oBAAIzT,UAAU,sDAAd,SACE,uBACEnC,KAAMsB,EACNN,KAAK,OACL8H,MAAO1J,EAAKkV,KACZlH,IAAI,QAAQ0H,IAAI,QAChBlJ,UAAQ,EACRzJ,UAAU,eACVwJ,SAAU2J,SAKhB,+BACE,oBAAIvM,MAAOmM,GAAX,0BACA,oBAAI/S,UAAU,sDAAd,SAAqEjC,OAAOd,EAAKmF,OAASrE,OAAOC,EAAImB,SAGvG,6BACG,oBAAIgJ,QAAQ,IAAInI,UAAU,yCAA1B,SACE,cAACuF,EAAA,EAAD,CACGC,QAAQ,SACR/B,QAAS,kBAvMhB,SAACtE,EAAOtB,EAAM4W,GAC/B,IAAIzX,EAASkC,EAAeC,GAC5BqD,EAAMwE,SAAShK,GAEf,IAAI0X,EAAUzV,EAAkBpB,EAAM4W,GACtCjS,EAAMwE,SAAS0N,GAIf,IAAIpR,EAAStF,EAAIZ,QACjBkG,EAAOjG,OAAO8B,EAAO,GAGrB+T,EAAU5P,GA0L2B6J,CAAWhO,EAAOlC,EAAKY,KAAMG,EAAImB,KAC9Ca,UAAU,YAHb,0CAcd,qBAAKA,UAAU,cAAf,SACE,eAACuF,EAAA,EAAD,CACE1G,KAAK,SACL2G,QAAQ,UACRxF,UAAU,wBAHZ,UAKA,+BAAM,cAAC,IAAD,CAAiB+Q,KAAMM,QAL7B,mCAWH,cAAC,GAAD,aCrMK/O,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA/HzB,SAAcC,GAAO,IAAD,EACMC,mBAAS,CAChC7C,KAAM,OAFW,mBACb7C,EADa,KACN+H,EADM,KA+BnB,OArBFrC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAyBnB,gCAEE,qBAAK0C,UAAU,0CAAf,SACE,qBAAIA,UAAU,6BAAd,UAA4CwC,EAAM3F,YAAYgB,KAA9D,sCAEF,cAAC0H,EAAA,EAAD,CACEC,QAAQ,QACRxF,UAAU,kBACVyD,QAbS,WACfjB,EAAMhE,QAAQlB,KAAK,cASf,0BAKA,cAACgJ,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,WAA1B,SACE,kCACE,+BACE,oBAAIA,UAAU,iCAAiC4K,QAAQ,IAAvD,SACE,cAACY,GAAA,EAAD,CAAOC,IAAG,gDAA2CjJ,EAAM3F,YAAYgB,KAA7D,QAAyE6N,IAAI,6CAAUC,eAAa,MAEhH,oBAAI3L,UAAU,wBAAd,gCACA,oBAAIA,UAAU,wBAAd,0BACA,oBAAIA,UAAU,wBAAd,+CAGF,+BACE,oBAAIA,UAAU,cAAd,SAA6BwC,EAAM3F,YAAYgB,OAC/C,oBAAImC,UAAU,cAAd,SAA6BwC,EAAM3F,YAAYuF,QAC/C,oBAAIpC,UAAU,cAAd,SAA6BoS,GAAW5P,EAAM3F,YAAYgB,MAAMoP,cAGlE,6BACE,oBAAI9E,QAAQ,IAAKnI,UAAU,oCAA3B,wCAIF,6BACE,oBAAImI,QAAQ,IAAZ,SACE,qBAAKnI,UAAU,aAAf,SACCoS,GAAW5P,EAAM3F,YAAYgB,MAAMiQ,gBAO5C,sBAAK9N,UAAU,0CAAf,UACE,oBAAIA,UAAU,8BAAd,yBAAiDwC,EAAM3F,YAAYgB,KAAnE,oCACA,oBAAGmC,UAAU,8BAAb,sLACoC,uBADpC,mGACyD,uBADzD,yDAEW,uBAFX,uIAMF,eAACuF,EAAA,EAAD,CACGC,QAAQ,SACR/B,QAxEU,WACjB,IAAM2K,EAAM,yBAAqB5L,EAAM3F,YAAYgB,KAAvC,gDAA8E4M,2CAC1FhF,IAAMwD,IAAN,uDAA0DmF,IACvDzI,MAAK,SAACgC,GACH,IAAI1K,EAAO0K,EAAS1K,KAAKmB,MACzB0G,EAAS,CACP7H,KAAMA,OAGX+I,OAAM,SAACC,GACJC,QAAQC,IAAIF,OA+DXjG,UAAU,mDAHb,cAIE,cAAC,IAAD,CAAiB+Q,KAAMG,OAJzB,oCAMCnU,EAAME,KACN,eAACqJ,EAAA,EAAD,CAAOtG,UAAU,wBAAjB,UACE,gCACE,+BACE,uBACA,8CACA,+DAGJ,gCACGjD,EAAME,KAAKyJ,KAAI,SAACzJ,EAAK4J,GAAN,OACd,+BACE,qCAAQA,EAAI,KACZ,6BACE,mBAAGO,OAAO,SAASC,IAAI,sBAAsBH,KAAI,0CAAqCjK,EAAKmJ,GAAGwO,SAA9F,SACE,qBAAK5M,MAAM,MAAMuD,OAAO,MAAME,IAAKxO,EAAK4X,QAAQC,WAAWC,OAAOjJ,IAAKJ,IAAI,SAG/E,+BACE,4BAAIzO,EAAK4X,QAAQhC,QACjB,+BAAO5V,EAAK4X,QAAQG,4BAO9B,qBAAKhV,UAAU,wCAAf,SACE,mBAAGA,UAAU,gCAAb,qMCAMsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EApHzB,SAAmBC,GAAO,IAAD,EACCC,mBAAS,CAChC7C,KAAM,OAFgB,mBAClB7C,EADkB,KACX+H,EADW,KA8BxB,OApBFrC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAwBnB,gCACE,qBAAK0C,UAAU,0CAAf,SACE,qBAAIA,UAAU,6BAAd,UAA4CwC,EAAM3F,YAAYgB,KAA9D,sCAEF,cAAC0H,EAAA,EAAD,CACEC,QAAQ,QACRxF,UAAU,kBACVyD,QAZS,WACfjB,EAAMhE,QAAQlB,KAAK,cAQf,0BAKA,cAACgJ,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,WAA1B,SACE,kCACE,6BACE,oBAAIA,UAAU,iCAAiCmI,QAAQ,IAAvD,SACE,cAACqD,GAAA,EAAD,CAAOC,IAAG,gDAA2CjJ,EAAM3F,YAAYgB,KAA7D,QAAyE6N,IAAI,6CAAUC,eAAa,QAGlH,+BACE,oBAAI3L,UAAU,wBAAd,gCACA,oBAAIA,UAAU,cAAd,SAA6BwC,EAAM3F,YAAYgB,UAEjD,+BACE,oBAAImC,UAAU,wBAAd,0BACA,oBAAIA,UAAU,cAAd,SAA6BwC,EAAM3F,YAAYuF,WAEjD,+BACE,oBAAIpC,UAAU,wBAAd,4CACA,oBAAIA,UAAU,cAAd,SAA6BoS,GAAW5P,EAAM3F,YAAYgB,MAAMoP,cAElE,6BACE,qBAAI9E,QAAQ,IAAZ,UACE,mBAAGnI,UAAU,4BAAb,sCACA,qBAAKA,UAAU,aAAf,SACCoS,GAAW5P,EAAM3F,YAAYgB,MAAMiQ,iBAO5C,sBAAK9N,UAAU,0CAAf,UACE,oBAAIA,UAAU,8BAAd,yBAAiDwC,EAAM3F,YAAYgB,KAAnE,oCACA,oBAAGmC,UAAU,8BAAb,sLACoC,uBADpC,mGACyD,uBADzD,yDAEW,uBAFX,uIAMF,eAACuF,EAAA,EAAD,CACGC,QAAQ,SACR/B,QApEU,WACjB,IAAM2K,EAAM,yBAAqB5L,EAAM3F,YAAYgB,KAAvC,gDAA8E4M,2CAC1FhF,IAAMwD,IAAN,uDAA0DmF,IACvDzI,MAAK,SAACgC,GACH,IAAI1K,EAAO0K,EAAS1K,KAAKmB,MACzB0G,EAAS,CACP7H,KAAMA,OAGX+I,OAAM,SAACC,GACJC,QAAQC,IAAIF,OA2DXjG,UAAU,mDAHb,cAIE,cAAC,IAAD,CAAiB+Q,KAAMG,OAJzB,oCAMCnU,EAAME,KACN,eAACqJ,EAAA,EAAD,CAAOtG,UAAU,yCAAjB,UACE,gCACE,6BACE,oBAAIA,UAAU,cAAd,8BAGJ,gCACGjD,EAAME,KAAKyJ,KAAI,SAACzJ,EAAK4J,GAAN,OACd,6BACE,+BACE,mBAAGO,OAAO,SAASC,IAAI,sBAAsBH,KAAI,0CAAqCjK,EAAKmJ,GAAGwO,SAA9F,SACE,qBAAKnJ,IAAKxO,EAAK4X,QAAQC,WAAWC,OAAOjJ,IAAKJ,IAAI,OAChD,uBACJ,mBAAG1L,UAAU,QAAb,SAAsB/C,EAAK4X,QAAQhC,qBAQ7C,qBAAK7S,UAAU,wCAAf,SACE,mBAAGA,UAAU,gCAAb,qMCPMsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAnGzB,SAAiBC,GAAO,IAAD,EACIC,mBAAS,CAChCxF,KAAM,OAFa,mBACfF,EADe,KACR+H,EADQ,OAIsBrC,mBAAS,MAJ/B,mBAIfyM,EAJe,KAICC,EAJD,KAKhBF,EAAUY,KAiBhB,OACE,gCACC,sBAAK7P,UAAU,0CAAf,UACG,oBAAIA,UAAU,6BAAd,oEACA,oBAAGA,UAAU,mCAAb,2IACuB,6BAIzB,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACA,mBAAGA,UAAU,8BAAb,oHACA,cAACsG,EAAA,EAAD,UACE,gCACE,+BACE,oBAAItG,UAAU,eAAd,SACE,cAAC,KAAD,CACEiP,QAASA,EACTe,aAAcd,EACd1F,SAAU2F,MAGd,6BACE,eAAC5J,EAAA,EAAD,CACEC,QAAQ,SACR/B,QAzCC,WACjB,GAAGyL,EAAe,CAChB,IAAMd,EAAM,yBAAqBc,EAAevI,MAApC,gDAA4E8D,2CACtFhF,IAAMwD,IAAN,uDAA0DmF,IACvDzI,MAAK,SAACgC,GACH,IAAI1K,EAAO0K,EAAS1K,KAAKmB,MACzB0G,EAAS,CACP7H,KAAMA,OAGX+I,OAAM,SAACC,GACJC,QAAQC,IAAIF,QA+BNjG,UAAU,mDAHZ,cAIE,cAAC,IAAD,CAAiB+Q,KAAMG,OAJzB,oDAaXnU,EAAME,KACN,eAACqJ,EAAA,EAAD,CAAOtG,UAAU,wBAAjB,UACE,gCACE,+BACE,uBACA,8CACA,+DAGJ,gCACGjD,EAAME,KAAKyJ,KAAI,SAACzJ,EAAK4J,GAAN,OACd,+BACE,qCAAQA,EAAI,KACZ,6BACE,mBAAGO,OAAO,SAASC,IAAI,sBAAsBH,KAAI,0CAAqCjK,EAAKmJ,GAAGwO,SAA9F,SACE,qBAAK5M,MAAM,MAAMuD,OAAO,MAAME,IAAKxO,EAAK4X,QAAQC,WAAWC,OAAOjJ,IAAKJ,IAAI,SAG/E,qBAAI1L,UAAU,YAAd,UACE,4BAAI/C,EAAK4X,QAAQhC,QACjB,+BAAO5V,EAAK4X,QAAQG,4BAO9B,qBAAKhV,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,wBAAf,SACC,mBAAGA,UAAU,4CAAb,yMCfGsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA1EzB,SAAiBC,GAAO,IAAD,EACIC,mBAAS,CAChCxF,KAAM,OAFa,mBACfF,EADe,KACR+H,EADQ,OAIsBrC,mBAAS,MAJ/B,mBAIfyM,EAJe,KAICC,EAJD,KAKhBF,EAAUY,KAiBhB,OACE,gCACC,sBAAK7P,UAAU,0CAAf,UACG,oBAAIA,UAAU,6BAAd,oEACA,oBAAGA,UAAU,qCAAb,2IACuB,6BAGzB,mBAAGA,UAAU,8BAAb,gIACE,cAAC,KAAD,CACIiP,QAASA,EACTe,aAAcd,EACd1F,SAAU2F,IAEd,eAAC5J,EAAA,EAAD,CACIC,QAAQ,SACR/B,QA/BS,WACjB,GAAGyL,EAAe,CAChB,IAAMd,EAAM,yBAAqBc,EAAevI,MAApC,gDAA4E8D,2CACtFhF,IAAMwD,IAAN,uDAA0DmF,IACvDzI,MAAK,SAACgC,GACH,IAAI1K,EAAO0K,EAAS1K,KAAKmB,MACzB0G,EAAS,CACP7H,KAAMA,OAGX+I,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAqBdjG,UAAU,sDAHd,cAIE,cAAC,IAAD,CAAiB+Q,KAAMG,OAJzB,oCAMFnU,EAAME,KACL,eAACqJ,EAAA,EAAD,CAAOtG,UAAU,yCAAjB,UACE,gCACE,6BACE,oBAAIA,UAAU,cAAd,8BAGJ,gCACGjD,EAAME,KAAKyJ,KAAI,SAACzJ,EAAK4J,GAAN,OACd,6BACE,qBAAI7G,UAAU,YAAd,UACE,mBAAGoH,OAAO,SAASC,IAAI,sBAAsBH,KAAI,0CAAqCjK,EAAKmJ,GAAGwO,SAA9F,SACE,qBAAKnJ,IAAKxO,EAAK4X,QAAQC,WAAWC,OAAOjJ,IAAKJ,IAAI,OAChD,uBACJ,mBAAG1L,UAAU,QAAb,SAAsB/C,EAAK4X,QAAQhC,qBAQ7C,qBAAK7S,UAAU,wCAAf,SACE,mBAAGA,UAAU,gCAAb,qMChDMsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EArBzB,SAAeC,GASd,OADFC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKnB,gCACA,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACE,cAAC,GAAD,MAGF,cAAC,KAAD,CAAYC,eAAgB,IAA5B,SACE,cAAC2M,GAAD,aCrBOC,GAAiB,SAACtV,GAG7B,IAAMY,EAAQ,IAAIL,KACZM,EAAOD,EAAMJ,cACbM,EAAQF,EAAMH,WAAa,EAC3BM,EAAMH,EAAMF,UAIZS,EAAa,IAAIZ,KAAKP,GACtBoB,EAASD,EAAWX,cACpBa,EAAUF,EAAWV,WAAa,EAClCa,EAAQH,EAAWT,UAGzB,OAAIG,IAASO,GAAUN,IAAUO,GAAWN,IAAQO,EAC1C,EAGA,GAOCiU,GAAqB,SAACC,GACjC,IAAIhO,EAAS,EAMb,OALAgO,EAAUxX,SAAQ,SAACyX,GAGJ,IAFDH,GAAeG,EAASvV,gBAEpBsH,OAEXA,GAIIkO,GAAoB,SAACF,GAC/B,IAAIG,EAAe,GACf3V,EAAO,IAAIO,KACXM,EAAOb,EAAKQ,cACZM,EAAQd,EAAKS,WAAa,EAC9BT,EAAKyB,QAAQzB,EAAKU,UAAY,GAC9B,IAAIK,EAAMf,EAAKU,UAaf,OAXG8U,GACAA,EAAUxX,SAAQ,SAACyX,GAChB,IAAIG,EAAS,IAAIrV,KAAKkV,EAASvV,eAC3B2V,EAASD,EAAOpV,cAChBsV,EAAUF,EAAOnV,WAAa,EAC9BsV,EAAQH,EAAOlV,UACfG,IAASgV,GAAU/U,IAAUgV,GAAW/U,IAAQgV,GACjDJ,EAAajY,KAAK+X,MAIpBE,GAaGK,GAAa,SAAC/X,GACzB,IAAIgY,EAAS,KAOb,OANYhT,KAAKC,MAAMC,aAAaC,QAAQ,UACtCpF,SAAQ,SAACL,GACTA,EAAKM,OAASA,IACdgY,EAAStY,MAGRsY,GCtEFC,GAAc,CAClB7R,OAAQ,OACR8R,aAAc,oBACd7R,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,QAuIA/B,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EApIzB,SAAiBC,GAChB,IAAII,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAD1B,EAKDP,mBACnBG,GAAuB,IADnBoT,EALgB,oBA+BpBvT,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKzB,IAAM2Y,EAAc,SAACpW,GACnB,OAAQA,GACN,KAAK,EACH,OAAO,qBAAKG,UAAU,sCAAf,gCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,yCAAf,sCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,wCAAf,oDAmBb,OACE,sBAAKA,WAAS,EAAd,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,aAAajF,UAAU,6BAAvC,8CAEF,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,IAAMrF,UAAU,sBAAjC,SACIgW,EAAYlU,OAAQ,GAAKqT,GAAmBa,GAAe,EAC3D,eAAC1P,EAAA,EAAD,CAAOE,UAAQ,EAACD,SAAO,EAAvB,UACE,kCACE,oBAAIvG,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,kDACA,oBAAIA,UAAU,oCAAd,gCACA,oBAAIA,UAAU,oCAAd,sCACA,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,0BACA,oBAAIA,UAAU,oCAAd,gCACA,qBAAIA,UAAU,oCAAd,qCAAuDmV,GAAmBa,GAAalU,UACvF,oBAAI9B,UAAU,oCAAd,6BAEF,gCACGgW,EAAYtP,KAAI,SAACzJ,EAAK4J,GAAN,OAGwB,IAAvCqO,GAAejY,EAAK6C,eACpB,+BACA,qBAAIE,UAAU,4CAAd,UACGC,EAAWhD,EAAK6C,eAChB7C,EAAKiZ,IAAM,sBAAKlW,UAAU,4CAAf,UAA2D,cAAC,IAAD,CAAiB+Q,KAAMoF,MAAlF,+BAAkH,MAEhI,oBAAInW,UAAU,wDAAd,SAAuE6K,GAAY5N,EAAK2O,kBACxF,qBAAI5L,UAAU,4CAAd,UACE,wBACE4G,MAAOkP,GACP1P,GAAE,sBAAiBS,GACnBuP,YAAa,kBAhDb,SAACvP,GACnBoF,SAASC,eAAe,eAAiBrF,GAAGD,MAAM1C,WAAa,UA+C5BmS,CAAYxP,IAC7ByP,WAAY,kBA7Cd,SAACzP,GACjBoF,SAASC,eAAe,eAAiBrF,GAAGD,MAAM1C,WAAa,OA4C7BqS,CAAU1P,IAC1B7G,UAAU,eACVyD,QAAS,kBA3CH,SAACxG,GACzBuF,EAAMgU,mBAAmBvZ,GACzBuF,EAAMhE,QAAQlB,KAAK,mBAyCYkZ,CAAmBvZ,IANlC,SAOIA,EAAKY,OAET,uBACCoY,EAAYhZ,EAAK4C,WAEpB,oBAAIG,UAAU,4CAAd,mBAA8D/C,EAAKwZ,UAAnE,YACA,oBAAIzW,UAAU,wDAAd,SAAuE/C,EAAKmF,QAC5E,oBAAIpC,UAAU,4CAAd,SAA2D/C,EAAKe,MAChE,oBAAIgC,UAAU,4CAAd,SAA2D/C,EAAKwN,UAChE,oBAAIzK,UAAU,wDAAd,SACIjC,OAAOd,EAAKmF,OAASrE,OAAOd,EAAKe,OAErC,6BACA,oBACEgC,UAAU,gCACVkH,KAAI,iBAAY0O,GAAW3Y,EAAKwZ,WAAWtP,OAC3CC,OAAO,SAASC,IAAI,sBAHtB,UAIC,cAAC,IAAD,CAAiB0J,KAAM2F,MAJxB,+CAQC,WAKP,qBAAK1W,UAAU,2DAAf,qFCrIL8V,GAAc,CAClB7R,OAAQ,OACR8R,aAAc,oBACd7R,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,QA+KA/B,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA5KzB,SAAiBC,GAChB,IAAII,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAD1B,EAKDP,mBACnBG,GAAwB,IADpBoT,EALgB,oBA+BpBvT,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKzB,IAAM2Y,EAAc,SAACpW,GACnB,OAAQA,GACN,KAAK,EACH,OAAO,qBAAKG,UAAU,sCAAf,gCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,yCAAf,sCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,wCAAf,oDAmBb,OACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIiF,cAAY,aAAajF,UAAU,6BAAvC,8CAEF,qBAAKA,UAAU,iBAAf,SACMgW,EAAYlU,OAAQ,GAAKqT,GAAmBa,GAAe,EAC3D,cAAC1P,EAAA,EAAD,CAAOC,SAAO,EAACvG,UAAU,QAAzB,SACE,gCACGgW,EAAYtP,KAAI,SAACzJ,EAAK4J,GAAN,OAGwB,IAAvCqO,GAAejY,EAAK6C,eACpB,6BACE,cAACwG,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACE,kCACE,6BACE,qBAAI2B,QAAQ,IAAInI,UAAU,oDAA1B,kDACU6K,GAAY5N,EAAK2O,gBACxB3O,EAAKiZ,IACN,sBAAKlW,UAAU,2CAAf,UACE,cAAC,IAAD,CAAiB+Q,KAAMoF,MADzB,gCAKC,QAML,+BACE,oBAAInW,UAAU,iDAAd,4CACA,oBAAImI,QAAQ,IAAInI,UAAU,4CAA1B,SACGC,EAAWhD,EAAK6C,oBAIrB,+BACE,oBAAIE,UAAU,iDAAd,gCACA,qBAAImI,QAAQ,IAAInI,UAAU,4CAA1B,UACE,wBACE4G,MAAOkP,GACP1P,GAAE,sBAAiBS,GACnBuP,YAAa,kBAzDrB,SAACvP,GACnBoF,SAASC,eAAe,eAAiBrF,GAAGD,MAAM1C,WAAa,UAwDpBmS,CAAYxP,IAC7ByP,WAAY,kBAtDtB,SAACzP,GACjBoF,SAASC,eAAe,eAAiBrF,GAAGD,MAAM1C,WAAa,OAqDrBqS,CAAU1P,IAC1B7G,UAAU,eACVyD,QAAS,kBApDX,SAACxG,GACzBuF,EAAMgU,mBAAmBvZ,GACzBuF,EAAMhE,QAAQlB,KAAK,mBAkDoBkZ,CAAmBvZ,IANlC,SAOIA,EAAKY,OAET,uBACCoY,EAAYhZ,EAAK4C,cAItB,+BACE,oBAAIG,UAAU,iDAAd,sCACA,oBAAImI,QAAQ,IAAInI,UAAU,4CAA1B,mBAA0E/C,EAAKwZ,UAA/E,eAGF,+BACG,oBAAIzW,UAAU,iDAAd,0BACA,oBAAIA,UAAU,wDAAd,SAAuE/C,EAAKmF,QAC5E,qBAAIpC,UAAU,wDAAd,cACIjC,OAAOd,EAAKmF,OAASrE,OAAOd,EAAKe,KADrC,OAGA,oBAAIgC,UAAU,iDAAd,0BACA,oBAAIA,UAAU,4CAAd,SAA2D/C,EAAKe,SAGnE,+BACE,oBAAIgC,UAAU,iDAAd,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,4CAA1B,SAAuE/C,EAAKwN,aAG9E,+BACE,oBAAIzK,UAAU,iDAAd,kDACA,oBAAImI,QAAQ,IAAInI,UAAU,4CAA1B,SACA,oBACEA,UAAU,gCACVkH,KAAI,iBAAY0O,GAAW3Y,EAAKwZ,WAAWtP,OAC3CC,OAAO,SAASC,IAAI,sBAHtB,UAIC,cAAC,IAAD,CAAiB0J,KAAM2F,MAJxB,+CAOF,+BACE,oBAAI1W,UAAU,iDAAd,4CACA,oBAAImI,QAAQ,IAAInI,UAAU,4CAA1B,SACA,oBACEA,UAAU,gCACVkH,KAAI,cAAS0O,GAAW3Y,EAAKwZ,WAAWnP,KACxCF,OAAO,SAASC,IAAI,sBAHtB,UAIC,cAAC,IAAD,CAAiB0J,KAAM4F,MAJxB,0CAaP,UAKP,qBAAK3W,UAAU,2DAAf,mFChJGsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAhCzB,SAAeC,GAQZC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAMzB,IAAMkZ,EAAoB,SAACvZ,GACzBuF,EAAMoU,iBAAiB3Z,GACvBuF,EAAMhE,QAAQlB,KAAK,oBAGrB,OACE,gCACG,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACC,cAAC,GAAD,CACEmO,mBAAoB,SAACvZ,GAAD,OAAQuZ,EAAmBvZ,QAInD,cAAC,KAAD,CAAYqL,eAAgB,IAA5B,SACE,cAAC,GAAD,CACGkO,mBAAoB,SAACvZ,GAAD,OAAQuZ,EAAmBvZ,eC1BpD4Z,GAAM,CACVrG,SAAU,QA6LGlO,eAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA1LZ,SAACC,GAOZC,oBALwB,WACM,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,aAOvB,IAcMwZ,EAAmB,SAAC9Y,GAIvB,IAAMoQ,EAAS,CACdhI,GAAI5D,EAAMmH,KAAKvD,GACfvI,KAAM2E,EAAMmH,KAAK8M,UACjB5W,OAAQ7B,GAEVyH,IAAMyE,MAAN,0DAA+D1H,EAAMmH,KAAKvD,IAAMgI,GAC/EzI,MAAK,SAAUgC,GAEblC,IACIC,KAAK,wDAAyDlD,EAAMlG,SACpEqJ,MAAK,SAACC,GACL7C,aAAamG,WAAW,aACxBnG,aAAa8C,QAAQ,YAAahD,KAAKiD,UAAUF,EAAI3I,OACrDuF,EAAMhE,QAAQlB,KAAK,iBAEpB0I,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAElBR,IACCC,KAAK,+CACLC,MAAK,SAACC,GACH,IAAI5I,EAASuC,EAAUqG,EAAI3I,MAC3BuF,EAAMwE,SAAShK,MAElBgJ,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGd2B,MAAMD,EAAS1K,KAAK4K,YAGrB7B,OAAM,WACL4B,MAAM,aAKZ,OACC,qCACC,qBAAK5H,UAAU,mBAAf,SACE,oBAAIA,UAAU,mBAAd,iEAEF,cAACkF,EAAA,EAAD,UACE,cAAEC,EAAA,EAAF,CAAMC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKtF,UAAU,sBAA5C,SACGwC,EAAMmH,KACL,gCAGA,cAACrD,EAAA,EAAD,CAAOE,UAAQ,EAAf,SACE,kCACE,+BACE,oBAAIxG,UAAU,wBAAd,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,mBAA1B,SAA8CwC,EAAMmH,KAAK9L,UAE3D,+BACE,oBAAImC,UAAU,wBAAd,sCACA,oBAAImI,QAAQ,IAAInI,UAAU,mBAA1B,mBAAiDwC,EAAMmH,KAAK8M,UAA5D,eAEF,+BACE,oBAAIzW,UAAU,wBAAd,0BACA,oBAAIA,UAAU,mBAAd,SAAkCwC,EAAMmH,KAAKvH,QAC7C,oBAAIpC,UAAU,wBAAd,gCACA,oBAAIA,UAAU,mBAAd,SAAkCwC,EAAMmH,KAAK3L,SAE/C,+BACE,oBAAIgC,UAAU,wBAAd,sCACA,oBAAIA,UAAU,mBAAd,SAAkCjC,OAAOyE,EAAMmH,KAAKvH,OAASrE,OAAOyE,EAAMmH,KAAK3L,OAC/E,oBAAIgC,UAAU,wBAAd,sCACA,oBAAIA,UAAU,mBAAd,SAtFS,WACnB,OAAQwC,EAAMmH,KAAK9J,QACjB,KAAK,EACH,OAAO,qBAAKG,UAAU,iCAAf,gCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,oCAAf,sCACT,KAAK,EACH,OAAO,qBAAKA,UAAU,mCAAf,mDA+EiC+W,aAOvC,oBAAG/W,UAAU,mBAAb,mHAAiD,uBAAjD,sGACA,0BAAUA,UAAU,mBAApB,SACwB,IAAtBwC,EAAMmH,KAAK9J,OACV,qCACG,eAAC0F,EAAA,EAAD,CACGC,QAAQ,UACRxF,UAAU,6CACVyD,QAAS,kBAAIqT,EAAiB,IAC9BlQ,MAAOiQ,GAJV,UAMC,cAAC,IAAD,CAAiB9F,KAAM0C,MANxB,+CASA,eAAClO,EAAA,EAAD,CACGC,QAAQ,SACRxF,UAAU,4CACVyD,QAAS,kBAAIqT,EAAiB,IAC9BlQ,MAAOiQ,GAJV,UAMG,cAAC,IAAD,CAAiB9F,KAAMiG,MAN1B,8DAamB,IAAtBxU,EAAMmH,KAAK9J,OACX,qCACG,eAAC0F,EAAA,EAAD,CACGC,QAAQ,UACRxF,UAAU,6CACVyD,QAAS,kBAAIqT,EAAiB,IAC9BlQ,MAAOiQ,GAJV,UAMC,cAAC,IAAD,CAAiB9F,KAAOkG,MANzB,+CASA,eAAC1R,EAAA,EAAD,CACGC,QAAQ,SACRxF,UAAU,4CACVyD,QAAS,kBAAIqT,EAAiB,IAC9BlQ,MAAOiQ,GAJV,UAMG,cAAC,IAAD,CAAiB9F,KAAOiG,MAN3B,8DAaF,qCACA,eAACzR,EAAA,EAAD,CACGC,QAAQ,UACRxF,UAAU,6CACVyD,QAAS,kBAAIqT,EAAiB,IAC9BlQ,MAAOiQ,GAJV,UAMC,cAAC,IAAD,CAAiB9F,KAAOkG,MANzB,+CASA,eAAC1R,EAAA,EAAD,CACKC,QAAQ,UACRxF,UAAU,6CACVyD,QAAS,kBAAIqT,EAAiB,IAC9BlQ,MAAOiQ,GAJZ,UAMG,cAAC,IAAD,CAAiB9F,KAAM0C,MAN1B,uDAeL,cC9HKnR,eAAWC,aAAQ,SAAAxF,GAAK,OAAEA,IAAfwF,EAxDL,SAACC,GAUpB,OADDC,wBAJ8B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAKtB,qCACG,qBAAK0C,UAAU,wBAAf,SACE,oBAAIA,UAAU,8BAAd,gEAEF,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKtF,UAAU,sCAA5C,SACEsV,GAAmBzS,KAAKC,MAAMC,aAAaC,QAAQ,eAAe0D,KAAI,SAACzJ,EAAK4J,GAAN,OACrE,qCACA,sBAAK7G,UAAU,sBAAf,mBAAuC/C,EAAKwZ,UAA5C,wBACA,cAACnQ,EAAA,EAAD,CAAOE,UAAQ,EAACxG,UAAU,OAA1B,SACE,kCACE,+BACE,oBAAIA,UAAU,yCAAd,gCACA,oBAAImI,QAAQ,IAAInI,UAAU,mBAA1B,SAA8C/C,EAAKY,UAErD,+BACE,oBAAImC,UAAU,yCAAd,4CACA,oBAAImI,QAAQ,IAAInI,UAAU,mBAA1B,SAA8C/C,EAAKwN,aAErD,+BACE,oBAAIzK,UAAU,yCAAd,kDACA,oBAAImI,QAAQ,IAAInI,UAAU,mBAA1B,SAA8C6K,GAAY5N,EAAK2O,qBAEjE,+BACE,oBAAI5L,UAAU,yCAAd,sCACA,oBAAIA,UAAU,mBAAd,SAAkC/C,EAAKmF,QACvC,oBAAIpC,UAAU,yCAAd,sCACA,oBAAIA,UAAU,mBAAd,SAAkC/C,EAAKe,MACvC,oBAAIgC,UAAU,yCAAd,sCACA,oBAAIA,UAAU,mBAAd,SAAkC/C,EAAKmF,MAAQnF,EAAKe,SAEtD,6C,8ECnDDkZ,GAAa,SAACvZ,GAC1B,IAAIuE,EAAQ,EAOZ,OANGvE,GACDA,EAAMC,SAAQ,SAACX,GACb,IAAIe,EAAMf,EAAKka,aAAIpZ,OAAOd,EAAKka,cAAM,EACrCjV,GAASlE,KAGNkE,GAIKkV,GAAY,SAACna,EAAMU,GAC7B,IAAI0Z,EAAWH,GAAWvZ,GAC1B,OAAOV,EAAKka,aAAI/T,KAAKmH,MAAQxM,OAAOd,EAAKka,cAAOE,EAAW,KAAO,I,+BCJhEC,GAAO,SAACC,GAGZ,IAFA,IAAIC,EAAM,IAAIC,YAAYF,EAAEzV,QACxB4V,EAAO,IAAIC,WAAWH,GACjB3Q,EAAI,EAAGA,IAAM0Q,EAAEzV,SAAU+E,EAAG6Q,EAAK7Q,GAAuB,IAAlB0Q,EAAEK,WAAW/Q,GAC1D,OAAO2Q,GAEGK,GAAc,SAACla,GAC3B,IAGIma,EAAS,GACLC,EAAWC,OAAOC,KAAKta,GACvBua,EAAWH,EAASjW,OAC1BgW,EAAOxa,KAAK,CAAC,eAAM,eAAM,eAAK,iBAC9B,IAAI,IAAIuJ,EAAE,EAAGA,EAAGqR,EAAUrR,IACxBiR,EAAOxa,KACL,CACEK,EAAMoa,EAASlR,IAAf,IACAlJ,EAAMoa,EAASlR,IAAf,KACAlJ,EAAMoa,EAASlR,IAAf,IACAlJ,EAAMoa,EAASlR,IAAI,kBAK3B,IA5BwB5J,EAAMkb,EA4B1BC,GA5BoBnb,EA4BC6a,EAjCD,SAACO,EAAOF,GAChC,IAAI1D,EAAI0D,GAAQA,EAAKE,MAAQF,EAAKE,MAAQ,SACpCC,EAAS,GACb,OADiBA,EAAO7D,GAAK4D,EACtB,CAAEE,WAAY,CAAC9D,GAAI+D,OAAQF,GAG7BG,CAAkBC,KAAKC,MAAMC,aAAa3b,EAAMkb,GAAOA,IA4B1DU,EAASH,KAAKI,MAAMV,EAnBP,CACfvZ,KAAM,WAmBJka,EAAO,IAAIC,KAAK,CAAC1B,GAAKuB,IAAU,CAAEha,KAAM,6BAC5Coa,kBAAOF,EAAM,kCC+CAzW,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EA9EzB,SAAiBC,GAEhB,IAAM7E,EAAQ6E,EAAM5F,UAepB,OANE6F,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAUvB,gCACG,sBAAK0C,UAAU,8BAAf,mBACE,oBAAIA,UAAU,mBAAd,sCACC,oBAAIA,UAAU,mBAAd,0BAAuC,IAAIG,MAAQE,WAAa,EAAhE,qBAEH,cAAC6Y,GAAA,EAAD,CAAqBlR,MAAM,OAAOuD,OAAQ,IAAKvL,UAAU,WAAzD,SACK,eAACmZ,GAAA,EAAD,CAAWlc,KAAMU,EAAO+R,OAAQ,CAAE0J,IAAK,EAAGC,MAAO,EAAGC,KAAM,GAAIC,OAAQ,GAAtE,0BACG,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QADlC,qBAEG,cAACC,GAAA,EAAD,CAAOC,QAAQ,QAAQ,cAACC,GAAA,EAAD,IAF1B,qBAGG,cAACC,GAAA,EAAD,IACC,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKJ,QAAQ,eAAKK,KAAK,gBAI/B,qBAAKha,UAAU,+CAAf,SACI,qBAAIA,UAAU,mBAAd,6DAA2CkX,GAAWvZ,GAAtD,cAEJ,qBAAKqC,UAAU,yBAAf,SACCrC,EACC,gCACE,cAAC4H,EAAA,EAAD,CACEC,QAAQ,UACRxF,UAAU,cACVyD,QA7BO,WACjBoU,GAAYla,IAyBJ,+BAKA,eAAC2I,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACE,kCACI,+BACI,oBAAIoE,QAAQ,IAAI5K,UAAU,kEAA1B,0BACA,oBAAI4K,QAAQ,IAAI5K,UAAU,kEAA1B,0BACA,oBAAImI,QAAQ,IAAInI,UAAU,qDAA1B,6BAEJ,+BACE,oBAAIA,UAAU,qDAAd,gCACA,oBAAIA,UAAU,qDAAd,sCACA,oBAAIA,UAAU,qDAAd,yCAGN,gCACKrC,EAAM+I,KAAI,SAACzJ,GAAD,OACP,+BACE,oBAAI+C,UAAU,+BAAd,SAA8C/C,EAAK0D,MACnD,oBAAIX,UAAU,+BAAd,SAA8C/C,EAAKgd,OACnD,oBAAIja,UAAU,+BAAd,SAA8C/C,EAAKe,MACnD,oBAAIgC,UAAU,+BAAd,SAA8C/C,EAAKka,eACnD,oBAAInX,UAAU,+BAAd,SAA+CoX,GAAUna,EAAMU,mBAO7E,qBAAKqC,UAAU,2DAAf,mFCIKsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAzEzB,SAAiBC,GAChB,IAAM7E,EAAQ6E,EAAM5F,UAYpB,OALE6F,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YASvB,sBAAK0C,UAAU,QAAf,UACG,sBAAKA,UAAU,8BAAf,mBACE,oBAAIA,UAAU,mBAAd,sCACC,oBAAIA,UAAU,mBAAd,0BAAuC,IAAIG,MAAQE,WAAa,EAAhE,qBAGH,cAAC6Y,GAAA,EAAD,CAAqBlR,MAAM,OAAOuD,OAAQ,IAAKvL,UAAU,iBAAzD,SACK,eAACmZ,GAAA,EAAD,CAAWlc,KAAMU,EAAO+R,OAAQ,CAAE0J,IAAK,EAAGC,MAAO,EAAGC,KAAM,GAAIC,OAAQ,GAAtE,0BACG,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QADlC,qBAEG,cAACC,GAAA,EAAD,CAAOC,QAAQ,SAAS,cAACC,GAAA,EAAD,IAF3B,qBAGG,cAACC,GAAA,EAAD,IACC,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKJ,QAAQ,eAAKK,KAAK,gBAI/B,qBAAKha,UAAU,+CAAf,SACI,qBAAIA,UAAU,gCAAd,6DAAwDkX,GAAWvZ,GAAnE,cAEJ,cAAC4H,EAAA,EAAD,CACEC,QAAQ,UACRxF,UAAU,SACVyD,QA1Bc,WAClBoU,GAAYla,IAsBV,+BAKA,qBAAKqC,UAAU,sBAAf,SACGrC,EACE,eAAC2I,EAAA,EAAD,CAAOE,UAAQ,EAAf,UACA,kCACI,+BACI,oBAAIoE,QAAQ,IAAI5K,UAAU,kEAA1B,0BACA,oBAAI4K,QAAQ,IAAI5K,UAAU,kEAA1B,0BACA,oBAAImI,QAAQ,IAAInI,UAAU,qDAA1B,6BAEJ,+BACE,oBAAIA,UAAU,qDAAd,gCACA,oBAAIA,UAAU,qDAAd,sCACA,oBAAIA,UAAU,qDAAd,yCAGN,gCACKrC,EAAM+I,KAAI,SAACzJ,GAAD,OACP,+BACE,oBAAI+C,UAAU,+BAAd,SAA8C/C,EAAK0D,MACnD,oBAAIX,UAAU,+BAAd,SAA8C/C,EAAKgd,OACnD,oBAAIja,UAAU,+BAAd,SAA8C/C,EAAKe,MACnD,oBAAIgC,UAAU,+BAAd,SAA8C/C,EAAKka,eACnD,oBAAInX,UAAU,+BAAd,SAA+CoX,GAAUna,EAAMU,gBAM5E,qBAAKqC,UAAU,2DAAf,mFC7CKsC,mBAAWC,aAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAtBzB,SAAeC,GAUd,OAFEC,wBAJ6B,IAAxBD,EAAMjG,SAASuF,QAChBU,EAAMhE,QAAQlB,KAAK,YAMvB,gCACG,cAAC,KAAD,CAAY+K,eAAgB,IAA5B,SACC,cAAC,GAAD,MAGF,cAAC,KAAD,CAAYC,eAAgB,IAA5B,SACE,cAAC,GAAD,aCwYO/F,oBAAQ,SAACxF,GAAD,OAASA,IAAjBwF,EAtXd,SAAaC,GACX,IAAI0X,EAAa1X,EAAMjG,SAASuF,OAAO,GAAOlB,EAAoB4B,EAAMjG,SAAS,GAAG0F,OAAO,IAAIH,OAAQ,EAAKE,GAAepB,EAAoB4B,EAAMjG,SAAS,GAAG0F,OAAO,KAAM,EAC1KkY,EAAS3X,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAG6J,GAAK,KAC9DyF,KAHkB,MAKOpJ,mBAAS,CAChC2X,OAAQ,EACRC,SAAU,EACVC,WAAW,EACXC,UAAW,EACXC,YAAa,EACbC,aAAc,KACdC,aAAc,KACdC,SAAU,OAbM,mBAKZ5d,EALY,KAKL+H,EALK,KAyGZ8V,EAAY,SAACvc,GACjByG,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWxd,EAAMwd,UACjBC,YAAazd,EAAMyd,YACnBC,aAAcpc,EACdqc,aAAc3d,EAAM2d,aACpBC,SAAU5d,EAAM4d,YAyCpB,OAEE,eAAC,IAAD,WACA,qBAAK3a,UAAU,YAAf,SACA,sBAAKA,UAAU,yDAAf,UACE,uBAAMA,UAAU,0BAAhB,UAA0C,cAAC,IAAD,CAAiB+Q,KAAM0C,MAAjE,qDAEA,wBAAQzT,UAAU,iBAAiBnB,KAAK,SAASgc,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAAtL,SACE,sBAAMjb,UAAU,0BAGlB,sBAAKA,UAAU,2BAA2BoG,GAAG,yBAA7C,UACE,oBAAIpG,UAAU,qBAAd,SACGwC,EAAMjG,SAASuF,OAAQ,GACM,IAA5BU,EAAMjG,SAAS,GAAGwF,MAElB,qCACE,oBAAImG,MAAM,4BAAV,SACE,uBAAMlI,UAAU,gCAAhB,UAAgD,cAAC,IAAD,CAAiB+Q,KAAMmK,MAAW1Y,EAAMjG,SAAS,GAAGsB,KAApG,oBAEF,oBAAImC,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,YAAYnb,UAAU,iBAA/B,UACE,cAAC,IAAD,CAAiB+Q,KAAMsC,IAAgBrT,UAAU,gBADnD,gCAKF,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,IAAInb,UAAU,iBAAvB,UACE,cAAC,IAAD,CAAiB+Q,KAAMqK,IAASpb,UAAU,gBAD5C,sCAKF,oBAAIA,UAAU,qBAAd,SACC,eAAC,IAAD,CAAMmb,GAAG,SAASnb,UAAU,iBAA5B,UACG,cAAC,IAAD,CAAiB+Q,KAAMuC,IAAQtT,UAAU,gBAD5C,gCAKD,oBAAIA,UAAU,qBAAd,SACC,eAAC,IAAD,CAAMmb,GAAG,UAAUnb,UAAU,iBAA7B,UACC,cAAC,IAAD,CAAiB+Q,KAAMsK,IAASrb,UAAU,gBAD3C,4CAKF,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,aAAanb,UAAU,iBAAhC,UACC,cAAC,IAAD,CAAiB+Q,KAAMkG,IAAajX,UAAU,gBAD/C,4CAKF,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,SAASnb,UAAU,iBAA5B,UACC,cAAC,IAAD,CAAiB+Q,KAAMuK,IAAYtb,UAAU,gBAD9C,gCAOAsV,GAAmBzS,KAAKC,MAAMC,aAAaC,QAAQ,eAAelB,OAAQ,EAC1E,oBAAI9B,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,eAAenb,UAAU,iBAAlC,UACC,cAAC,IAAD,CAAiB+Q,KAAMwK,IAAkBvb,UAAU,gBADpD,kDAMH,MAMA,qCACE,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,YAAYnb,UAAU,iBAA/B,UACE,cAAC,IAAD,CAAiB+Q,KAAMsC,MADzB,gCAKF,oBAAIrT,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,cAAcnb,UAAU,iBAAjC,UACE,cAAC,IAAD,CAAiB+Q,KAAMmK,IAAQlb,UAAU,eAD3C,4CAKF,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,cAAcnb,UAAU,iBAAjC,UACC,cAAC,IAAD,CAAiB+Q,KAAMwK,IAAkBvb,UAAU,eADpD,kDAKF,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,eAAenb,UAAU,iBAAlC,UACC,cAAC,IAAD,CAAiB+Q,KAAMwK,IAAkBvb,UAAU,eADpD,gCAMF,oBAAIA,UAAU,qBAAd,SACE,eAAC,IAAD,CAAMmb,GAAG,SAASnb,UAAU,iBAA5B,UACC,cAAC,IAAD,CAAiB+Q,KAAMG,KAAWlR,UAAU,oBAD7C,gCAKDka,EAAU,EACX,oBAAIla,UAAU,WAAd,SACE,yBAAQnB,KAAK,SAASqJ,MAAM,2DAA2D9B,GAAG,aAAa3C,QApHrG,WAChB,IAAI2L,EAAK,GAML,OALJA,EAAG,GAAS+K,EACZ/K,EAAG,MAAY8K,EACfnX,aAAa8C,QAAQ,MAAOhD,KAAKiD,UAAUsJ,IAC3CnD,SAASC,eAAe,eAAesP,YAActB,EACrDuB,IAAE,aAAaC,UACJ,GA6GG,UACC,cAAC,IAAD,CAAiB3K,KAAM4K,MADxB,0BAKF,MAGJ,+BAIJ,oBAAI3b,UAAU,aAAd,SACCwC,EAAMjG,SAASuF,OAAQ,EACrB,oBAAI9B,UAAU,qBAAd,SACE,yBACCA,UAAU,SACVyD,QAtQO,WACjB,IAAIzG,E7DiMA,CACJ6B,KAAM,U6DjMN2D,EAAMwE,SAAShK,GAEf,IAAI4e,E7DsNA,CACJ/c,KAAM,a6DtNN2D,EAAMwE,SAAS4U,GAGfnW,IACCwD,IAAI,gDACJtD,MAAK,SAACC,GACJ7C,aAAa8C,QAAQ,SAAUhD,KAAKiD,UAAUF,EAAI3I,UAGpD+I,OAAM,SAACC,GACLC,QAAQC,IAAIF,MAEfnB,EAAS,CACR7H,KAAM4F,KAAKC,MAAMC,aAAaC,QAAQ,cAqP7BiC,cAAY,YAHb,UAMD,cAAC,IAAD,CAAiB8L,KAAM8K,MANtB,sCAUH,oBAAI7b,UAAU,qBAAd,SAAmC,eAAC,IAAD,CAAMmb,GAAG,SAASnb,UAAU,iBAAiBiF,cAAY,aAAzD,UACjC,cAAC,IAAD,CAAiB8L,KAAM+K,MADU,0CAUjC,uBAAK,uBACX,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,cAAC,GAAD,CACE7T,UAAW,SAAChC,GAAD,OApQD,SAACA,GAEjBtB,EAAS,CACPsV,OAAQhU,EACRiU,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWxd,EAAMwd,UACjBC,YAAazd,EAAMyd,YACnBC,aAAc1d,EAAM0d,aACpBC,aAAc3d,EAAM2d,aACpBC,SAAU5d,EAAM4d,WA0PKuB,CAAU9V,SAE/B,cAAC,IAAD,CAAO4V,KAAK,SAASC,OAAQ,kBAAI,cAAC,GAAD,OACjC,cAAC,IAAD,CAAOD,KAAK,aAAaG,UAAWC,KACpC,cAAC,IAAD,CAAOJ,KAAK,cAAcC,OAAS,kBAAM,cAAC,GAAD,CAAM7V,GAAI5D,EAAMjG,SAASuF,OAAO,EAAGU,EAAMjG,SAAS,GAAG6J,GAAK,QACnG,cAAC,IAAD,CAAO4V,KAAK,uBAAuBC,OAAS,kBAAM,cAAC,GAAD,CAAc7V,GAAIrJ,EAAMqd,YAC1E,cAAC,IAAD,CAAO4B,KAAK,cAAcG,UAAWE,KACrC,cAAC,IAAD,CAAOL,KAAK,iBAAkBC,OAAQ,kBAAI,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOD,KAAK,uBAAwBC,OAAQ,kBAAI,cAACK,GAAD,OAEhD,cAAC,IAAD,CAAON,KAAK,eAAeG,UAAWI,KACtC,cAAC,IAAD,CAAOP,KAAK,SAAUC,OAAQ,kBAAI,cAAC,GAAD,CAChClO,cAAe,SAAC1P,GAAD,OAnQC,SAACA,GAErByG,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYjc,EACZkc,UAAWxd,EAAMwd,UACjBC,YAAazd,EAAMyf,UACnB/B,aAAc1d,EAAM0d,aACpBC,aAAc3d,EAAM2d,aACpBC,SAAU5d,EAAM4d,WAyPS8B,CAAcpe,IACrC2P,aAAc,SAAC3P,GAAD,OAvPC,SAACA,GAEpByG,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWlc,EACXmc,YAAazd,EAAMyf,UACnB/B,aAAc1d,EAAM0d,aACpBC,aAAc3d,EAAM2d,aACpBC,SAAU5d,EAAM4d,WA6OQ+B,CAAare,SAErC,cAAC,IAAD,CAAO2d,KAAK,aAAaG,UAAWQ,KACpC,cAAC,IAAD,CAAOX,KAAK,iBAAiBC,OAAS,kBAAM,cAAC,GAAD,CAAS5d,KAAMtB,EAAMwd,eACjE,cAAC,IAAD,CAAOyB,KAAK,cAAcC,OAAS,kBAAM,cAAC,GAAD,CAAU5d,KAAMtB,EAAMud,gBAC/D,cAAC,IAAD,CAAO0B,KAAK,UAAUC,OAAQ,kBAAI,cAAC,GAAD,CAAYrM,eAAgB,SAACxJ,GAAD,OA/O3C,SAACA,GAEtBtB,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWxd,EAAMwd,UACjBC,YAAapU,EACbqU,aAAc1d,EAAM0d,aACpBC,aAAc3d,EAAM2d,aACpBC,SAAU5d,EAAM4d,WAqOoDiC,CAAexW,SACnF,cAAC,IAAD,CAAO4V,KAAK,cAAcG,UAAWU,KACrC,cAAC,IAAD,CAAOb,KAAK,eAAeC,OAAS,kBAAM,cAAC,GAAD,CAAW7V,GAAIrJ,EAAMyd,iBAC/D,cAAC,IAAD,CAAOwB,KAAK,YACVC,OAAQ,kBACR,cAAC,GAAD,CACEpL,iBAAkB,SAACxS,GAAD,OAvOL,SAACA,GACpByG,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWxd,EAAMwd,UACjBC,YAAazd,EAAMyd,YACnBC,aAAcpc,EACdqc,aAAc3d,EAAM2d,aACpBC,SAAU5d,EAAM4d,WA8NcF,CAAapc,IACvC+S,sBAAuB,SAAC/S,GAAD,OAhMbpB,EAgM8BoB,OA/L9CyG,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWxd,EAAMwd,UACjBC,YAAazd,EAAMyd,YACnBC,aAAc1d,EAAM0d,aACpBC,aAAc3d,EAAM2d,aACpBC,SAAU1d,IATG,IAACA,GAiMV2T,YAAa7T,EAAM0d,kBAEvB,cAAC,IAAD,CAAOuB,KAAK,iBACVC,OAAQ,kBACN,cAAC,GAAD,CACElP,SAAUhQ,EAAM0d,aAChBjI,eAAgB,SAACnU,GAAD,OAAQuc,EAAWvc,SAEzC,cAAC,IAAD,CAAO2d,KAAK,uBACVC,OAAQ,kBACN,cAAC,GAAD,CACElP,SAAUhQ,EAAM0d,aAChBjI,eAAgB,SAACnU,GAAD,OAAQuc,EAAWvc,SAE1C,cAAC,IAAD,CAAO2d,KAAK,oBACXC,OAAQ,kBACN,cAAC,GAAD,CACEjJ,UAAWjW,EAAM4d,cAGtB,cAAC,IAAD,CAAOqB,KAAK,0BACTC,OAAQ,kBACN,cAAC,GAAD,CACIjJ,UAAWjW,EAAM4d,cAExB,cAAC,IAAD,CAAOqB,KAAK,sBAAsBG,UAAWW,KAC7C,cAAC,IAAD,CAAOd,KAAK,4BAA4BG,UAAWY,KACnD,cAAC,IAAD,CAAOf,KAAK,SAASG,UAAWa,KAElC,cAAC,IAAD,CAAOhB,KAAK,aACXC,OAAQ,kBACN,cAAC,GAAD,CACErF,iBAAkB,SAAC3Z,GAAD,OA/OL,SAACA,GACpB6H,EAAS,CACPsV,OAAQrd,EAAMqd,OACdC,SAAUtd,EAAMsd,SAChBC,WAAYvd,EAAMud,WAClBC,UAAWxd,EAAMwd,UACjBC,YAAazd,EAAMyd,YACnBC,aAAc1d,EAAM0d,aACpBC,aAAczd,EACd0d,SAAU5d,EAAM4d,WAsOcsC,CAAahgB,SAE5C,cAAC,IAAD,CAAO+e,KAAK,kBACXC,OAAQ,kBACN,cAAC,GAAD,CACEtS,KAAM5M,EAAM2d,kBAEf,cAAC,IAAD,CAAOsB,KAAK,eACXC,OAAQ,kBACN,cAAC,GAAD,OAGJ,cAAC,IAAD,CAAOD,KAAK,SAASG,UAAWe,WCjZvBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1X,MAAK,YAAkD,IAA/C2X,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCEdO,IAAS1B,OACP,cAAC,IAAD,CAAU2B,MAAOC,EAAjB,SACE,cAAC,KAAD,CAAcC,eAAgB,iBAAM,QAApC,SACC,cAAC,GAAD,QAGH7R,SAASC,eAAe,SAO1BiR,M","file":"static/js/main.6a9142cb.chunk.js","sourcesContent":["\nimport { createStore } from \"redux\";\n\nlet init_data ={\n  userkey: null,\n  userData: [],\n  orderItem: null,\n  buyCarts: [],\n  historyData: null,\n  pageData: null,\n  chartData: null,\n  youtubeData: null\n}\n\nconst storeReducer = (state = init_data, action)=>{\n  switch (action.type) {\n    case 'KEY':\n      return keyReducer(state, action);\n    case 'LOGIN':\n      return loginReducer(state, action);\n    case 'LOGOUT':\n      return logoutReducer(state, action);\n    case 'ORDER':\n      return ordersReducer(state, action);\n    case 'ORDERSTOCK':\n      return ordersStockChangeReducer(state, action);\n    case 'CARTADD':\n      return cartReducer(state, action);\n    case 'CARTRESET':\n      return cartResetReducer(state, action);\n    case 'CARTDELETE':\n      return cartDeleteReducer(state, action);\n    case 'CARTUPDATE':\n      return cartUpdateReducer(state, action);\n    case 'USERHISTORY':\n      return userHistoryReducer(state, action);  \n    case 'SEARCHDATA':\n      return searchReducer(state, action);  \n    case 'CHART':\n      return chartReducer(state, action);  \n    case 'YOUTUBE':\n      return youtubeReducer(state, action);  \n    default:\n      return state\n  }\n}\n/**************[-----redux処理---------]*********************************************************************** */\nconst keyReducer =(state, action)=>{\n   let data = action.data;\n  \n   return{\n    userkey: data,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\nconst loginReducer = (state, action)=>{\n  let newData = state.userData.slice();\n  newData.splice(0);\n  newData.push(action.user);\n \n  return{\n    userkey: state.userkey,\n    userData: newData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\nconst logoutReducer =(state, action)=>{\n    let newData = state.userData.slice();\n    newData.splice(0);\n    return{\n      userData: newData,\n      buyCarts: state.buyCarts,historyData: state.historyData\n    }\n  }\nconst ordersReducer = (state, action)=>{\n  let data = state.orderItem;\n  data = action.data;\n \n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: data,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\n/*買い物確認削除ボタン*/\nconst ordersStockChangeReducer = (state, action) =>{\n  let datas = state.orderItem.slice();\n  datas.forEach((data)=>{\n    if(data.name === action.name){\n      let stock = Number(data.stock);\n      stock += Number(action.num); /*在庫元に戻す*/\n      data.stock = stock;\n    }\n  });\n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: datas,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\nconst cartReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.push(action.data);\n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\nconst cartResetReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\nconst cartUpdateReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  action.items.forEach((item) => {\n    data.push(item);\n  });\n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\nconst cartDeleteReducer = (state, action)=>{\n  let datas = state.buyCarts.slice();\n  datas.splice(action.num, 1);\n  \n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: datas,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\n\nconst userHistoryReducer = (state, action)=>{\n  let history = action.data;\n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: history,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\n/*ページネーション検索*/\nconst searchReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: data,\n    chartData: state.chartData,\n    youtubeData: state.youtubeData\n  }\n}\n/*グラフ用*/\nconst  chartReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: data,\n    youtubeData: state.youtubeData\n  }\n}\n/*youtube用*/\nconst  youtubeReducer = (state, action)=>{\n  let data = action.data;\n   \n   return{\n    userkey: state.userkey,\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData,\n    youtubeData: data\n   }\n}\n/**************[-----コンポーネント送受メソッド処理---------]*********************************************************************** */\nexport const keySend = (data)=>{\n  return{\n    type: 'KEY',\n    data: data\n  }\n}\nexport  const sendLoginData = (user)=>{\n  return{\n    type:'LOGIN',\n    user: user\n  };\n}\nexport const logoutAction =()=>{\n  return{\n    type: 'LOGOUT'\n  }\n}\nexport const cartsAdd = (item)=>{\n  return{\n    type: 'CARTADD',\n    data: item\n  }\n}\nexport const ordersSend = (data)=>{\n  return{\n    type: 'ORDER',\n    data: data\n  }\n}\nexport const ordersStockChange = (name, num)=>{\n  return{\n    type: 'ORDERSTOCK',\n    name: name,\n    num: num\n  }\n}\nexport const cartEmpty = ()=>{\n  return{\n    type: 'CARTRESET'\n  }\n}\nexport const cartDeleteCart = (index)=>{\n  return{\n    type: 'CARTDELETE',\n    num: index\n  }\n}\nexport const cartUpdate = (items)=>{\n  return{\n    type: 'CARTUPDATE',\n    items: items\n  }\n}\nexport const historyDataSend = (data)=>{\n  return{\n    type: 'USERHISTORY',\n    data: data\n  }\n}\nexport const searchSend = (data)=>{\n  return{\n    type: 'SEARCHDATA',\n    data: data\n  }\n}\n/*グラフ用*/\nexport const chartSend = (data)=>{\n  return{\n    type: 'CHART',\n    data: data\n  }\n}\n/*youtube該当商品用*/\nexport const youtubeSeearchSend = (data)=>{\n  return{\n    type: 'YOUTUBE',\n    data: data\n  }\n}\nexport default createStore(storeReducer)","import React from 'react';\n\n/*注文された商品中受け渡し済み以外申請中と加工済みの件数検知*/\n\nexport const ordercheck = (datas) =>{\n   let count = 0;\n   let date = null;\n  if(datas){\n    datas.forEach(data => {\n        if(data.status === 0 || data.status === 1){\n            count += 1;\n            date = data.shopping_date;\n        }\n    });\n    return {\n        count:  count + '件注文',\n        date: date\n    }\n  }\n  else{\n    return '履歴なし';\n  }\n}\n/* 注文された商品の履歴状況分岐  */\n\nexport const orderHistoryStatus = (status) =>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 1:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 2:\n      return <div className=\"font-weight-bold\">完了済み</div>\n    default:\n      break;\n  }\n}\n/****************************************************************************************************** */\n/*日付の表示設定*/\nexport const daySetting = (date)=>{\n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let day = newDate.getDate();\n  return year + '年' + month + '月' +day +'日';\n}\n/***************************************************************************************************** */\n/*共通パラメーター*/\nconst todayParams =()=>{\n  /*本日*/\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  return{\n    year: year,\n    month: month,\n    day: day\n  }\n}\n\n/*当日日付のみのデータ抽出 */\n\nexport const customerTodayOrders = (allData)=>{\n  let todayOrder = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( todayParams().year === c_year && todayParams().month === c_month && todayParams().day === c_day){\n        todayOrder.push(data);\n      }\n    })\n  }\n  return todayOrder;\n}\n\n/*明日日付のみのデータ抽出 */\n\nexport const customerTomorrowOrders = (allData)=>{\n  let tomorrowOrder = [];\n  const today = new Date();\n  today.setDate(today.getDate() + 1);\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( year === c_year && month === c_month && day === c_day){\n        tomorrowOrder.push(data);\n      }\n    })\n  }\n  return tomorrowOrder;\n}\n\n\n\n\n\n  /*当日以外の日付のみのデータ抽出 */\n\nexport const customerOrders = (allData)=>{\n  let Orders = [];\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( year === c_year && month === c_month && day === c_day){\n        \n      }\n      else{\n        Orders.push(data);\n      }\n    })\n  }\n  Orders.sort(function(a, b){\n    if(a.shopping_date < b.shopping_date){\n      return -1;\n    }\n    else{\n      return 1;\n    }\n  });\n  return Orders;\n}\n/*お客様一覧でユーザーのうち従業員を省いた一覧*/\n\nexport const customers =(users)=>{\n  let customerUsers = [];\n  if(users.length > 0){\n    users.forEach((user)=>{\n      if(!(user.admin === true)){\n        customerUsers.push(user);\n      }\n    });\n  }\n\n  return customerUsers;\n}\n/*お客様注文確認ページにて合計金額計算 */\n\nexport const totalMoneyCalc =(orders)=>{\n  let total = 0;\n  orders.forEach((order)=>{\n    total += order.price * order.num;\n  })\n  return total;\n}\n\nexport const statusView = (status)=>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info\">申請中</div>;\n    case 1:\n      return <div className=\"bg-warning\">加工済みです</div>;\n    case 2:\n      return <div className=\"bg-danger\">受け渡し済み</div>;\n    default:\n      break;\n  }\n}\n ","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { customers } from './setting';\n\n\n\nconst  UserPagination = (props)=>{\n  /*********************ステート******************************** */\n  const[group, setGroup] = useState(0);\n    let localData = JSON.parse(localStorage.getItem('users'))\n   \n    let active = props.No +1;\n    let items = [];\n\n\n\n    if(localData){\n      let paginationLength =  customers(localData).length;\n      if(group === 0 &&  Math.round(paginationLength) > 5 && Math.round(paginationLength / 2) >= 5 ){  /*初期のページネーション データ5以上 かつ表示ボタン5以下*/\n        for (let number = 1; number <= 5; number++) {\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n        items.push(\n          <Pagination.Last onClick={()=>groupPlus()}/>\n        );\n      }\n      /********************************************************************************* */\n      else if((group === 0 &&  Math.round(paginationLength) <5)|| (Math.round(paginationLength / 2) < 5) ){   /*初期のページネーション データ5以下 または表示ボタン5以下*/\n        for (let number = 1; number <= Math.round(paginationLength /2); number++) {\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n      }\n      /********************************************************************************* */\n      else if(group >=1 && paginationLength > (group + 1) * 2 * 5 ){\n        items.push(\n          <Pagination.First onClick={()=>groupMinus()} />\n        );\n        for (let number = group * 5 + 1; number <=  (group + 1) * 5 ; number++) { /*次の５のばいすうこえる*/\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n        if(paginationLength > ( group + 1)*2 *5 ){ /*全体のレコード数からぜんかいの５の倍数をひいたかずよりつぎの５の倍数が上回るとき*/\n         items.push(\n            <Pagination.Last onClick={()=>groupPlus()} />\n          );\n         }\n      }\n      /******************************************************************************************* */\n      else if(group >=1 && paginationLength  < (group + 1)*2 * 5 ){   /*次の５のばいすうこえない*/\n        items.push(\n          <Pagination.First onClick={()=>groupMinus()} />\n        );\n        for (let number = group * 5 + 1; number <=  Math.round(paginationLength /2)  ; number++) {\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n       /* if(Math.round(paginationLength /2) *group * 5 <= paginationLength ){ /*５の倍数で分けているため数字x5が実際のユーザー数より多ければ進む表示*/\n         /* items.push(\n            <Pagination.Last onClick={()=>groupPlus()} />\n          );\n        }*/\n        \n      }\n    }\n  /************************ページネーション処理**************************************** */\n  const sendNumber =(num)=>{\n      props.paginationSend(num);\n  }\n  /************************ページネーション戻るボタン処理**************************************** */\n  const groupMinus = () =>{\n    setGroup(group -1);\n  }\n   /************************ページネーション進むボタン処理**************************************** */\n   const groupPlus = () =>{\n    setGroup(group + 1);\n  }\n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(UserPagination))","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers　} from './setting';\nimport UserPagination from './UserPagination';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\n function PcIndex(props){\n  const[page, setPage] = useState(0);\n  let localBaseData = JSON.parse(localStorage.getItem('users'))\n  let localData = localBaseData == null? \"\" : localBaseData.slice(page * 2, page * 2 + 4 )\n  const[state,setState] = useState({\n    data: localData? localData : []\n  })\n  const[progress, setProgress] = useState(false)\n  /*************APIによるuser一覧**********************************/\n   /*async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());*/\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/users/employee_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`,{data: props.userkey})\n       .then((response)=>{\n         /*ユーザー更新*/\n      \n      　　axios.post('https://uematsu-backend.herokuapp.com/users/index',props.userkey)\n            .then((res)=>{\n                localStorage.setItem('users', JSON.stringify(res.data));\n                setPage(0)\n                let updateData = localBaseData == null? \"\" : localBaseData.slice(0, 4 )\n                alert(response.data.message); \n                setState({\n                  data: updateData? updateData : []\n                })\n                setProgress(false)\n            })\n            .catch((error)=>{\n                console.log(error);\n            })       \n          \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    \n    }\n   }\n   /****************************ページ更新**************************************** */\n  const updateUsers = ()=>{\n    setProgress(true)\n  \n    axios\n    .post('https://uematsu-backend.herokuapp.com/users/index',props.userkey)\n    .then((res)=>{\n        localStorage.setItem('users', JSON.stringify(res.data));\n        let updateData = localBaseData == null? \"\" : localBaseData.slice(page * 2, page * 2 + 4 )\n        setState({\n          data: updateData? updateData : []\n        })\n        setProgress(false)\n    })\n    .catch((error)=>{\n        console.log(error);\n    })       \n   } \n   /********************************************************** */\n   const userShowaccess = (id)=>{\n    const sendid = {user_id: id}\n    axios\n    .post(`https://uematsu-backend.herokuapp.com/history/show/`, sendid)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n       props.history.push('/users_empshow');\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     \n   }\n   /********************************ページネーション(通常ボタン)処理**************************************** */\n  const paginationNo = (num)=>{\n    switch (num) {\n      case 0:\n        setState({\n          data: JSON.parse(localStorage.getItem('users')).slice(num * 2, num * 2 +4)\n        })\n       \n        break;\n      default:\n        setState({\n          data: JSON.parse(localStorage.getItem('users')).slice(num * 2 + 2, (num * 2 + 2) + 2 )\n        })\n        break;\n    }\n    setPage(num);\n  }\n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-1\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button　\n             variant=\"primary\"\n             className=\"mb-2\"\n             onClick={updateUsers}\n          >更新</Button>\n           {/* プログレス */}\n     \n           {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n          }\n        <UserPagination \n          No={page} \n          paginationSend={(num)=>paginationNo(num)} \n          />\n          {state.data.length > 0 ?\n           \n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">電話番号</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                     <td className=\"text-center align-middle\">\n                       <button \n                         style={userLink} \n                         onClick={(i)=>userShowaccess(value.id)}\n                       >{value.name}</button>\n                    </td>\n                    <td  className=\"text-center align-middle\">\n                      <a className=\"font-weight-bold\" href={`mailto:${value.email}`} target=\"_blank\" rel=\"noopener noreferrer\">{value.email}</a>  \n                    </td>\n                    <td className=\"text-center align-middle\">\n                    　　<a className=\"font-weight-bold\" href={`tel:${value.tel}`} target=\"_blank\" rel=\"noopener noreferrer\">{value.tel}</a>\n                    </td>\n                    <td className=\"text-center\">\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteUser(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import {  useState } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\nimport UserPagination from './UserPagination';\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst buttonWidth={\n  width: '45%',\n  marginRight:'5%'\n}\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\n\n function PhoneIndex(props){\n  const[page, setPage] = useState(0);\n  let localBaseData = JSON.parse(localStorage.getItem('users'))\n  let localData = localBaseData == null? \"\" : localBaseData.slice(page * 2, page * 2 + 4 )\n  const[state,setState] = useState({\n     data: localData? localData : []\n  })\n  const[progress, setProgress] = useState(false)\n  /*************APIによるuser一覧**********************************/\n   /*async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());*/\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/users/employee_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`,{data: props.userkey})\n       .then((response)=>{\n         /*ユーザー更新*/\n      \n      　　axios.post('https://uematsu-backend.herokuapp.com/users/index',props.userkey)\n            .then((res)=>{\n                localStorage.setItem('users', JSON.stringify(res.data));\n                setPage(0)\n                let updateData = localBaseData == null? \"\" : localBaseData.slice(0, 4 )\n                alert(response.data.message); \n                setState({\n                  data: updateData? updateData : []\n                })\n                setProgress(false)\n            })\n            .catch((error)=>{\n                console.log(error);\n            })       \n          \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    \n    }\n   }\n   /****************************ページ更新**************************************** */\n   const updateUsers = ()=>{\n    setProgress(true)\n    axios\n    .post('https://uematsu-backend.herokuapp.com/users/index',props.userkey)\n    .then((res)=>{\n        localStorage.setItem('users', JSON.stringify(res.data));\n        let updateData = localStorage.getItem('users')\n        setState({\n          data: updateData? updateData : []\n        })\n        setProgress(false)\n    })\n    .catch((error)=>{\n        console.log(error);\n    })       \n   } \n\n   const userShowaccess = (id)=>{\n    const sendid = {user_id: id}\n    axios\n    .post(`https://uematsu-backend.herokuapp.com/history/show/`, sendid)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_phone_empshow');\n   }\n   /********************************ページネーション(通常ボタン)処理**************************************** */\n  const paginationNo = (num)=>{\n    switch (num) {\n      case 0:\n        setState({\n          data: JSON.parse(localStorage.getItem('users')).slice(num * 2, num * 2 +4)\n        })\n       \n        break;\n      default:\n        setState({\n          data: JSON.parse(localStorage.getItem('users')).slice(num * 2 + 2, (num * 2 + 2) + 2 )\n        })\n        break;\n    }\n    setPage(num);\n  }\n \n \n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-3 mb-1\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      {/* プログレス */}\n     \n      {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n      }\n     \n      <Button　\n        variant=\"primary\"\n        className=\"mb-3\"\n        onClick={updateUsers}\n      >更新</Button>\n\n        <UserPagination \n          No={page} \n          paginationSend={(num)=>paginationNo(num)} \n        />\n\n      <div class=\"bg-white\"></div>\n      <div className=\"w-100 bg-white\">\n          {state.data.length > 0 ?\n            <Table striped bordered hover>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                          <td className=\"text-center align-middle\">\n                            <button \n                              style={userLink} \n                              onClick={(i)=>userShowaccess(value.id)}\n                            >{value.name}</button>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                          <td  className=\"text-center align-middle\">\n                            <a className=\"font-weight-bold\" href={`mailto:${value.email}`} target=\"_blank\" rel=\"noopener noreferrer\">{value.email}</a>  \n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">電話番号</th>\n                          <td  className=\"text-center align-middle\">\n                            <a className=\"font-weight-bold\" href={`tel:${value.tel}`} target=\"_blank\" rel=\"noopener noreferrer\">{value.tel}</a>\n                          </td>\n                        </tr>\n                        \n\n                        <tr>\n                            <td colSpan=\"2\">\n                              <Button \n                                variant=\"primary\"\n                                onClick={(i)=>editPage(value.id)}\n                                style={buttonWidth}\n                              >編集</Button>\n\n                              <Button \n                                variant=\"danger\"\n                                onClick={(i)=>deleteUser(value.id)}\n                                style={buttonWidth}\n                              >削除</Button>\n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import {  useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editIdget(id);\n     props.history.push(\"/users/edit\");\n   } \n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={768}>\n        <PcIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport './App.css'\nimport { withRouter } from 'react-router'\nimport axios from 'axios'\nimport { connect} from 'react-redux';\nimport { sendLoginData, searchSend, ordersSend, chartSend, keySend } from './store/Store';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\nconst  Login = (props)=>{\n\n  const[state, setState] = useState({\n    email: '',\n    password: '',\n  })\n  const[progress,setProgres] = useState(false)\n\n  /*初期設定でユーザーリセット*/\n  const firstSet =()=>{\n    let empty ={name: '', email: ''};\n    let array = [];\n    array.push(empty);\n    localStorage.setItem('users', JSON.stringify(array));\n  }\n  useState(firstSet);\n  const newUserComponent = ()=>{\n    props.history.push('/users/new');  \n  }\n  const accesslogin = (e)=>{\n  \n    e.preventDefault();\n    setProgres(true);\n    let data = {\n      email: state.email,\n      password: state.password,\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/sessions', data)\n      .then(function (response) {\n\n        if(response.data.name){\n            let action = sendLoginData(response.data);\n            props.dispatch(action);\n            /*railsからメッセージ*/\n            alert('ログインしました');\n\n            let keyaction = keySend(data);\n            props.dispatch(keyaction);\n            \n            \n            let data2 = {\n              user_id: response.data.id,\n              num: 1\n            }\n            axios\n                .post('https://uematsu-backend.herokuapp.com/users/index',data)\n                .then((res)=>{\n                  if(response.data.admin === true){\n                    localStorage.setItem('users', JSON.stringify(res.data));\n                  }\n                   \n                })\n                .catch((error)=>{\n                    console.log(error);\n                })       \n            axios.post('https://uematsu-backend.herokuapp.com/history/search', data2)\n            .then(function (response) {\n              let action = searchSend(response.data);\n              props.dispatch(action);\n            })\n            .catch(function(){\n              alert('error');\n            })\n             \n           axios\n            .get('https://uematsu-backend.herokuapp.com/items')\n            .then((res)=>{\n              localStorage.removeItem('items');\n              setState(res.data);\n              localStorage.setItem('items', JSON.stringify(res.data));\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          \n          axios\n          .get('https://uematsu-backend.herokuapp.com/orders')\n          .then((res)=>{\n              localStorage.setItem('orders', JSON.stringify(res.data));\n              let action = ordersSend(res.data);\n              props.dispatch(action);\n              if(localStorage.getItem('orders') && localStorage.getItem('users') && response.data.admin === true){\n                setProgres(false)\n                \n                props.history.push('/orders') \n              }\n              else if(localStorage.getItem('orders') && response.data.admin === false){\n                props.history.push('/users/show');\n              }\n             \n          })\n          .catch((error)=>{\n              console.log(error);\n          })\n          axios\n            .post('https://uematsu-backend.herokuapp.com/shoppings/index',data)\n            .then((res)=>{\n              localStorage.removeItem('shoppings');\n              setState(res.data);\n              localStorage.setItem('shoppings', JSON.stringify(res.data));\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          axios\n            .post('https://uematsu-backend.herokuapp.com/sales')\n            .then((res)=>{\n                let action = chartSend(res.data);\n                props.dispatch(action);\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n       setState({\n        \n      })\n        \n          }\n          else{\n            setProgres(false)\n            alert('ログイン失敗');\n          }\n      })\n      .catch(function(err){\n        alert(err);\n      })\n  }\n  const inputText = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]:value});\n  }\n  return(\n   <>\n    <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-dark font-weight-bold\" data-testid=\"logintitle\">ログイン</h2>\n      </div>\n       \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light border shadow\">\n          {/* プログレス */}\n     \n          {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n          }\n          <Form onSubmit={accesslogin} data-testid=\"loginForm\">\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"(例)sample@example.com\" \n                className=\"h8\" \n                onChange={inputText}\n                required\n                value={state.email}\n                data-testid=\"ml\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label>\n              <Form.Control\n                 type=\"password\" \n                 name=\"password\"\n                 placeholder=\"(例)password\" \n                 onChange={inputText}\n                 required\n                 value={state.password}\n                 data-testid=\"ps\"\n              />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              <Button \n                variant=\"primary\" \n                onClick={newUserComponent}\n                className=\"btn-block mt-3\">\n                新規登録\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Login))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { sendLoginData, keySend } from '../store/Store';\nimport { connect } from 'react-redux';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    email: '',\n    tel: '',\n    password: '',\n    confirmation: ''\n  })\n\n  const[progress,setProgres] = useState(false)\n  \n\n  const loginComponent = ()=>{\n    props.history.push('/login')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    setProgres(true);\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        tel: state.tel,\n        password: state.password,\n        password_confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.post('https://uematsu-backend.herokuapp.com/users', data)\n      .then(function (response) {\n        let action = sendLoginData(response.data.userData);\n        props.dispatch(action);\n\n        let key_data = {\n          email: state.email,\n          password: state.password\n        }\n\n        let keyaction = keySend(key_data);\n        props.dispatch(keyaction);\n\n        response.data.userData.admin === true? props.history.push('/orders') :  props.history.push('/users/show');\n\n        /*railsからメッセージ*/\n        alert(\"【お知らせ】\" +response.data.message); \n        setProgres(false);\n        \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n\n\n    /*自動ログイン状態*/\n    let data = {\n      name: state.name,\n    }\n    axios\n    .post('https://uematsu-backend.herokuapp.com/users/user_show', data)\n    .then((res)=>{\n      \n    })\n    .catch((error)=>{\n        console.log(error);\n    })       \n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規会員登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={loginComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n        {/* プログレス */}\n     \n        {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n          }\n\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>電話番号</Form.Label>\n              <Form.Control type=\"tel\" name=\"tel\" placeholder=\"(例)090-1111-1111\" required pattern=\"[\\d\\-]*\" onChange={userInput} value={state.tel} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(New))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { sendLoginData } from '../store/Store';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\n\n/**************************************************************************************** */\nconst  Edit = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[progress,setProgres] = useState(false)\n  const[state, setState] = useState({\n    name: props.userData.length>0? props.userData[0].name : '',\n    email: props.userData.length>0? props.userData[0].email : '',\n    tel: props.userData.length>0? props.userData[0].tel : '',\n    confirmation: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    setProgres(true);\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        tel: state.tel,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n       \n        const id_data = {id: props.userData[0].id, email: props.userkey.email, password: props.userkey.password }\n        axios.post(`https://uematsu-backend.herokuapp.com/users/show`, id_data).then(function(res){\n           let action = sendLoginData (res.data);\n           props.dispatch(action);\n           alert(response.data.message); \n           setProgres(false);\n           props.history.push('/users/show');\n\n        }).catch(function(err){\n         console.log(err);\n        });\n       \n\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          {/* プログレス */}\n     \n          {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n          }\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>電話番号</Form.Label>\n              <Form.Control type=\"tel\" name=\"tel\" placeholder=\"(例)090-1111-1111\" required pattern=\"[\\d\\-]*\" onChange={userInput} value={state.tel} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Edit));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\n\n/**************************************************************************************** */\nconst  EmployeeEdit = (props)=>{\n    const getuserData = ()=>{\n        let user = []\n        let datas = JSON.parse(localStorage.getItem('users'));\n        datas.forEach((data)=>{\n          if(data.id === props.id){\n           user.push(data);\n          }\n        });\n        return user\n       }\n  let user = getuserData();\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[progress,setProgres] = useState(false)\n  const[state, setState] = useState({\n    name: user.length>0? user[0].name : '',\n    email: user.length>0?  user[0].email : '',\n    tel: user.length>0?  user[0].tel : '',\n    password: '',\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    setProgres(true);\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        tel: state.tel,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n       \n        axios.post('https://uematsu-backend.herokuapp.com/users/index',props.userkey)\n            .then((res)=>{\n                localStorage.setItem('users', JSON.stringify(res.data));\n                alert(response.data.message); \n                setProgres(false);\n                props.history.push('/');\n            })\n            .catch((error)=>{\n                console.log(error);\n            })      \n       \n\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          {/* プログレス */}\n     \n          {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n          }\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>電話番号</Form.Label>\n              <Form.Control type=\"tel\" name=\"tel\" placeholder=\"(例)090-1111-1111\" required pattern=\"[\\d\\-]*\" onChange={userInput} value={state.tel} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(EmployeeEdit));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { searchSend } from '../store/Store';\n\nconst  MyPagination = (props)=>{\n  let items = [];\n  const[state, setState] = useState({\n    first: 1,\n    last: ((props.userData[0].orders[0]) && props.userData[0].orders[0].length>=5)? \n    Math.floor(props.userData[0].orders[0].length/5 >10)?  10 : Math.floor(props.userData[0].orders[0].length/5)   : 1,\n    active: 1\n  });\n  for(let i=state.first; i<=state.last; i++){\n    items.push(\n      <Pagination.Item key={i} active={i === state.active} onClick={()=>seachDatarequest(i)}>{i}</Pagination.Item>\n    )\n  }\n  const seachDatarequest = (i)=>{\n    let data = {\n      user_id: props.userData[0].id,\n      num: i\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/history/search', data)\n    .then(function (response) {\n      let action = searchSend(response.data);\n      props.dispatch(action);\n    })\n    .catch(function(){\n      alert('error');\n    })\n    setState({\n      first: state.first,\n      last: state.last,\n      active: i\n    })\n  }  \n  \n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(MyPagination))","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { orderHistoryStatus } from \"./setting\";\nimport MyPagination from './MyPagination';\n\nconst  History = (props)=>{\n\n  return(\n   <div>\n    {props.pageData?\n      <>\n        <MyPagination />\n       <Table bordered className=\"mt-3\">\n         <thead>\n           <tr>\n             <th className=\"bg-primary text-white text-center\">注文日</th>\n             <th className=\"bg-primary text-white text-center\">注文商品</th>\n             <th className=\"bg-primary text-white text-center\">加工法</th>\n             <th className=\"bg-primary text-white text-center\">価格</th>\n             <th className=\"bg-primary text-white text-center\">注文数</th>\n             <th className=\"bg-primary text-white text-center\">状況</th>\n           </tr>\n         </thead>\n         <tbody>\n           {props.pageData.map((data)=>(\n             <tr>\n               <td className=\"font-weight-bold text-center\">{data.shopping_date}</td>\n               <td className=\"font-weight-bold text-center\">{data.name}</td>\n               <td className=\"font-weight-bold text-center\">{data.process}</td>\n               <td className=\"font-weight-bold text-center\">{data.price}</td>\n               <td className=\"font-weight-bold text-center\">{data.num}</td>\n               <td className=\"font-weight-bold text-center\">{orderHistoryStatus(data.status)}</td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n      </>\n      : \n      <div className=\"p-5 bg-secondary mt-3 text-white font-weight-bold text-center\">履歴がありません。</div>\n    }\n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(History))","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { ordersSend } from '../store/Store';\nimport { ordercheck, daySetting } from './setting';\nimport History from './History';\n\n\n\n/**************************************************************************************** */\nconst  Show = (props)=>{\n const sendShoppindData = ()=>{\n  axios\n  .get('https://uematsu-backend.herokuapp.com/orders')\n  .then((res)=>{\n     let action = ordersSend(res.data);\n     props.dispatch(action);\n     \n  })\n  .catch((error)=>{\n     console.log(error);\n  })\n }\n useState(sendShoppindData);\n   \n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n    await axios\n      .get(`https://uematsu-backend.herokuapp.com/history/show/${props.userData[0].id}`)\n      .then((res)=>{\n         const action = historyDataSend(res.data);\n         props.dispatch(action);\n\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n }\n */\n\n\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck)\n  return(\n   <>\n      {props.userData.length >0?\n       <>\n        <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n          <h2 className=\"text-white font-weight-bold\">{props.userData[0].name}さんページ</h2>\n        </div>\n       \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <Row>\n            <Col md={{span :7}}>\n              <p className=\"font-weight-bold\">会員情報</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">名前</th>\n                   <td>{props.userData[0].name}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">メールアドレス</th>\n                   <td>{props.userData[0].email}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">電話番号</th>\n                   <td>{props.userData[0].tel}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用開始日</th>\n                   <td>{daySetting(props.userData[0].create)}</td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={{span :5}}>\n            <p className=\"font-weight-bold\">ご利用状況</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用回数</th>\n                   <td className=\"text-center\">{props.userData[0].orders[0]? props.userData[0].orders[0].length : 0 }</td>\n                 </tr>\n               \n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">現在注文有無</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).count? \"有り\" : '未使用'}</td>\n                 </tr>\n\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">最新注文日</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).date? ordercheck(props.userData[0].orders[0]).date : '未使用'}</td>\n                 </tr>\n               \n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>    \n      </Row>\n      </>\n        : \n        loginUserCheck()\n      }\n      {/* 履歴エリア */}\n\n      <div className=\"text-center mt-3 font-weight-bold\">\n          <h2 className=\"text-light font-weight-bold\">商品依頼履歴</h2>\n      </div>\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 mt-2 pb-4 bg-light shadow\">\n          {/* ログアウト中は無効 */}\n          \n          {props.userData.length >0? <History /> : ''}\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { customers } from './setting';\nimport { customerOrders } from './setting';\n\n\n\nconst  UserHistoryPagination = (props)=>{\n  /*********************ステート******************************** */\n  const[group, setGroup] = useState(0);\n    let localData = customerOrders(props.historyData.orders[0])\n   \n    let active = props.No +1;\n    let items = [];\n\n\n\n    if(localData){\n      let paginationLength =  customers(localData).length;\n      if(group === 0 &&  Math.round(paginationLength) > 5 && Math.round(paginationLength / 2) > 5 ){  /*初期のページネーション データ5以上 かつ表示ボタン5以下*/\n        for (let number = 1; number <= 5; number++) {\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n        items.push(\n          <Pagination.Last onClick={()=>groupPlus()}/>\n        );\n      }\n      /********************************************************************************* */\n      else if((group === 0 &&  Math.round(paginationLength) <5)|| (Math.round(paginationLength / 2) < 5) ){   /*初期のページネーション データ5以下 または表示ボタン5以下*/\n        for (let number = 1; number <= Math.round(paginationLength /2); number++) {\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n      }\n      /********************************************************************************* */\n      else if(group >=1 && paginationLength > (group + 1) * 2 * 5 ){\n        items.push(\n          <Pagination.First onClick={()=>groupMinus()} />\n        );\n        for (let number = group * 5 + 1; number <=  (group + 1) * 5 ; number++) { /*次の５のばいすうこえる*/\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n        if(paginationLength > ( group + 1)*2 *5 ){ /*全体のレコード数からぜんかいの５の倍数をひいたかずよりつぎの５の倍数が上回るとき*/\n         items.push(\n            <Pagination.Last onClick={()=>groupPlus()} />\n          );\n         }\n      }\n      /******************************************************************************************* */\n      else if(group >=1 && paginationLength  < (group + 1)*2 * 5 ){   /*次の５のばいすうこえない*/\n        items.push(\n          <Pagination.First onClick={()=>groupMinus()} />\n        );\n        for (let number = group * 5 + 1; number <=  Math.round(paginationLength /2)  ; number++) {\n          items.push(\n            <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n              {number}\n            </Pagination.Item>,\n          );\n        }\n       /* if(Math.round(paginationLength /2) *group * 5 <= paginationLength ){ /*５の倍数で分けているため数字x5が実際のユーザー数より多ければ進む表示*/\n         /* items.push(\n            <Pagination.Last onClick={()=>groupPlus()} />\n          );\n        }*/\n        \n      }\n    }\n  /************************ページネーション処理**************************************** */\n  const sendNumber =(num)=>{\n      props.paginationSend(num);\n  }\n  /************************ページネーション戻るボタン処理**************************************** */\n  const groupMinus = () =>{\n    setGroup(group -1);\n  }\n   /************************ページネーション進むボタン処理**************************************** */\n   const groupPlus = () =>{\n    setGroup(group + 1);\n  }\n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(UserHistoryPagination))","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\nimport History from './HistoryPage';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n  const[page, setPage] = useState(0);\n  let localBaseData = customerOrders(props.historyData.orders[0]);\n  let localData = localBaseData.slice(page * 2, page * 2 + 4 );\n  const[state,setState] = useState({\n    data: localData\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n/********************************ページネーション(通常ボタン)処理**************************************** */\nconst paginationNo = (num)=>{\n  switch (num) {\n    case 0:\n      setState({\n        data: customerOrders(props.historyData.orders[0]).slice(num * 2, num * 2 +4)\n      })\n     \n      break;\n    default:\n      setState({\n        data: customerOrders(props.historyData.orders[0]).slice(num * 2 + 2, (num * 2 + 2) + 2 )\n      })\n      break;\n  }\n  setPage(num);\n}\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の商品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n      {/* 当日以外の履歴 */}\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n           <History\n             No={page} \n             paginationSend={(num)=>paginationNo(num)} \n            />\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の商品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered className=\"w-100\"> \n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <Table bordered>\n                        <tbody>\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">日付</th>\n                          <td colSpan=\"4\" className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">品名</th>\n                          <td className=\"text-center font-weight-bold\">{data.name}</td>\n                          <th className=\"text-white text-center bg-primary align-middle\">加工名</th>\n                          <td colSpan=\"2\" className=\"text-center font-weight-bold\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">価格</th>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                             {data.price}<br/>(単価)\n                          </td>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                            {Number(data.num) * Number(data.price)}<br/>(合計)\n                          </td>\n                          <th className=\"text-white text-center bg-primary align-middle\">数</th>\n                          <td className=\"text-center font-weight-bold align-middle\">{data.num}</td>\n                        </tr>\n                      </tbody>\n                     \n                    </Table>\n                    \n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }  \n      </div>\n\n      {/* 当日以外の履歴 */}\n\n      <div class=\"w-100 bg-light\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered className=\"w-100\">\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <Table bordered>\n                    <tbody>\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">日付</th>\n                          <td colSpan=\"4\" className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">品名</th>\n                          <td className=\"text-center font-weight-bold\">{data.name}</td>\n                          <th className=\"text-white text-center bg-primary align-middle\">加工名</th>\n                          <td colSpan=\"2\" className=\"text-center font-weight-bold\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">価格</th>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                             {data.price}<br/>(単価)\n                          </td>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                            {Number(data.num) * Number(data.price)}<br/>(合計)\n                          </td>\n                          <th className=\"text-white text-center bg-primary align-middle\">数</th>\n                          <td className=\"text-center font-weight-bold align-middle\">{data.num}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n    \n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n      </div>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","\n\nexport const timeSetting = (baseData)=>{\n   let date = new Date(baseData);\n   let hour = date.getHours();\n   let min = date.getMinutes();\n   return hour + \":\" + toDoubleDigits(min);\n}\nconst toDoubleDigits = function(num) {\n   num += \"\";\n   if (num.length === 1) {\n     num = \"0\" + num;\n   }\n  return num;     \n} \n","import React from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {customerTomorrowOrders , totalMoneyCalc } from './setting';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Reservation = (props)=>{\n  return(\n    <>  \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【明日予約商品】</div>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? \n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTomorrowOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n          : \n          ''\n          }\n         \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? customerTomorrowOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Reservation));\n/***************************************************************************************************** */","import { useEffect } from \"react\";\n\n\nconst useScript = url =>{\n   useEffect(()=>{\n     const orderArea = document.getElementById('payform')\n     const script = document.createElement('script');\n     script.src = \"https://checkout.pay.jp\";\n     script.dataset.key = process.env.REACT_APP_PAYJP_API_KEY;\n     script.className =\"payjp-button\";\n     script.dataset.partial=true;\n     if(orderArea){\n      orderArea.appendChild(script);\n      return () => {\n       orderArea.removeChild(script);\n       }\n     }\n    else{\n\n    }\n   },[url])\n}\nexport default useScript;","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport { customerTodayOrders, totalMoneyCalc, statusView } from './setting';\nimport Reservation from './Reservation';\nimport { timeSetting } from '../setting';\nimport useScript from '../useScript';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Order = (props)=>{\n \n \n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  useScript();\n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"font-weight-bold text-light\">現在注文商品</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">\n            【本日受取商品】\n          </div>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))?\n           <div>\n              <h3 className=\"mt-2\">【注文合計金額: \n              <span className=\"text-danger font-weight-bold\">\n                {totalMoneyCalc(customerTodayOrders(props.userData[0].orders[0]))}\n              </span>円】</h3>\n              \n              <form id =\"todayorder-customer\">\n\n              </form>\n           </div>\n           : \n           ''}\n          \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))? customerTodayOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                    <li className=\"list-inline-item text-white pt-2 pb-2 mr-3\">{ statusView(data.status) }</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n      <br/>\n      <Reservation />\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Order));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\n\nconst  MyPagination = (props)=>{\n    /*********************ステート******************************** */\n  const[group, setGroup] = useState(0 );\n  let paginationLength =  JSON.parse(localStorage.getItem('items')).length;\n  let active = props.No +1;\n  let items = [];\n  \n  if(group === 0 &&  Math.round(paginationLength) > 5 && Math.round(paginationLength / 2) > 5 ){  /*初期のページネーション データ5以上 かつ表示ボタン5以下*/\n    for (let number = 1; number <= 5; number++) {\n      items.push(\n        <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n    items.push(\n      <Pagination.Last onClick={()=>groupPlus()}/>\n    );\n  }\n  /**************************************************************************************************** */\n  else if((group === 0 && paginationLength <5) || (Math.round(paginationLength / 2) < 5)){   /*初期のページネーション データ5以下 または表示ボタン5以下*/\n  \n    for (let number = 1; number <= Math.round(paginationLength /2); number++) {\n      items.push(\n        <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n  }\n  /****************************************************************************************************** */\n  else if(group >=1 && paginationLength > (group + 1) * 2 * 5 ){\n    items.push(\n      <Pagination.First onClick={()=>groupMinus()} />\n    );\n    for (let number = group * 5 + 1; number <=  (group + 1) * 5 ; number++) { /*次の５のばいすうこえる*/\n      items.push(\n        <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n    if(paginationLength > ( group + 1)*2 *5 ){ /*全体のレコード数からぜんかいの５の倍数をひいたかずよりつぎの５の倍数が上回るとき*/\n     items.push(\n        <Pagination.Last onClick={()=>groupPlus()} />\n      );\n     }\n  }\n  /******************************************************************************************* */\n  else if(group >=1 && paginationLength  < (group + 1)*2 * 5 ){   /*次の５のばいすうこえない*/\n    items.push(\n      <Pagination.First onClick={()=>groupMinus()} />\n    );\n    for (let number = group * 5 + 1; number <=  Math.round(paginationLength /2)  ; number++) {\n      items.push(\n        <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n   /* if(Math.round(paginationLength /2) *group * 5 <= paginationLength ){ /*５の倍数で分けているため数字x5が実際のユーザー数より多ければ進む表示*/\n     /* items.push(\n        <Pagination.Last onClick={()=>groupPlus()} />\n      );\n    }*/\n    \n  }\n    \n  \n/************************ページネーション処理**************************************** */\nconst sendNumber =(num)=>{\n    props.paginationSend(num);\n}\n/************************ページネーション戻るボタン処理**************************************** */\nconst groupMinus = () =>{\n  setGroup(group -1);\n}\n /************************ページネーション進むボタン処理**************************************** */\n const groupPlus = () =>{\n  setGroup(group + 1);\n}\nreturn(\n <>\n  <Pagination >{items}</Pagination>\n </>\n)\n}\nexport default withRouter(connect((state)=>state)(MyPagination))","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport MyPagination from './MyPagination';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\n\nconst paginationStyle = {\n  marginBottom: \"-2%\",\n  border: \"none\"\n}\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\n function PcIndex(props){\n\n  /************************ステート*************************************** */\n  const[page, setPage] = useState(0);\n\n  let localData = JSON.parse(localStorage.getItem('items')).slice(page * 2, page * 2 + 2 )\n  let modalData = [];\n\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n  const[progress, setProgress] = useState(false)\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  /*async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall()); */\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.editPage(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n         axios\n            .get('https://uematsu-backend.herokuapp.com/items')\n            .then((res)=>{\n              localStorage.removeItem('items');\n              localStorage.setItem('items', JSON.stringify(res.data));\n              setState(res.data.slice(page * 2, page * 2 + 2 ))\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processItem(item);\n    props.history.push('/items_process');\n  }\n    /****************************ページ更新**************************************** */\n    const updateItems = ()=>{\n      setProgress(true)\n      axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n          localStorage.removeItem('items');\n          localStorage.setItem('items', JSON.stringify(res.data));\n          let newData = JSON.parse(localStorage.getItem('items')).slice(page * 2, page * 2 + 2 );\n          setState(newData? newData : []);\n          setProgress(false)\n      })\n      .catch((error)=>{\n        console.log(error);\n      })\n     } \n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  /********************************ページネーション処理**************************************** */\n  const paginationNo = (num)=>{\n    setState(\n      JSON.parse(localStorage.getItem('items')).slice(num * 2, num * 2 + 2 )\n    )\n    setPage(num);\n  }\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-2\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-3 bg-light shadow\">\n          {/* プログレス */}\n     \n          {progress ===true? \n            <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n              <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n              <div className=\"text-center\">\n              <CircularLoading />\n              </div>\n            </div>\n          : \n          ''\n          }\n          <Button \n            variant=\"primary\"\n            onClick={updateItems}\n            >更新\n          </Button>\n          <Table style={paginationStyle}>\n            <tr>\n              <td> \n                <Button \n                    variant=\"primary\"\n                    onClick={newPage}\n                >新規商品登録</Button>\n              </td>\n              {itemData.length >0?\n               <td className=\"w-75\">\n                 <MyPagination No={page} paginationSend ={(num)=>paginationNo(num)} />\n               </td>\n                : \n                <td></td>\n                }\n            </tr>\n          </Table>\n         \n        \n          {itemData.length > 0 ?\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">画像</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">カテゴリー</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <td>\n                      <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </td>\n                    <td className=\"align-middle\">\n                      <button \n                         style={itemLink} \n                         onClick={(i)=>openModal(item)}\n                       >{item.name}</button>\n                    </td>\n                    <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                    <td className=\"align-middle\">{item.category}</td>\n                    <td className=\"align-middle\">\n                    <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(item)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                     <Button \n                        variant=\"primary\"\n                        onClick={(i)=>processItem(item)}\n                        className=\"ml-3\"\n                      >加工法管理</Button>\n                    \n                    <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteItem(item.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n        </Col>\n      </Row>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { circularLoading }  from '@yami-beta/react-circular-loading';\nimport MyPagination from './MyPagination';\n\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\nconst buttonWidth={\n  width: '31%'\n}\n\n//プログレスステータス\nconst CircularLoading = circularLoading({\n  num: 6,\n  distance: 1,\n  dotSize: 0.5,\n\n});\n\n\n\n function PcIndex(props){\n\n  /************************ステート*************************************** */\n  const[page, setPage] = useState(0);\n\n  let localData = JSON.parse(localStorage.getItem('items')).slice(page * 2, page * 2 + 2 )\n  let modalData = [];\n\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n  const[progress, setProgress] = useState(false)\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  /*async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall());*/\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0 && props.itemData === null){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.editPage(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /****************************ページ更新**************************************** */\n  const updateItems = ()=>{\n    setProgress(true)\n      axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n          localStorage.removeItem('items');\n          localStorage.setItem('items', JSON.stringify(res.data));\n          let newData = JSON.parse(localStorage.getItem('items'));\n          setState(newData? newData : []);\n          setProgress(false);\n      })\n      .catch((error)=>{\n        console.log(error);\n      })\n   } \n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processItem(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n   /********************************ページネーション処理**************************************** */\n   const paginationNo = (num)=>{\n    setState(\n      JSON.parse(localStorage.getItem('items')).slice(num * 2, num * 2 + 2 )\n    )\n    setPage(num);\n  }\n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      {/* プログレス */}\n     \n      {progress ===true? \n        <div id=\"progress\" className=\" pl-2 pr-2  bg-white shodow\">\n          <p　className=\"mt-3 font-weight-bold\">しばらくお待ちください。</p>\n          <div className=\"text-center\">\n          <CircularLoading />\n          </div>\n        </div>\n        : \n        ''\n        }\n      <Button　\n        variant=\"primary\"\n        className=\"mb-2\"\n        onClick={updateItems}\n      >更新</Button>\n      \n      {itemData.length >0?\n        <MyPagination No={page} paginationSend ={(num)=>paginationNo(num)} />\n        :\n        \"\"\n             \n      }\n<div class=\"bg-white p-2\"></div>\n      <div className=\"bg-white w-100\">\n          <Button \n            className=\"mb-1\"\n            variant=\"primary\"\n            onClick={newPage}\n          >新規商品登録</Button>\n          <p>【商品一覧】</p>\n         \n          {itemData.length > 0 ?\n            <Table bordered hover>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                          </td>\n\n                          <td colSpan=\"4\" className=\"align-middle\">\n                            <button \n                              style={itemLink} \n                              onClick={(i)=>openModal(item)}\n                            >商品名:{item.name}</button>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                          <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                          <th className=\"text-center align-middle bg-dark text-white\">分類</th>\n                          <td className=\"align-middle\">{item.category}</td>\n                        </tr>\n\n                        <tr>\n                          <td colSpan=\"4\" className=\"align-middle\">\n                            <Button \n                                style={buttonWidth}\n                                variant=\"primary\"\n                                onClick={(i)=>editPage(item)}\n                                \n                              >編集</Button>\n\n                            <Button \n                                style={buttonWidth}\n                                variant=\"primary\"\n                                onClick={(i)=>processItem(item)}\n                                className=\"ml-2 mr-2\"\n                              >加工法管理</Button>\n                            \n                            <Button \n                                style={buttonWidth}\n                                variant=\"danger\"\n                                onClick={(i)=>deleteItem(item.id)}\n                               \n                              >削除</Button>\n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                   \n                   \n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n      </div>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n\n function Index(props){\n\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.itemEditIdget(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processIdget(item);\n    props.history.push('/items_process');\n  }\n  \n  return(\n    <div>\n      <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(item)=>editPage(item)}\n          processItem ={(item)=>processItem (item)}\n        />\n      </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          editPage={(item)=>editPage(item)}\n          processItem ={(item)=>processItem (item)}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[image, setImage] = useState({\n    file: null\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    price: '',\n    category: '',\n    info: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const indexComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const itemInput = (e)=>{\n   const target = e.target;\n   const name = target.name;\n   const value = target.value;\n   setState({...state, [name]: value})\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n      /* PHPへの送信 */\n      const params = new FormData();\n      params.append('file', image.file);\n      params.append('name', state.name);\n      axios.post('https://yukiabineko.sakura.ne.jp/send-react.php',\n      　　　　　　　params,\n                  {\n                    headers:{\n                      'content-type': 'multipart/form-data',\n                    },\n                  }\n      ).then((res)=>{\n          console.log(res.data);\n      }).catch(()=>{\n      })\n\n\n      /* rails側への送信*/\n      \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.post('https://uematsu-backend.herokuapp.com/items', data)\n      .then(function (response) {\n\n        /* 商品一覧更新*/\n        axios\n          .get('https://uematsu-backend.herokuapp.com/items')\n          .then((res)=>{\n            localStorage.removeItem('items');\n            setState(res.data);\n            localStorage.setItem('items', JSON.stringify(res.data));\n            props.history.push('/items')\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    setImage({\n      file: null\n    })\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規商品登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={indexComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendItemParameter}>\n            <Form.Group>\n              <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>カテゴリー</Form.Label>\n              <div class=\"balloon1\" style={show}>\n                <p>選択してください。</p>\n              </div>\n                <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                  <option value=\"\">選択してください  </option>\n                 {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                   <option key={i} value={value}>{value}</option>\n                 )}\n                </Form.Control>\n            </Form.Group>\n               \n            <Form.Group>\n              <Form.Label>商品説明</Form.Label>\n              <textarea \n                name=\"info\" \n                cols=\"30\" \n                rows=\"10\" \n                value={state.info}\n                onChange={itemInput}\n                className=\"form-control\">{state.info}</textarea>\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  ItemEdit = (props)=>{\n\n \n   let item = props.item;\n/*********************************state******************************************************* */\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[state, setState] = useState({\n    name: item.name,\n    price: item.price,\n    category: item.category,\n    info: item.info\n  })\n\n  const[image, setImage] = useState({\n    file: null\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\n\nuseState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const itemInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n       /* PHPへの送信 */\n       const params = new FormData();\n       params.append('file', image.file);\n       params.append('name', state.name);\n       axios.post('http://yukiabineko.sakura.ne.jp/send-react.php',\n       　　　　　　　params,\n                   {\n                     headers:{\n                       'content-type': 'multipart/form-data',\n                     },\n                   }\n       ).then((res)=>{\n           console.log(res.data);\n       }).catch(()=>{\n       })\n\n       /* rails側への送信*/ \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/items/${props.item.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        /* 商品一覧更新*/\n        axios\n          .get('https://uematsu-backend.herokuapp.com/items')\n          .then((res)=>{\n            localStorage.removeItem('items');\n            setState(res.data);\n            localStorage.setItem('items', JSON.stringify(res.data));\n            props.history.push('/items')\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n        props.history.push('/items');\n      })\n      .catch(function(){\n      })\n      setShow({display: 'none'});\n    }\n    \n  }\n  return(\n    <>\n       <div className=\"text-center mt-5 mb-4\">\n         <h2 data-testid=\"userNewtitle\">{state.name}編集</h2>\n       </div>\n       <Row>\n         <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <Button \n           variant=\"secondary\" \n           onClick={homeComponent}\n           className=\"mb-3\"\n         >\n          戻る\n         </Button>\n           <Form onSubmit={sendItemParameter}>\n             <Form.Group>\n               <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n             </Form.Group>\n             <Form.Group>\n               <Form.Label>商品名</Form.Label>\n               <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>価格</Form.Label>\n               <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>カテゴリー</Form.Label>\n               <div class=\"balloon1\" style={show}>\n                 <p>選択してください。</p>\n               </div>\n                 <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                   <option value=\"\">選択してください  </option>\n                  {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                    <option key={i} value={value}>{value}</option>\n                  )}\n                 </Form.Control>\n             </Form.Group>\n                \n             <Form.Group>\n               <Form.Label>商品説明</Form.Label>\n               <textarea \n                 name=\"info\" \n                 cols=\"30\" \n                 rows=\"10\" \n                 value={state.info}\n                 onChange={itemInput}\n                 className=\"form-control\">{state.info}</textarea>\n             </Form.Group>\n \n               <Button \n                 type=\"submit\" \n                 variant=\"primary\" \n                 className=\"btn-block mt-4\">\n                   送信\n               </Button>\n           </Form>\n           \n         </Col>\n       </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(ItemEdit));\n/***************************************************************************************************** */","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { getOption } from './setItemData';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\n\nconst Process = (props)=>{\n/********************加工データ************************************************************** */\n  const getProcessData = ()=>{\n     axios\n        .get(`https://uematsu-backend.herokuapp.com/processings/${props.item.id}`)\n        .then((res)=>{\n           \n           localStorage.removeItem('process');\n           localStorage.setItem('process', JSON.stringify(res.data));\n           setProcess(res.data);\n        \n        })\n        .catch((error)=>{\n           console.log(error);\n        })\n     }\n\n/*************************ステートおよび各種セット************************************************ */\n   useEffect(()=>{\n     getProcessData();\n   })\n   let item = props.item;\n   let options = getOption();\n\n   const[process, setProcess] = useState([]);\n   const [selectedOption, setSelectedOption] = useState(null);\n/***********************加工データサーバー送信**************************************** */\n   const addProcess = (e)=>{\n     e.preventDefault();\n    \n     let obj={};\n     obj[\"id\"] = props.item.id;\n     obj[\"data\"] = selectedOption;\n     axios.post('https://uematsu-backend.herokuapp.com/processings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n    \n   }\n   /******************************ログイン/未ログイン切り替え********************************************************** */\n   const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n  useEffect(()=>{\n    loginUserCheck();\n  })\n /****************************************削除加工法*************************************************************** */\n    const deleteProcess = (i,count)=>{\n      if(window.confirm('削除してよろしいですか？')){\n        axios\n          .delete(`https://uematsu-backend.herokuapp.com/processings/${i}`)\n          .then((response)=>{\n            alert(response.data.message); \n            let data = process.slice();\n            data.splice(count,1);\n            setProcess(data);\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n      }\n    }\n\n  return(\n   <>\n    <div className=\"text-center font-weight-bold h2 mt-5 mb-3\">{item.name}加工法管理画面</div>\n    <Row>\n      <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n      <Form onSubmit={addProcess}>\n        <Form.Group>\n          <Form.Label>加工法の登録</Form.Label>\n          <Select\n          　isMulti\n            defaultValue={selectedOption}\n            onChange={setSelectedOption}\n            options={options}\n          />\n        </Form.Group>\n        <Form.Control type=\"submit\" className=\"bg-primary text-white\"  value=\"追加\" />\n      </Form>\n      {process.length >0?\n       <>\n         <div className=\"text-center font-weight-bold mt-5\">登録加工法一覧</div>\n         <Table bordered>\n           <thead>\n             <tr>\n               <th className=\"text-white bg-dark text-center\">加工法</th>\n               <th className=\"text-white bg-dark text-center\"></th>\n             </tr>\n           </thead>\n           <tbody>\n             {process.map((data,count)=>(\n               <tr>\n                 <td className=\"text-center\">{data.processing_name}</td>\n                 <td>\n                   <Button\n                    variant=\"danger\"\n                    className=\"btn-block\"\n                    onClick={(i)=>deleteProcess(data.id, count)}\n                   >削除</Button>\n                 </td>\n               </tr>\n             ))}\n           </tbody>\n         </Table>\n       </>\n       : \n       <></>\n       }\n      </Col>\n    </Row>  \n\n\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Process))","\n export const getOption = ()=>{\n   return [\n    { value: '刺身', label: '刺身' },\n    { value: '切り身', label: '切り身' },\n    { value: '煮物用', label: '煮物用' },\n    { value: '塩焼き用', label: '塩焼き用' },\n    { value: 'フライ用', label: 'フライ用' },\n    { value: '刺身/切り身', label: '刺身/切り身' },\n   ];\n }","import { useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders')) \n      })\n      \n  }\n    useState(orderCall());*/\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n        /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            let orders = state.data.slice();\n            orders.splice(0);\n            res.data.forEach((order) => {\n              orders.push(order)\n            });\n            setState({\n              data: orders\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n         \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n        /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            setState({\n              data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <Row>\n\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                    <td className=\"text-center align-middle\">{value.name}</td>\n                    <td  className=\"text-center align-middle\">{value.price}</td>\n                    <td  className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                    <td  className=\"text-center align-middle\">{value.stock}</td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteOrder(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { useState } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\nconst buttonWidth ={\n  width: '48%',\n  margin: '0',\n  marginRight:'2%'\n}\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders'))\n      })\n  }\n    useState(orderCall());*/\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n          /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            setState({\n              data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n           /*削除後更新*/\n           axios\n           .get('https://uematsu-backend.herokuapp.com/orders')\n           .then((res)=>{\n               localStorage.setItem('orders', JSON.stringify(res.data));\n               let action = ordersSend(res.data);\n               props.dispatch(action);\n               setState({\n                 data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n               })\n               \n           })\n           .catch((error)=>{\n               console.log(error);\n           })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <div className=\"p-2 bg-white\"></div>\n      <div className=\"w-100 bg-white\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover mt-3>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                     <Table bordered>\n                        <tbody>\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                            <td colSpan=\"3\" className=\"text-center align-middle\">{value.name}</td>\n                          </tr>\n\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                            <td className=\"text-center align-middle\">{value.price}</td>\n                            <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                            <td className=\"text-center align-middle\">{value.stock}</td>\n                            \n                          </tr>\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                            <td colSpan=\"3\" className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                          </tr>\n\n                          <tr>\n                            <td colSpan=\"4\">\n                              <Button \n                                variant=\"primary\"\n                                onClick={(i)=>editPage(value.id)}\n                                style={buttonWidth}\n                              >編集</Button>\n\n                              <Button \n                                variant=\"danger\"\n                                onClick={(i)=>deleteOrder(value.id)}\n                                style={buttonWidth}\n                              >削除</Button>\n                            </td>\n                          </tr>\n                        </tbody>\n                     </Table>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n          editPage={(i)=>editPage(i)} \n        />\n      </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import axios from 'axios';\n\nexport const formSelectItems = ()=>{\n  const itemData =JSON.parse(localStorage.getItem('items'));\n  if(!itemData){\n    axios\n    .get('https://uematsu-backend.herokuapp.com/items')\n    .then((res)=>{\n       localStorage.removeItem('items');\n       localStorage.setItem('items', JSON.stringify(res.data));\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n  }\n  let options = [];\n  if(itemData){\n    itemData.forEach(item=>{\n      options.push({value: item.name, label: item.name});\n    })\n  }\n  return options;\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.browser.cjs';\nimport { formSelectItems } from './setItem';\nimport { connect } from 'react-redux';\nimport {  ordersSend } from '../store/Store';\n\nconst  New = (props)=>{\n  const[state, setState] = useState({\n    price: '',\n    stock: ''\n  });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const backIndex = ()=>{\n    props.history.push('/orders');\n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name: selectedOption.value, price: state.price, stock: state.stock};\n    axios.post('https://uematsu-backend.herokuapp.com/orders', sendData)\n      .then(function (response) {\n        /*追加後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            props.history.push('/orders')\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      /*props.history.push('/orders');*/\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">店頭商品追加</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={backIndex}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Select\n                options={options}\n                defaultvalue={selectedOption}\n                onChange={setSelectedOption}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {  ordersSend } from '../store/Store';\n\n/**************************************************************************************** */\nconst  OrderEdit = (props)=>{\n\n const getitemData = ()=>{\n  let orders = []\n  let datas = JSON.parse(localStorage.getItem('orders'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     orders.push(data);\n    }\n  });\n  return orders\n }\n let orders = getitemData();\n \n\n/*********************************state******************************************************* */\n  \n  const[state, setState] = useState({\n    name: orders.length>0? orders[0].name : [],\n    price:orders.length>0? orders[0].price :[],\n    stock: orders.length>0? orders[0].stock : []\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  const homeComponent = ()=>{\n    props.history.push('/orders')  \n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name:state.name, price: state.price, stock: state.stock};\n    axios.patch(`https://uematsu-backend.herokuapp.com/orders/${props.id}`, sendData)\n      .then(function (response) {\n           /*編集後更新*/\n           axios\n           .get('https://uematsu-backend.herokuapp.com/orders')\n           .then((res)=>{\n               localStorage.setItem('orders', JSON.stringify(res.data));\n               let action = ordersSend(res.data);\n               props.dispatch(action);\n               props.history.push('/orders');\n               setState({\n                 data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n               })\n               \n           })\n           .catch((error)=>{\n               console.log(error);\n           })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n  \n  }\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">{orders.length>0? orders[0].name : ''}編集</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={homeComponent}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <div className=\"font-weight-bold\">{state.name}</div>\n              <Form.Control \n                type=\"hidden\"\n                name=\"name\"\n                value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n   )\n}\nexport default withRouter(connect(state=>state)(OrderEdit));\n/***************************************************************************************************** */","export default __webpack_public_path__ + \"static/media/fishs2.d6a1f15c.jpg\";","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { youtubeSeearchSend } from '../store/Store';\n\n\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0'\n}\nconst buycheck={\n  padding: '5px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PcIndex(props){\n \n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id === data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[ itemData ] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/customor_show');\n  }\n\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.forEach((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/customer_confirm');\n }\n /********************************************商品説明ページアクセス*************************************************************************************** */\n const showItemInfo =(item)=>{\n   let action = youtubeSeearchSend(item);\n   props.dispatch(action);\n\n   props.history.push('/customer_item_info')\n}\n  return(\n    <div >\n      <img src={image} alt=\"画像\" className=\"costomer-imag\"/>\n       <div className=\"customor-main\">\n    　　　<h1 className=\"customor-main-title\">本日入荷商品紹介</h1>\n         <article>\n           <section class=\"gallery\">\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul>\n                 {itemData.map((item)=>(\n                   <li>\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                             <div>\n                                <button \n                                  className=\"btn btn-success btn-block\"\n                                  onClick={()=>buyItem(item)}\n                                >\n                                  <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                                </button>\n\n                                <button \n                                  className=\"btn btn-danger btn-block\"\n                                  onClick={()=>showItemInfo(item)}\n                                >\n                                  <FontAwesomeIcon icon={faYoutube}  />商品説明\n                                </button>\n                             </div>\n                              \n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div className=\"customor-right\">\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div className=\"customor-right\">\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物件数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n       \n      </div>\n      <div className=\"hidden-div\"></div> \n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","/*******************index*********************************************** */\n/*ヘッダー画像*/\nexport const HeaderImagePhone ={\n   width: '100%'\n}\n\n/*商品ページ画像エリア全体*/\n\nexport const ArticlePhone={\n  width:'100%',\n  maxWidth: '100%',\n  background: '#fff',\n  marginBottom: \"10%\"\n}\n\n/*画像ul*/\n\nexport const UlPhone={\n  listStyle: 'none',\n  margin: '0',\n  width: '100%',\n  marginBottom: '4%'\n}\n\n/*画像ll*/\n\nexport const LlPhone={\n  width: '100%',\n  maxWidth: '100%',\n  margin: '5% -15%'\n}\n/*買い物カゴエリア全体 */\nexport const phoneBuyCartMain = {\n  background: \"#f0f0f0\",\n  marginTop: \"5%\",\n  margimBottom: \"2%\",\n  padding: \"5% 0\"\n\n}\n/*******************confirm*********************************************** */","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { HeaderImagePhone,ArticlePhone, UlPhone, LlPhone, phoneBuyCartMain } from './phoneStyle';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { youtubeSeearchSend } from '../store/Store';\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0',\n  width: '100%'\n}\nconst buycheck={\n  padding: '5px 0 25px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PhoneIndex(props){\n  \n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id === data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[ itemData ] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/phone_customor_show');\n  }\n\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.forEach((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/phone_customer_confirm');\n }\n /********************************************商品説明ページアクセス*************************************************************************************** */\n const showItemInfo =(item)=>{\n  let action = youtubeSeearchSend(item);\n  props.dispatch(action);\n\n  props.history.push('/customer_item_phone_info')\n}\n  return(\n    <div>\n      <img src={image} alt=\"画像\" style={HeaderImagePhone} />\n       <div style={HeaderImagePhone} className=\"text-center\">\n    　　　<h4>本日入荷商品紹介</h4>\n         <article style={ArticlePhone}>\n           <section>\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul style={UlPhone}>\n                 {itemData.map((item)=>(\n                   <li style={LlPhone}>\n                       <Image style={HeaderImagePhone} src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul style={UlPhone}>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                             <div>\n                                <button \n                                  className=\"btn btn-success btn-block\"\n                                  onClick={()=>buyItem(item)}\n                                >\n                                  <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                                </button>\n\n                                <button \n                                  className=\"btn btn-danger btn-block\"\n                                  onClick={()=>showItemInfo(item)}\n                                >\n                                  <FontAwesomeIcon icon={faYoutube}  />商品説明\n                                </button>\n                             </div>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div style={phoneBuyCartMain}>\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div style={phoneBuyCartMain}>\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物件数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n         \n      </div>\n\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport MediaQuery from \"react-responsive\";\nimport { connect } from 'react-redux';\nimport PcIndex from './PCIndex';\nimport PhoneIndex from './PhoneIndex';\n\n function Index(props){\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id === data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n  return(\n    <div>\n    <MediaQuery minDeviceWidth={767}>\n      <PcIndex \n        sendCustomerData={props.sendCustomerData}  \n        sendCartItemToConfirm={props.sendCartItemToConfirm}\n        fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          sendCustomerData={props.sendCustomerData}  \n          sendCartItemToConfirm={props.sendCartItemToConfirm}\n          fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","\n/*買い物かごで同一商品が含まれているのかをチェック あればaddされない*/\nexport const sameItemCheck = (datas, name, process)=>{\n  let sameItemCount = 0;\n  datas.forEach((data)=>{\n    if((data.name === name) && (data.process === process)){\n        sameItemCount ++ ;\n    }\n  });\n  if(sameItemCount >0){\n      return true;\n  }\n  else{\n      return false;\n  }\n}\n\n/*セレクト時商品選択されていないかチェック*/\n\nexport const selectItemCheck = (name)=>{\n   if(name === '--加工法を選択してください--' || name === ''){\n        return false\n   }\n   else{\n       return true;\n   }\n}\n\n/*セレクト時ローカルストレージ在庫更新*/\n\nexport const localstorageChange = (name,stock, datas)=>{\n  \n  datas.forEach((data)=>{\n    if(data.name === name){\n      data.stock = stock;\n    }\n  });\n return datas;\n}\n\n/*注文確認ボタンにて削除ボタン押し下時に大元propsの在庫反映*/\n\nexport const pushDeleteButtonTolocalData = (name,orderNumber,datas)=>{\n  datas.forEach((data)=>{\n    if(data.name === name){\n      let localnum = Number(data.stock);\n      localnum += Number(orderNumber);\n      data.stock = localnum;\n    }\n  });\n  \n}\n/* カートの時間のチェック*/\nexport const cartValidate = (datas)=>{\n  let check = true;\n  datas.forEach((data)=>{\n    data.time === \"\" ? check = false : check = true;\n  })\n  return check;\n}\n\n/* カートの数チェック*/\nexport const cartNumValidate = (datas)=>{\n  let check = true;\n  datas.forEach((data)=>{\n    data.num === 0 ? check = false : check = true;\n  })\n  return check;\n}\n\n/* 商品の検索 */\nexport const searchItem = (name)=>{\n  let items = JSON.parse(localStorage.getItem('items'));\n  let data  = {}\n  items.forEach((item)=>{\n     if(item.name === name){\n       data[\"info\"] = item.info;\n       data[\"category\"] = item.category\n     }\n  });\n  return data;\n}\n","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <thead>\n                 <th className=\"bg-dark text-center text-white\">商品名</th>\n                 <th className=\"bg-dark text-center text-white\">価格</th>\n                 <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                 <th className=\"bg-dark text-center text-white\">加工法</th>\n                 <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                 <th className=\"bg-dark text-center text-white\">合計金額</th>\n               </thead>\n               <tbody>\n                 <tr>\n                   <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                   <td className=\"font-weight-bold text-center\">\n                     <select className=\"form-control\" onChange={numberChange}>\n                       {stockOption().map((num)=>(\n                         <option>{num}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle\">\n                   <select className=\"form-control\" onChange={processChange}>\n                       <option value=\"\">--加工法を選択してください--</option>\n                       {categoryArray().map((process)=>(\n                         <option>{process}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td>\n                     <input \n                        type=\"time\" \n                        value={state.time}  \n                        min=\"10:00\" max=\"19:00\"\n                        required\n                        className=\"form-control\"\n                        onChange={timeChange}\n                     />\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg\" />\n              </div>\n             </form>\n        </Col>    \n      </Row>\n     </>\n     : \n     ''\n     }\n      \n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <div className=\"w-100\">\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <tbody>\n                 <tr>\n                   <Table bordered style={table}>\n                     <tbody>\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">商品名</th>\n                        <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">価格</th>\n                        <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                        <td className=\"font-weight-bold text-center\">\n                          <select className=\"form-control\" onChange={numberChange}>\n                            {stockOption().map((num)=>(\n                              <option>{num}</option>\n                            ))}\n                          </select>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">加工法</th>\n                        <td className=\"font-weight-bold text-center align-middle\">\n                          <select className=\"form-control\" onChange={processChange}>\n                              <option value=\"\">--加工法を選択してください--</option>\n                              {categoryArray().map((process)=>(\n                                <option>{process}</option>\n                              ))}\n                            </select>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                        <td>\n                          <input \n                              type=\"time\" \n                              value={state.time}  \n                              min=\"10:00\" max=\"19:00\"\n                               required\n                              className=\"form-control\"\n                              onChange={timeChange}\n                          />\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">合計金額</th>\n                        <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                      </tr>\n                     \n                     </tbody>\n                   </Table>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg btn-block\" />\n              </div>\n             </form>\n      </div>\n     </>\n     : \n     ''\n     }\n      \n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","\nimport '../App.css'\n\nconst NoData = ()=>{\n  return(\n    <div className=\"p-5 bg-secondary text-center font-weight-bold text-white mt-4 \">注文商品はありません。</div>\n  )\n}\nexport default NoData;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend, searchSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange, cartValidate } from './setting';\n\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  Confirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result && cartValidate(props.buyCarts)){  /*カートの受取時間もチェック(現時点空の場合のみ)*/\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData;\n\n   /* rails送信　*/\n   axios.post('https://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        const id_data = {id: props.userData[0].id, email: props.userkey.email, password: props.userkey.password }\n        axios.post(`https://uematsu-backend.herokuapp.com/users/show`, id_data).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n         \n\n        }).catch(function(err){\n         console.log(err);\n        });\n        /*ページネーション用のステート変更*/\n        let page_data = {\n          user_id: props.userData[0].id,\n          num: 1\n        }\n        axios.post('https://uematsu-backend.herokuapp.com/history/search', page_data)\n        .then(function (response) {\n          let action = searchSend(response.data);\n          props.dispatch(action);\n        })\n        .catch(function(){\n        });\n\n\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    else if(!cartValidate(props.buyCarts)){\n      alert('時間を入力してください。');\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process,\n    time: props.buyCarts[Number(e.target.name)].time\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5 mb-3\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         \n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"mt-3\">\n             <thead>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faFish} />\n                  </span>\n                  商品名\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faYenSign} />\n                  </span>\n                  価格\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faCalculator} />\n                  </span>\n                  数\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  加工法\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  受け取り時間\n               </th>\n               <th style={th}>合計</th>\n               <th style={th}></th>\n             </thead>\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                      <label>{\"現在\" + num[index]}</label>\n                      <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                       {state.map((order)=>(\n                         order.name === data.name? \n                         /*在庫にすでに選択されている数量足した数*/\n                         \n                           selectNumber(Number(order.stock) + Number(num[index]) -1).map((value)=>(\n                             <option key={value}>{value+1}</option>\n                           ))\n                           : \n                           ''\n                       ))}\n                      </Form.Control>\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">\n                    <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                      />\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                     <Button \n                       variant=\"danger\"\n                       onClick={()=>deleteItem(index, data.name, num[index])}\n                     >\n                    削除\n                     </Button>\n                   </td>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Confirm))\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange, cartValidate } from './setting';\n\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  PhoneConfirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result && cartValidate(props.buyCarts)){  /*カートの受取時間もチェック(現時点空の場合のみ)*/\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('http://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        const id_data = {id: props.userData[0].id, email: props.userkey.email, password: props.userkey.password }\n        axios.post(`https://uematsu-backend.herokuapp.com/users/show`, id_data).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    else if(!cartValidate(props.buyCarts)){\n      alert('時間を入力してください。');\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <div className=\"bg-white p-2\"></div>\n       <div className=\"bg-white pb-3\">\n          {props.buyCarts.length >0? \n          <Form onSubmit={sendServer}>\n           <Table bordered className=\"w-100\">\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                  <Table>\n                   <tr>\n                     <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faFish} />\n                        </span>\n                        商品名\n                     </th>\n                     <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   </tr>\n                  \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faYenSign} />\n                        </span>\n                          価格\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   </tr>\n\n                   <tr>\n                    <th style={th} className=\"align-middle\">\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faCalculator} />\n                      </span>\n                        数\n                    </th>\n                      <td className=\"text-dark text-center font-weight-bold\">\n                        <label>{\"現在\" + num[index]}</label>\n                        <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                        {state.map((order)=>(\n                          order.name === data.name? \n                          /*在庫にすでに選択されている数量足した数*/\n                          \n                            selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                              <option key={value}>{value}</option>\n                            ))\n                            : \n                            ''\n                        ))}\n                        </Form.Control>\n                      </td>\n                   </tr>\n                    \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faUtensils} />\n                      </span>\n                        加工法\n                    </th>\n                    <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   </tr>\n\n\n                    <tr>\n                      <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                            <FontAwesomeIcon icon={faUtensils} />\n                        </span>\n                        受け取り時間\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">\n                        <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          min=\"10:00\" max=\"19:00\"\n                          required\n                          className=\"form-control\"\n                          onChange={timesChange}\n                          />\n                      </td>\n                    </tr>\n                    \n                    <tr>\n                      <th style={th}>合計</th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                    </tr>\n\n                    <tr>\n                       <td colSpan=\"2\" className=\"text-dark text-center font-weight-bold\">\n                         <Button \n                            variant=\"danger\"\n                            onClick={()=>deleteItem(index, data.name, num[index])}\n                            className=\"btn-block\"\n                          >\n                          削除\n                         </Button>\n                       </td>\n                    </tr>\n                  </Table>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               type=\"submit\" \n               variant=\"primary\"\n               className=\"btn-lg btn-block mb-5\"\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n      </div>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneConfirm))\n","import { useState } from 'react';\nimport { Image, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport { searchItem } from \"./setting\";\nimport axios from 'axios';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\n function Info(props){\n  const[state, setState] = useState({\n    date: null\n  })\n /******************************ログイン/未ログイン切り替え********************************************************** */\n const loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n/***************************************youtubeを表示する****************************************************** */\nconst showYoutube =()=>{\n  const params = `part=snippet&q=${props.youtubeData.name} 魚&type=video&maxResults=10&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\n  axios.get(`https://www.googleapis.com/youtube/v3/search?${params}`)\n    .then((response)=>{\n        let data = response.data.items;\n        setState({\n          data: data\n        })\n    })\n    .catch((error)=>{\n        console.log(error);\n    })\n\n}\n/**** */\nconst backPage = ()=>{\n  props.history.push('/customor');  \n}\n\n  return(\n    <div >\n      \n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-dark\">{props.youtubeData.name}説明ページ</h2>\n      </div>\n      <Button \n        variant=\"light\"\n        className=\"btn btn-lg mb-1\"\n        onClick={backPage}\n      >戻る</Button>\n      <Table bordered className=\"bg-white\">\n        <tbody>\n          <tr>\n            <td className=\" text-center w-25 align-middle\" rowSpan=\"4\">\n              <Image src={`http://yukiabineko.sakura.ne.jp/react/${props.youtubeData.name}.jpg`} alt=\"表示できません\" roundedCircle />\n            </td>\n            <th className=\"bg-primary text-white\">商品名</th>\n            <th className=\"bg-primary text-white\">価格</th>\n            <th className=\"bg-primary text-white\">カテゴリー</th>\n          </tr>\n\n          <tr>\n            <td className=\"text-center\">{props.youtubeData.name}</td>\n            <td className=\"text-center\">{props.youtubeData.price}</td>\n            <td className=\"text-center\">{searchItem(props.youtubeData.name).category}</td>\n          </tr>\n\n          <tr>\n            <th colSpan=\"3\"　　className=\"bg-primary text-white text-center\">\n               商品説明\n            </th>\n          </tr>\n          <tr>\n            <td colSpan=\"3\">\n              <div className=\"p-5 border\">\n              {searchItem(props.youtubeData.name).info}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-white\">{`【${props.youtubeData.name}を知ろう】`}</h2>\n        <p className=\"text-white font-weight-bold\">\n          各お魚についてYoutube動画で勉強できます。調理法や旬の時期など<br/>様々な情報を知ることができます。<br/>\n          ぜひ活用ください。<br/>動画を視聴するにはボタンを押してください。\n      </p>\n      </div>\n      \n      <Button\n         variant=\"danger\"\n         onClick={showYoutube}\n         className=\"ml-3 text-white font-weight-bold btn btn-lg mb-2\"\n      > <FontAwesomeIcon icon={faYoutube}  />動画を見る</Button>\n\n      {state.data?\n       <Table className=\"bg-light text-primary\">\n         <thead>\n           <tr>\n             <th></th>\n             <th>動画</th>\n             <th>動画情報</th>\n           </tr>\n         </thead>\n         <tbody>\n           {state.data.map((data,i)=>(\n             <tr>\n               <td>NO.{i + 1}</td>\n               <td>\n                 <a　target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.youtube.com/watch?v=${data.id.videoId}`}　>\n                   <img width=\"320\" height=\"180\" src={data.snippet.thumbnails.medium.url} alt=\"\" />\n                 </a>\n               </td>\n               <td>\n                 <b>{data.snippet.title}</b>\n                 <span>{data.snippet.description}</span>\n               </td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n       : \n       <div className=\"bg-white p-5 text-primary text-center\">\n         <p className=\"bg-light p-5 font-weight-bold\">\n           ただいま表示できません。表示するにはボタン押してください。\n         </p>\n        \n      </div>\n      }\n\n\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Info))","import { useState } from 'react';\nimport { Image, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport { searchItem } from \"./setting\";\nimport axios from 'axios';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\n function PhoneInfo(props){\n  const[state, setState] = useState({\n    date: null\n  })\n /******************************ログイン/未ログイン切り替え********************************************************** */\n const loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n/***************************************youtubeを表示する****************************************************** */\nconst showYoutube =()=>{\n  const params = `part=snippet&q=${props.youtubeData.name} 魚&type=video&maxResults=10&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\n  axios.get(`https://www.googleapis.com/youtube/v3/search?${params}`)\n    .then((response)=>{\n        let data = response.data.items;\n        setState({\n          data: data\n        })\n    })\n    .catch((error)=>{\n        console.log(error);\n    })\n\n}\nconst backPage = ()=>{\n  props.history.push('/customor');  \n}\n\n  return(\n    <div >\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-dark\">{props.youtubeData.name}説明ページ</h2>\n      </div>\n      <Button \n        variant=\"light\"\n        className=\"btn btn-lg mb-1\"\n        onClick={backPage}\n      >戻る</Button>\n      <Table bordered className=\"bg-white\">\n        <tbody>\n          <tr>\n            <td className=\" text-center w-25 align-middle\" colSpan=\"2\">\n              <Image src={`http://yukiabineko.sakura.ne.jp/react/${props.youtubeData.name}.jpg`} alt=\"表示できません\" roundedCircle />\n            </td>\n          </tr>\n          <tr>\n            <th className=\"bg-primary text-white\">商品名</th>\n            <td className=\"text-center\">{props.youtubeData.name}</td>\n          </tr>\n          <tr>\n            <th className=\"bg-primary text-white\">価格</th>\n            <td className=\"text-center\">{props.youtubeData.price}</td>\n          </tr>\n          <tr>\n            <th className=\"bg-primary text-white\">カテゴリー</th>\n            <td className=\"text-center\">{searchItem(props.youtubeData.name).category}</td>\n          </tr>\n          <tr>\n            <td colSpan=\"3\">\n              <p className=\"bg-primary text-white p-2\">商品説明</p>\n              <div className=\"p-5 border\">\n              {searchItem(props.youtubeData.name).info}\n              </div>\n             </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-white\">{`【${props.youtubeData.name}を知ろう】`}</h2>\n        <p className=\"text-white font-weight-bold\">\n          各お魚についてYoutube動画で勉強できます。調理法や旬の時期など<br/>様々な情報を知ることができます。<br/>\n          ぜひ活用ください。<br/>動画を視聴するにはボタンを押してください。\n      </p>\n      </div>\n      \n      <Button\n         variant=\"danger\"\n         onClick={showYoutube}\n         className=\"ml-3 text-white font-weight-bold btn btn-lg mb-2\"\n      > <FontAwesomeIcon icon={faYoutube}  />動画を見る</Button>\n\n      {state.data?\n       <Table className=\"bg-light text-primary table-responsive\">\n         <thead>\n           <tr>\n             <th className=\"text-center\">動画</th>\n           </tr>\n         </thead>\n         <tbody>\n           {state.data.map((data,i)=>(\n             <tr>\n               <td>\n                 <a　target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.youtube.com/watch?v=${data.id.videoId}`}　>\n                   <img src={data.snippet.thumbnails.medium.url} alt=\"\" />\n                 </a><br/>\n                 <b className=\"w-100\">{data.snippet.title}</b>\n                 \n               </td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n       : \n       <div className=\"bg-white p-5 text-primary text-center\">\n         <p className=\"bg-light p-5 font-weight-bold\">\n           ただいま表示できません。表示するにはボタン押してください。\n         </p>\n        \n      </div>\n      }\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneInfo))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { Table, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { formSelectItems } from '../orders/setItem';\nimport Select from 'react-select';\nimport axios from 'axios';\n\n\n function PcMovie(props){\n   const[state, setState] = useState({\n     data: null\n   });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n  /******************ボタン処理************************ */\n  const showYoutube =()=>{\n    if(selectedOption){\n      const params = `part=snippet&q=${selectedOption.value} 魚&type=video&maxResults=10&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\n        axios.get(`https://www.googleapis.com/youtube/v3/search?${params}`)\n          .then((response)=>{\n              let data = response.data.items;\n              setState({\n                data: data\n              })\n          })\n          .catch((error)=>{\n              console.log(error);\n          })\n        }\n    }\n  return(\n    <div>\n     <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h1 className=\"font-weight-bold text-dark\">お魚動画視聴ページ</h1>\n        <p className=\"text-darkx font-weight-bold mt-5\">\n          販売されているお魚を動画で調べてみましょう<br/>\n        </p>\n      </div>\n     \n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-11 offset-md-1\">\n          <p className=\"text-light font-weight-bold\">検索したい商品を選択してください。</p>\n          <Table>\n            <tbody>\n              <tr>\n                <td className=\"align-middle\">\n                  <Select\n                    options={options}\n                    defaultvalue={selectedOption}\n                    onChange={setSelectedOption}\n                  />\n                </td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={showYoutube}\n                    className=\"ml-3 text-white font-weight-bold btn btn-lg mb-2\"\n                  > <FontAwesomeIcon icon={faYoutube}  />動画を見る</Button>\n                </td>\n              </tr>\n            </tbody>\n      </Table>\n          </div>\n        </div>\n      </div>\n     \n      {state.data?\n       <Table className=\"bg-light text-primary\">\n         <thead>\n           <tr>\n             <th></th>\n             <th>動画</th>\n             <th>動画情報</th>\n           </tr>\n         </thead>\n         <tbody>\n           {state.data.map((data,i)=>(\n             <tr>\n               <td>NO.{i + 1}</td>\n               <td>\n                 <a　target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.youtube.com/watch?v=${data.id.videoId}`}　>\n                   <img width=\"320\" height=\"180\" src={data.snippet.thumbnails.medium.url} alt=\"\" />\n                 </a>\n               </td>\n               <td className=\"text-dark\"> \n                 <b>{data.snippet.title}</b>\n                 <span>{data.snippet.description}</span>\n               </td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n       : \n       <div className=\"container\">\n         <div className=\"row\">\n           <div className=\"col-md-10 offset-md-1\">\n            <p className=\"bg-light p-5 font-weight-bold text-center\">\n              ただいま表示できません。表示するにはボタン押してください。\n            </p>\n           </div>\n         </div>\n      </div>\n      }\n    </div>\n  );\n}\nexport default withRouter(connect((state)=>state)(PcMovie))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { Table, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { formSelectItems } from '../orders/setItem';\nimport Select from 'react-select';\nimport axios from 'axios';\n\n\n function PcMovie(props){\n   const[state, setState] = useState({\n     data: null\n   });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n  /******************ボタン処理************************ */\n  const showYoutube =()=>{\n    if(selectedOption){\n      const params = `part=snippet&q=${selectedOption.value} 魚&type=video&maxResults=10&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\n        axios.get(`https://www.googleapis.com/youtube/v3/search?${params}`)\n          .then((response)=>{\n              let data = response.data.items;\n              setState({\n                data: data\n              })\n          })\n          .catch((error)=>{\n              console.log(error);\n          })\n        }\n    }\n  return(\n    <div>\n     <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-dark\">お魚動画視聴ページ</h2>\n        <p className=\"text-warning font-weight-bold mt-3\">\n          販売されているお魚を動画で調べてみましょう<br/>\n        </p>\n      </div>\n      <p className=\"text-white font-weight-bold\">【検索したい商品を選択してください。】</p>\n        <Select\n            options={options}\n            defaultvalue={selectedOption}\n            onChange={setSelectedOption}\n        />\n        <Button\n            variant=\"danger\"\n            onClick={showYoutube}\n            className=\"text-white font-weight-bold btn btn-block mb-2 mt-2\"\n        > <FontAwesomeIcon icon={faYoutube}  />動画を見る</Button>\n\n     {state.data?\n       <Table className=\"bg-light text-primary table-responsive\">\n         <thead>\n           <tr>\n             <th className=\"text-center\">動画</th>\n           </tr>\n         </thead>\n         <tbody>\n           {state.data.map((data,i)=>(\n             <tr>\n               <td className=\"text-dark\">\n                 <a　target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.youtube.com/watch?v=${data.id.videoId}`}　>\n                   <img src={data.snippet.thumbnails.medium.url} alt=\"\" />\n                 </a><br/>\n                 <b className=\"w-100\">{data.snippet.title}</b>\n                 \n               </td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n       : \n       <div className=\"bg-white p-5 text-primary text-center\">\n         <p className=\"bg-light p-5 font-weight-bold\">\n           ただいま表示できません。表示するにはボタン押してください。\n         </p>\n        \n      </div>\n      }\n    </div>\n  );\n}\nexport default withRouter(connect((state)=>state)(PcMovie))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport MediaQuery from \"react-responsive\";\nimport { connect } from 'react-redux';\nimport PcMovie from './PcMovie';\nimport PhoneMovie from './PhoneMovie';\n\n function Movie(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  return(\n    <div>\n    <MediaQuery minDeviceWidth={767}>\n      <PcMovie />\n    </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneMovie />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Movie))","\n/*当日日付のみ表示するための分岐処理*/\n\nexport const viewDataBranch = (date)=>{\n  /*本日*/\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*注文データ*/\n\n  const createDate = new Date(date);\n  const c_year = createDate.getFullYear();\n  const c_month = createDate.getMonth() + 1;\n  const c_day = createDate.getDate();\n\n  /*照合*/\n  if( year === c_year && month === c_month && day === c_day){\n     return 1;\n  }\n  else{\n     return 0;\n  }\n\n}\n/********************************************************************************************* */\n/*オーダーで今日の日付のものがあるかチェック*/\n\nexport const todayOdrersChecker = (shoppings)=>{\n  let target = 0;\n  shoppings.forEach((shopping)=> {\n     let data = viewDataBranch(shopping.shopping_date);\n     /*各オーダーで今日日付のものがあれば加算*/\n     if(data === 1) target ++;\n  });\n  return target;\n}\n/*(ヘッダー表示用,商品リスト用)明日の日付アイテムあるか確認 */\n\nexport const todayOrderExisting =(shoppings)=>{\n   let todayObjects = [];\n   let date = new Date();\n   let year = date.getFullYear();\n   let month = date.getMonth() + 1;\n   date.setDate(date.getDate() + 1); \n   let day = date.getDate();  /*tomorrow */\n\n   if(shoppings){\n      shoppings.forEach((shopping)=>{\n         let t_date = new Date(shopping.shopping_date);\n         let t_year = t_date.getFullYear();\n         let t_month = t_date.getMonth() + 1;\n         let t_day = t_date.getDate();\n         if( year === t_year && month === t_month && day === t_day){\n            todayObjects.push(shopping);\n         }\n      });\n   }\n   return todayObjects;\n}\n/*売上速報ページ売上合計計算*/\nexport  const totalSales = (datas)=>{\n  let total = 0\n  if(datas){\n   datas.forEach((data)=>{\n      total += Number(data.合計);\n   })\n  }\n  return total;\n}\n/*注文確認画面該当ユーザーレコード取得*/\nexport const userRecord = (name)=>{\n  let record = null;\n  let users = JSON.parse(localStorage.getItem('users'));\n  users.forEach((user)=>{\n     if(user.name === name){\n        record = user;\n     }\n  });\n  return record;\n}\n","import { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker, userRecord } from \"./settiing\";\nimport { daySetting } from '../users/setting';\nimport { timeSetting } from '../setting';\nimport { faCheck, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData] = useState(\n    localData ?localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  /*async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall()); */\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.showShoppingStatus(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-dark\">注文確認表</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 12 }} className=\"p-5 bg-light shadow\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table bordered striped>\n              <thead>\n                <th className=\"bg-primary text-white text-center\">日付</th>\n                <th className=\"bg-primary text-white text-center\">受け渡し時間</th>\n                <th className=\"bg-primary text-white text-center\">商品名</th>\n                <th className=\"bg-primary text-white text-center\">お客様名</th>\n                <th className=\"bg-primary text-white text-center\">価格</th>\n                <th className=\"bg-primary text-white text-center\">個数</th>\n                <th className=\"bg-primary text-white text-center\">加工法</th>\n                <th className=\"bg-primary text-white text-center\">合計金額{todayOdrersChecker(shopingData).length}</th>\n                <th className=\"bg-primary text-white text-center\">連絡</th>\n              </thead>\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                  <td className=\"font-weight-bold text-center align-middle\">\n                    {daySetting(data.shopping_date)}\n                    {data.pay?  <div className=\"bg-warning rounded-pill mt-1 text-primary\"><FontAwesomeIcon icon={faCheck} /> &thinsp;支払済</div> : \"\"}\n                  </td>\n                  <td className=\"font-weight-bold text-danger align-middle text-center\">{timeSetting(data.receiving_time)}</td>\n                  <td className=\"font-weight-bold text-center align-center\">\n                    <button \n                      style={customButton} \n                      id={`customButton${i}`}\n                      onMouseOver={()=>hoverButton(i)}\n                      onMouseOut={()=>outButton(i)}\n                      className=\"customButton\"\n                      onClick={()=>showShoppingStatus(data)}\n                      >{data.name}</button>\n                    \n                    <br/>\n                    {orderStatus(data.status)}\n                  </td>\n                  <td className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">\n                    { Number(data.price) * Number(data.num) }\n                  </td>\n                  <td>\n                  <a \n                    className=\"btn btn-success btn-block p-3\" \n                    href={`mailto:${userRecord(data.user_name).email}`} \n                    target=\"_blank\" rel=\"noopener noreferrer\"\n                  ><FontAwesomeIcon icon={faEnvelope} />メールを送る</a>  \n                  </td>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n        </Col>\n      </Row>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker, userRecord } from \"./settiing\";\nimport { daySetting } from '../users/setting';\nimport { timeSetting } from '../setting';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faEnvelope, faMobileAlt } from '@fortawesome/free-solid-svg-icons';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData] = useState(\n    localData ? localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  /*async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall());*/\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.showShoppingStatus(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-dark\">注文確認表</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table striped className=\"w-100\" >\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <td colSpan=\"5\" className=\"font-weight-bold text-danger bg-white text-center\">\n                            受け取り時間:{timeSetting(data.receiving_time)}\n                            {data.pay?  \n                            <div className=\"bg-warning rounded mt-1 text-primary p-3\">\n                              <FontAwesomeIcon icon={faCheck} /> &thinsp;\n                              支払済\n                            </div> \n                              : \n                             \"\"\n                            }\n                          </td>\n                          \n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">受け渡し日</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">\n                            {daySetting(data.shopping_date)}\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">商品名</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-center\">\n                            <button \n                              style={customButton} \n                              id={`customButton${i}`}\n                              onMouseOver={()=>hoverButton(i)}\n                              onMouseOut={()=>outButton(i)}\n                              className=\"customButton\"\n                              onClick={()=>showShoppingStatus(data)}\n                              >{data.name}</button>\n                            \n                            <br/>\n                            {orderStatus(data.status)}\n                          </td>\n                        </tr>\n                         \n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">お客様名</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                        </tr>\n\n                        <tr>\n                           <th className=\"bg-primary text-white text-center align-middle\">価格</th>\n                           <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                           <td className=\"font-weight-bold text-center text-danger align-middle\">\n                            ({ Number(data.price) * Number(data.num) })\n                           </td>\n                           <th className=\"bg-primary text-white text-center align-middle\">個数</th>\n                           <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">加工法</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">メールで連絡</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">\n                          <a \n                            className=\"btn btn-success btn-block p-3\" \n                            href={`mailto:${userRecord(data.user_name).email}`} \n                            target=\"_blank\" rel=\"noopener noreferrer\"\n                          ><FontAwesomeIcon icon={faEnvelope} />メールを送る</a>  \n                          </td>\n                        </tr>\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">電話で連絡</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">\n                          <a \n                            className=\"btn btn-success btn-block p-3\" \n                            href={`tel:${userRecord(data.user_name).tel}`} \n                            target=\"_blank\" rel=\"noopener noreferrer\"\n                          ><FontAwesomeIcon icon={faMobileAlt} />電話する</a>  \n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n      </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport MediaQuery from \"react-responsive\";\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\n\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.sendShoppingData(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          showShoppingStatus={(data)=>showShoppingStatus(data)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n           showShoppingStatus={(data)=>showShoppingStatus(data)}\n        />\n      </MediaQuery>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, {useState } from 'react';\nimport { Row, Col, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils, faTruck, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { chartSend } from '../store/Store';\n\nconst font ={\n  fontSize: '24px'\n}\n\nconst  Show = (props)=>{\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck);\n\n    /*ステータスによる条件訳*/\n\n    const statusLayout = ()=>{\n      switch (props.show.status) {\n        case 0:\n          return <div className=\"bg-info text-white text-center\">申請中</div>;\n        case 1:\n          return <div className=\"bg-warning text-white text-center\">加工済み</div>;\n        case 2:\n          return <div className=\"bg-danger text-white text-center\">受け渡し済み</div>;\n        default:\n          break;\n      }\n    }\n    /* ステータス変更サーバー送信 */\n    \n    const sendStatusNumber = (num)=>{\n\n       /* rails側への送信*/\n      \n       const params = {\n        id: props.show.id,\n        name: props.show.user_name,\n        status: num\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/shoppings/${props.show.id}`, params)\n      .then(function (response) {\n        /*処理後更新*/\n         axios\n            .post('https://uematsu-backend.herokuapp.com/shoppings/index', props.userkey)\n            .then((res)=>{\n              localStorage.removeItem('shoppings');\n              localStorage.setItem('shoppings', JSON.stringify(res.data));\n              props.history.push('/shoppings');\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n        axios\n        .post('https://uematsu-backend.herokuapp.com/sales')\n        .then((res)=>{\n            let action = chartSend(res.data);\n            props.dispatch(action);\n        })\n        .catch((error)=>{\n          console.log(error);\n        })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        \n      })\n      .catch(function(){\n        alert('error');\n      })\n     \n    }\n    \n  return(\n   <>\n    <div className=\"text-center mt-5\">\n      <h2 className=\"font-weight-bold\">注文状況確認/変更</h2>\n    </div>\n    <Row>\n      < Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n        {props.show? \n          <div>\n          {/*　注文情報 */ }\n\n          <Table bordered>\n            <tbody>\n              <tr>\n                <th className=\"bg-primary text-white\">商品名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{props.show.name}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">お客様名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{`${props.show.user_name}様`}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">価格</th>\n                <td className=\"font-weight-bold\">{props.show.price}</td>\n                <th className=\"bg-primary text-white\">注文数</th>\n                <td className=\"font-weight-bold\">{props.show.num}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">合計金額</th>\n                <td className=\"font-weight-bold\">{Number(props.show.price) * Number(props.show.num)}</td>\n                <th className=\"bg-primary text-white\">注文状況</th>\n                <td className=\"font-weight-bold\">{statusLayout()}</td>\n               \n              </tr>\n            </tbody>\n          </Table>\n\n          {/* 変更エリア */}\n           <p className=\"font-weight-bold\">現在の注文商品の状況を変更するには<br/>対応するボタンを押してください。</p>\n           <fieldset className=\"bg-secondary p-2\">\n            {props.show.status === 0? \n              <>\n                 <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(1)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n              /* ステータス加工済み */\n              \n              props.show.status === 1 ? \n              <>\n                 <Button \n                    variant=\"primary\"\n                    className=\"btn-block p-4 font-weight-bold text-white \"\n                    onClick={()=>sendStatusNumber(0)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                   申請中に変更\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={ faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n               /* ステータス受け渡し済み */\n\n               <>\n               <Button \n                  variant=\"primary\"\n                  className=\"btn-block p-4 font-weight-bold text-white \"\n                  onClick={()=>sendStatusNumber(0)}\n                  style={font}\n                >\n                <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                 申請中に変更\n               </Button>\n               <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(1)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n            </>\n\n            }\n           </fieldset>\n          </div>\n           : \n          ''\n        }\n      </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { todayOrderExisting } from './settiing';\nimport { timeSetting } from '../setting';\n\n /******************************従業員側明日の予約確認ページ********************************************************** */\n\nconst  Reservation = (props)=>{\n \n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-light font-weight-bold\">明日の予約一覧表</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 10, offset: 1 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         {todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).map((data,i)=>(\n           <>\n           <div className=\"font-weight-bold h3\">【{data.user_name}さん】</div>\n           <Table bordered className=\"mt-3\">\n             <tbody>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品名</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.name}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">依頼調理法</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.process}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">受け取り時間</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{timeSetting(data.receiving_time)}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品単価</th>\n                 <td className=\"font-weight-bold\">{data.price}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">注文数量</th>\n                 <td className=\"font-weight-bold\">{data.num}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">合計金額</th>\n                 <td className=\"font-weight-bold\">{data.price * data.num}</td>\n               </tr>\n               <tr>\n\n               </tr>\n             </tbody>\n           </Table>\n           </>\n         ))}\n           \n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Reservation));","/*売上速報ページ売上合計計算*/\nexport  const totalSales = (datas)=>{\n  let total = 0\n  if(datas){\n    datas.forEach((data)=>{\n      let num = data.合計? Number(data.合計) : 0;\n      total += num;\n    })\n  }\n  return total;\n \n}\n/*totalSales元に比率計算*/\nexport  const salesRate = (data, datas)=>{\n    let allTotal = totalSales(datas);\n    return data.合計? Math.floor(( Number(data.合計)  / allTotal) *100) : \"\";\n}","import  XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\n\nconst sheet_to_workbook = (sheet, opts)=>{\n  var n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n    var sheets = {}; sheets[n] = sheet;\n    return { SheetNames: [n], Sheets: sheets };\n}\nconst  aoa_to_workbook = (data, opts)=>{\n  return sheet_to_workbook(XLSX.utils.aoa_to_sheet(data, opts), opts);\n}\nconst s2ab = (s)=>{\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n export const excelExport = (datas)=>{\n  var write_opts = {\n    type: 'binary'\n  };\n  let array1 = [];\n    const keyArray = Object.keys(datas);                        //キー一覧\n    const keyCount = keyArray.length;                           //日付キー数\n    array1.push([\"日付\", \"曜日\", \"点数\",\"合計\"]);\n    for(let i=0; i< keyCount; i++){\n      array1.push(\n        [\n          datas[keyArray[i]][\"day\"],\n          datas[keyArray[i]][\"week\"],\n          datas[keyArray[i]][\"num\"],\n          datas[keyArray[i]][\"合計\"]\n        ]\n      );\n    }\n\n  var wb = aoa_to_workbook(array1);\n  var wb_out = XLSX.write(wb, write_opts);\n  var blob = new Blob([s2ab(wb_out)], { type: 'application/octet-stream' });\n  saveAs(blob, '売り上げ.xlsx');\n\n}","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\nimport { totalSales, salesRate } from './setting';\nimport { excelExport } from \"../Excel\";\n\n function PcIndex(props){\n  \n  const datas = props.chartData;\n  \n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/**************************************** */\n const downloadFile =()=>{\n    excelExport(datas);\n }\n\n  return(\n    <div>\n       <div className=\"text-center text-white mt-4\">\n        　<h1 className=\"font-weight-bold\">売上速報</h1>\n          <h3 className=\"font-weight-bold\">{`【${(new Date()).getMonth() + 1}月】`}</h3>\n       </div>\n       <ResponsiveContainer width=\"100%\" height={300} className=\"bg-white\">\n            <BarChart  data={datas} margin={{ top: 5, right: 0, left: 10, bottom: 5, }}>\n            　　 <CartesianGrid strokeDasharray=\"3 3\" />\n            　　　<XAxis dataKey=\"day\" /><YAxis />\n            　　　<Tooltip />\n                <Legend />\n                <Bar dataKey=\"合計\" fill=\"orange\" />\n            </BarChart>\n        </ResponsiveContainer>\n\n        <div className=\"text-center font-weight-bold text-white mt-4\">\n            <h3 className=\"font-weight-bold\">【売上実績合計】{ totalSales(datas) }円</h3>\n        </div>\n        <div className=\"bg-white p-5 pt-2 pb-2\">\n        {datas? \n          <div>\n            <Button \n              variant=\"success\"\n              className=\"btn-lg mb-1\"\n              onClick={downloadFile}\n            >Excel出力</Button>\n            <Table bordered>\n              <thead>\n                  <tr>\n                      <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">日付</th>\n                      <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">曜日</th>\n                      <th colSpan=\"3\" className=\"bg-primary text-white font-weight-bold text-center\">売上</th>\n                  </tr>\n                  <tr>\n                    <th className=\"bg-primary text-white font-weight-bold text-center\">販売数</th>\n                    <th className=\"bg-primary text-white font-weight-bold text-center\">売上金額</th>\n                    <th className=\"bg-primary text-white font-weight-bold text-center\">構成比(%)</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {datas.map((data)=>(\n                      <tr>\n                        <td className=\"font-weight-bold text-center\">{data.day}</td>\n                        <td className=\"font-weight-bold text-center\">{data.week}</td>\n                        <td className=\"font-weight-bold text-center\">{data.num}</td>\n                        <td className=\"font-weight-bold text-center\">{data.合計}</td>\n                        <td className=\"font-weight-bold text-center\">{ salesRate(data, datas) }</td>\n                      </tr>\n                  ))}\n              </tbody>\n           </Table>\n          </div>\n            : \n          <div className=\"bg-secondary p-5 font-weight-bold text-white text-center\">データがありません。</div>\n          }\n         \n        </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\nimport { totalSales, salesRate} from './setting';\nimport { excelExport } from \"../Excel\";\n\n\n\n function PcIndex(props){\n  const datas = props.chartData;\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/**************************************************************** */\n    const downloadFile =()=>{\n      excelExport(datas);\n   }\n  return(\n    <div className=\"w-100\">\n       <div className=\"text-center text-white mt-4\">\n        　<h1 className=\"font-weight-bold\">売上速報</h1>\n          <h3 className=\"font-weight-bold\">{`【${(new Date()).getMonth() + 1}月】`}</h3>\n       </div>\n\n       <ResponsiveContainer width=\"100%\" height={300} className=\"bg-white w-100\">\n            <BarChart  data={datas} margin={{ top: 5, right: 0, left: 10, bottom: 5, }}>\n            　　 <CartesianGrid strokeDasharray=\"3 3\" />\n            　　　<XAxis dataKey=\"date\" /><YAxis />\n            　　　<Tooltip />\n                <Legend />\n                <Bar dataKey=\"合計\" fill=\"orange\" />\n            </BarChart>\n        </ResponsiveContainer>\n\n        <div className=\"text-center font-weight-bold text-white mt-2\">\n            <h4 className=\"font-weight-bold text-primary\">【売上実績合計】{ totalSales(datas) }円</h4>\n        </div>\n        <Button \n          variant=\"success\"\n          className=\"btn-lg\"\n          onClick={downloadFile}\n        >Excel出力</Button>\n        <div className=\"bg-white w-100 pb-2\">\n          {datas? \n             <Table bordered>\n             <thead>\n                 <tr>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">日付</th>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">曜日</th>\n                     <th colSpan=\"3\" className=\"bg-primary text-white font-weight-bold text-center\">売上</th>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">販売数</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">売上金額</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">構成比(%)</th>\n                 </tr>\n             </thead>\n             <tbody>\n                 {datas.map((data)=>(\n                     <tr>\n                       <td className=\"font-weight-bold text-center\">{data.day}</td>\n                       <td className=\"font-weight-bold text-center\">{data.week}</td>\n                       <td className=\"font-weight-bold text-center\">{data.num}</td>\n                       <td className=\"font-weight-bold text-center\">{data.合計}</td>\n                       <td className=\"font-weight-bold text-center\">{ salesRate(data, datas) }</td>\n                     </tr>\n                 ))}\n             </tbody>\n         </Table>\n            : \n          <div className=\"bg-secondary p-5 font-weight-bold text-white text-center\">データがありません。</div>\n          }\n         \n        </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport MediaQuery from \"react-responsive\";\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\n\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex />\n      </MediaQuery>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport $ from 'jquery';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport axios from 'axios';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils, faUser, faDoorOpen, faShoppingCart, faUsers, faFish, faClipboard, faStore, faChartBar, faClipboardCheck, faDoorClosed, faCreditCard } from \"@fortawesome/free-solid-svg-icons\";\nimport Index from './users/Index';\nimport Login from './Login';\nimport userNew from './users/New'\nimport Edit from './users/Edit'\nimport EmployeeEdit from './users/EmployeeEdit'\nimport UserShow from './users/Show';\nimport EmpShow from './users/EmpShow';\nimport PhoneEmpShow from './users/PhoneEmpShow';\nimport UserOrder from './users/Order';\nimport ItemIndex from './items/Index';\nimport ItemNew from './items/New';\nimport ItemEdit from './items/Edit';\nimport Process from './items/Process';\nimport OrderIndex from './orders/Index';\nimport OrderNew from './orders/New';\nimport OrderEdit from './orders/Edit';\nimport CustomorIndex from './customer/Index'\nimport CustomorShow from './customer/Show'\nimport CustomorPhoneShow  from './customer/PhoneShow'\nimport Confirm from './customer/confirm';\nimport PhoneConfirm from './customer/PhoneConfirm';\nimport CustomerItemInfo from './customer/Info';\nimport CustomerItemPhoneInfo from './customer/PhneInfo';\nimport Movie from './customer/Movie';\nimport ShoppingIndex from './shopping/Index';\nimport ShoppingShow from './shopping/Show';\nimport Reservation from './shopping/Reservation';\nimport SalesIndex from './sale/Index';\nimport { connect } from \"react-redux\";\nimport { logoutAction, cartEmpty } from './store/Store';\nimport {  todayOrderExisting } from './shopping/settiing';\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport useScript from \"./useScript\";\nimport { customerTodayOrders, totalMoneyCalc } from './users/setting';\n\n function App(props){\n   let paytotal = ((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))? totalMoneyCalc(customerTodayOrders(props.userData[0].orders[0])) :0;\n   let userid = props.userData.length>0? props.userData[0].id : null;\n  useScript();\n \n  const[state, setState] = useState({\n    editId: 0,\n    deleteId: 0,\n    itemEditId:0,\n    processId: 0,\n    OrderEditId: 0,\n    customerItem: null,\n    shoppingShow: null,\n    cartItem: null\n  })\n  \n  const userlogout = ()=>{\n    let action = logoutAction();\n    props.dispatch(action);\n\n    let cartAction = cartEmpty(); /*買い物かごリセット*/\n    props.dispatch(cartAction);\n    /*買い物かご操作のリセット(ストレージ)*/\n\n    axios\n    .get('https://uematsu-backend.herokuapp.com/orders')\n    .then((res)=>{\n       localStorage.setItem('orders', JSON.stringify(res.data));\n       \n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n    setState({\n     data: JSON.parse(localStorage.getItem('orders'))\n   })\n    \n  }\n\n  const getEditId = (id)=>{\n\n    setState({\n      editId: id,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getItemEditId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: item,\n      processId: state.processId,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getProcessId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: item,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getOrderEditId = (id)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: id,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*お客様買うボタンより*/\n  const customerItem = (item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*ストック数およびお買い物リストの更新*/\n  const changeItem =(item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*個別の注文状況の表示用アイテム*/\n  const shoppingData = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: data,\n      cartItem: state.cartItem\n    })\n  }\n  /*買い物カゴ送信処理*/\n\n  const cartItem = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: data\n    })\n  }\n  /*モーダル*/\n  const modalOpen = ()=>{\n    let obj= {};\n    obj[\"id\"] = userid;\n    obj[\"total\"] = paytotal;\n    localStorage.setItem('pay', JSON.stringify(obj));\n    document.getElementById('modal-total').textContent = paytotal;\n    $('.js-modal').fadeIn();\n        return false;\n  }\n  \n  return(\n    \n    <BrowserRouter>\n    <div className='fixed-top'> \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n      <span className=\"navbar-brand text-white\"><FontAwesomeIcon icon={faUtensils} />&nbsp;\n            加工依頼アプリ</span>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n        \n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {props.userData.length >0?\n            props.userData[0].admin === true? \n             /*従業員サイド */\n            <>\n              <li class=\"nav-item pt-3 pb-3 active\">\n                <span className=\"font-weight-bold text-warning\"><FontAwesomeIcon icon={faUser} />{props.userData[0].name}さん</span>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/customor\" className=\"text-light p-3\">\n                  <FontAwesomeIcon icon={faShoppingCart} className=\"text-slight\" />\n                   お買い物\n                </Link>\n             </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/\" className=\"text-light p-3\">\n                  <FontAwesomeIcon icon={faUsers} className=\"text-slight\" />\n                    お客様一覧\n                </Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/items\" className=\"text-light p-3\">\n                  <FontAwesomeIcon icon={faFish} className=\"text-slight\" />\n                    商品一覧\n               </Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/orders\" className=\"text-light p-3\">\n                <FontAwesomeIcon icon={faStore} className=\"text-slight\" />\n                  店頭商品一覧\n               </Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/shoppings\" className=\"text-light p-3\">\n                <FontAwesomeIcon icon={faClipboard} className=\"text-slight\" />\n                  本日注文状況\n               </Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/sales\" className=\"text-light p-3\">\n                <FontAwesomeIcon icon={faChartBar} className=\"text-slight\" />\n                  売上速報\n               </Link>\n             </li>\n             {/*明日のオーダーがあれば表示*/ }\n\n             { todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).length >0? \n               <li className=\"nav-item pt-3 pb-3\">\n                 <Link to=\"/reservation\" className=\"text-light p-3\">\n                  <FontAwesomeIcon icon={faClipboardCheck} className=\"text-slight\" /> \n                    明日の予約状況\n                 </Link>\n               </li> \n              : \n              ''\n              }\n          \n            </>\n            /*お客様サイド */\n              : \n              <>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/customor\" className=\"text-light p-3\">\n                    <FontAwesomeIcon icon={faShoppingCart} />\n                     お買い物\n                  </Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users/show\" className=\"text-light p-3\">\n                    <FontAwesomeIcon icon={faUser} className=\"text-light\"/>\n                      お客様ページ\n                  </Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users/edit\" className=\"text-light p-3\">\n                   <FontAwesomeIcon icon={faClipboardCheck} className=\"text-light\"/>\n                     お客様情報編集\n                  </Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users_order\" className=\"text-light p-3\">\n                   <FontAwesomeIcon icon={faClipboardCheck} className=\"text-light\"/>\n                     注文確認\n                  </Link>\n                </li>\n\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/movie\" className=\"text-light p-3\">\n                   <FontAwesomeIcon icon={faYoutube} className=\"text-light mr-3\"/>\n                     動画検索\n                  </Link>\n                </li>\n                {paytotal >0?\n                <li className=\"nav-item\">\n                  <button type=\"button\" class=\"btn btn-secondary text-white font-weight-bold  mt-2 ml-5\" id=\"modal-push\" onClick={modalOpen}>\n                   <FontAwesomeIcon icon={faCreditCard} />\n                   先払い\n                  </button>\n                </li>\n               :\"\" }\n              </>\n            : \n            <></>\n          }\n        </ul>\n\n        <ul className=\"navbar-nav\">\n        {props.userData.length >0? \n           <li className=\"nav-item pt-3 pb-3\">\n             <button \n              className=\"logout\"\n              onClick={userlogout}\n              data-testid=\"logintrue\"\n          \n            >\n            <FontAwesomeIcon icon={faDoorOpen} />\n            ログアウト</button>\n           </li>\n          : \n          <li className=\"nav-item pt-3 pb-3\"><Link to=\"/login\" className=\"text-light p-3\" data-testid=\"loginfalse\">\n            <FontAwesomeIcon icon={faDoorClosed} />\n              ログイン\n          </Link></li>\n          }\n        </ul>\n      </div>\n      \n    </nav>\n     \n      </div><br/><br/>\n      <Route exact path=\"/\" render={()=>\n        <Index \n          editIdget={(id)=>getEditId(id)} \n        />} /> \n      <Route path=\"/login\" render={()=><Login />} />\n      <Route path=\"/users/new\" component={userNew} />\n      <Route path=\"/users/edit\" render={ () => <Edit id={props.userData.length>0 ?props.userData[0].id : ''} />} />\n      <Route path=\"/users/employee_edit\" render={ () => <EmployeeEdit id={state.editId} />} />\n      <Route path=\"/users/show\" component={UserShow} />\n      <Route path=\"/users_empshow\"  render={()=><EmpShow />} />\n      <Route path=\"/users_phone_empshow\"  render={()=><PhoneEmpShow />} />\n\n      <Route path=\"/users_order\" component={UserOrder} />\n      <Route path=\"/items\"  render={()=><ItemIndex \n        itemEditIdget={(item)=>getItemEditId(item)} \n        processIdget={(item)=>getProcessId(item)}\n        />} />\n      <Route path=\"/items_new\" component={ItemNew} />\n      <Route path=\"/items_process\" render={ () => <Process item={state.processId} />}  />\n      <Route path=\"/items_edit\" render={ () => <ItemEdit item={state.itemEditId} />}  />\n      <Route path=\"/orders\" render={()=><OrderIndex orderEditIdget={(id)=>getOrderEditId(id)} />} />\n      <Route path=\"/orders_new\" component={OrderNew} />\n      <Route path=\"/orders_edit\" render={ () => <OrderEdit id={state.OrderEditId} />} />\n      <Route path=\"/customor\"  \n        render={()=>\n        <CustomorIndex \n          sendCustomerData={(item)=>customerItem(item)} \n          sendCartItemToConfirm={(item)=>cartItem(item)}\n          fixItemData={state.customerItem}\n        />} />\n      <Route path=\"/customor_show\" \n        render={()=>\n          <CustomorShow \n            itemData={state.customerItem}\n            changeItemData={(item)=>changeItem(item)}\n      />} />\n      <Route path=\"/phone_customor_show\" \n        render={()=>\n          <CustomorPhoneShow \n            itemData={state.customerItem}\n            changeItemData={(item)=>changeItem(item)}\n      />} />\n     <Route path=\"/customer_confirm\"\n      render={()=>\n        <Confirm\n          orderData={state.cartItem}\n      />} />\n\n     <Route path=\"/phone_customer_confirm\"\n        render={()=>\n          <PhoneConfirm\n              orderData={state.cartItem}\n          />} />\n       <Route path=\"/customer_item_info\" component={CustomerItemInfo} />\n       <Route path=\"/customer_item_phone_info\" component={CustomerItemPhoneInfo} />\n       <Route path=\"/movie\" component={Movie} />\n        \n     <Route path=\"/shoppings\" \n      render={()=>\n        <ShoppingIndex \n          sendShoppingData={(data)=>shoppingData(data)}\n        />} />\n     <Route path=\"/shoppings_show\" \n      render={()=>\n        <ShoppingShow \n          show={state.shoppingShow}\n        />} />\n       <Route path=\"/reservation\" \n        render={()=>\n          <Reservation\n            \n          />} />\n      <Route path=\"/sales\" component={SalesIndex} />\n     \n    </BrowserRouter>\n  )\n}\nexport default connect((state)=>state)(App)\n\n\n\n/*\ncomponentDidMount() {\n    const fetchInit = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    fetch(new URL(process.env.REACT_APP_SERVER_URL), fetchInit)\n      .then(response => response.json())\n      .then(response => this.setState(response));\n  }\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport datastore from './store/Store';\nimport { Beforeunload } from 'react-beforeunload';\n\nReactDOM.render(\n  <Provider store={datastore}>\n    <Beforeunload onBeforeunload={() => \"data\"}>\n     <App />\n    </Beforeunload>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}